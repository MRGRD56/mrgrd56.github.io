{"version":3,"file":"static/js/9802.355732b2.chunk.js","mappings":"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","sources":["hooks/debouncedMemo.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeState.ts","hooks/useChangeStateHandler.ts","utils/doNothing.ts","hooks/useOptionalLocalstorageState.ts","hooks/useWriteableLocalstorageState.ts","layouts/pages/biConverterPageContainer/BiConverterPageContainer.module.scss","layouts/pages/biConverterPageContainer/BiConverterPageContainer.tsx","layouts/pages/pageContainer/PageContainer.tsx","layouts/pages/pageContainer/PageContainer.module.scss","components/disqusThread/DisqusThread.tsx","layouts/pages/imageConverterPageContainer/ImageConverterPageContainer.tsx","components/appImgComparisonSlider/AppImgComparisonSlider.module.scss","components/appImgComparisonSlider/AppImgComparisonSlider.tsx","utils/dataUrlToBlob.ts","utils/percentage.ts","layouts/pages/imageConverterPageContainer/components/ImageInfo.module.scss","layouts/pages/imageConverterPageContainer/components/ImageInfo.tsx","layouts/pages/imageConverterPageContainer/ImageConverterPageContainer.module.scss","components/dragAndDropLayout/DragAndDropLayout.module.scss","components/dragAndDropLayout/DragAndDropLayout.tsx","layouts/pages/imageConverterPageContainer/utils/canvasConverter.ts","pages/imageCompressorPage/ImageCompressorPage.module.scss","pages/imageCompressorPage/ImageCompressorPage.tsx","utils/antd/dummyAntdUploadRequest.ts","utils/antd/isImageFile.ts","utils/getLocalStorageKey.ts","utils/helper/promisifyFileReaderMethod.ts","utils/readFileAsDataUrl.ts"],"sourcesContent":["import { DependencyList, useEffect, useRef, useState } from 'react';\nimport { debounce, isObject, throttle } from 'lodash';\nimport { v4 } from 'uuid';\nimport call from '../utils/call';\nimport useAutoRef from './useAutoRef';\n\ninterface NoResult {\n    readonly _noResult: string;\n}\n\nconst isNoResult = <T>(value: T | NoResult, noResult: NoResult): value is NoResult => {\n    return isObject(value) && '_noResult' in value && value === noResult; //TODO just value === noResult ?\n};\n\ntype MemoFactory<R> = (noResult: NoResult) => R | Promise<R> | NoResult;\n\nconst createDebouncedMemoHook =\n    (debounceFn: typeof debounce) =>\n    <R>(factory: MemoFactory<R>, deps: DependencyList | undefined, wait?: number) => {\n        const [value, setValue] = useState<R>();\n        const factoryRef = useAutoRef(factory);\n\n        const debounceFunction = useRef(\n            call(() => {\n                const actualNoResult: NoResult = Object.freeze({\n                    _noResult: v4()\n                });\n\n                return debounceFn(async () => {\n                    const value = factoryRef.current(actualNoResult);\n\n                    if (!isNoResult(value, actualNoResult)) {\n                        setValue(await value);\n                    }\n                }, wait);\n            })\n        ).current;\n\n        useEffect(() => {\n            debounceFunction();\n        }, deps);\n\n        return value;\n    };\n\nexport const useDebouncedMemo = createDebouncedMemoHook(debounce);\nexport const useThrottledMemo = createDebouncedMemoHook(throttle);\n\n// const useDebouncedMemo = <T>(factory: () => T, deps: DependencyList | undefined, wait?: number) => {\n//     const [value, setValue] = useState<T>();\n//\n//     const timeoutRef = useRef<NodeJS.Timeout>();\n//\n//\n// };\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst doNothing = () => {};\n\nexport default doNothing;\n","import { Dispatch, SetStateAction, useMemo, useState } from 'react';\nimport { NULL_LOCALSTORAGE_KEY } from '../utils/getLocalStorageKey';\nimport doNothing from '../utils/doNothing';\nimport useWriteableLocalstorageState from './useWriteableLocalstorageState';\n\ntype UseOptionalLocalstorageStateReturnValue<S> = [S, Dispatch<SetStateAction<S>>, () => void];\n\nconst useOptionalLocalstorageState = <S>(\n    key: string | undefined,\n    initialState?: S | (() => S)\n): UseOptionalLocalstorageStateReturnValue<S> => {\n    const localstorageState = useWriteableLocalstorageState(key ?? NULL_LOCALSTORAGE_KEY, initialState);\n    const [normalState, setNormalState] = useState<S>(initialState as (() => S) | S);\n\n    return useMemo(() => {\n        if (key === undefined) {\n            return [normalState, setNormalState, doNothing];\n        }\n\n        return localstorageState;\n    }, [key, localstorageState, normalState, setNormalState]);\n};\n\nexport default useOptionalLocalstorageState;\n","import { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport { useLocalstorageState } from 'rooks';\n\ntype UseLocalstorageStateReturnValue<S> = [S, Dispatch<SetStateAction<S>>, () => void];\n\nconst useWriteableLocalstorageState = <S>(\n    key: string,\n    initialState?: S | (() => S)\n): UseLocalstorageStateReturnValue<S> => {\n    const [lsState, setLsState, resetLsState] = useLocalstorageState<S>(key, initialState);\n    const [state, setState] = useState<S>(lsState);\n\n    useEffect(() => {\n        setLsState(state as S);\n    }, [state]);\n\n    return useMemo(() => [state, setState, resetLsState], [state, setState, resetLsState]);\n};\n\nexport default useWriteableLocalstorageState;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"BiConverterPageContainer_antd-text-primary__o1B+a\",\"ant-tabs-first-tab-indent\":\"BiConverterPageContainer_ant-tabs-first-tab-indent__CLaaD\",\"ant-tabs-tab\":\"BiConverterPageContainer_ant-tabs-tab__89fgL\",\"ant-tabs-no-w100-but-max\":\"BiConverterPageContainer_ant-tabs-no-w100-but-max__R6tPe\",\"ant-tabs-tabpane\":\"BiConverterPageContainer_ant-tabs-tabpane__gnkcR\",\"pageContainer\":\"BiConverterPageContainer_pageContainer__fssmY\",\"container\":\"BiConverterPageContainer_container__TfcIY\",\"col\":\"BiConverterPageContainer_col__MvUHW\",\"colLeft\":\"BiConverterPageContainer_colLeft__MYCMl\",\"colLeftNoRight\":\"BiConverterPageContainer_colLeftNoRight__gnvOr\",\"colHeader\":\"BiConverterPageContainer_colHeader__stxpZ\",\"colTitle\":\"BiConverterPageContainer_colTitle__to0rW\"};","import React, { FunctionComponent, ReactNode } from 'react';\nimport PageContainer, { PageContainerProps } from '../pageContainer/PageContainer';\nimport styles from './BiConverterPageContainer.module.scss';\nimport { Col, Row } from 'antd';\nimport classNames from 'classnames';\n\ninterface Props extends PageContainerProps {\n    leftTitle?: ReactNode;\n    rightTitle?: ReactNode;\n\n    leftTitleExtra?: ReactNode;\n    rightTitleExtra?: ReactNode;\n\n    left?: ReactNode;\n    right?: ReactNode;\n\n    extra?: ReactNode;\n\n    noHeader?: boolean;\n    noRight?: boolean;\n\n    leftColSize?: number;\n}\n\nconst BiConverterPageContainer: FunctionComponent<Props> = (props) => {\n    const {\n        leftTitle,\n        rightTitle,\n        leftTitleExtra,\n        rightTitleExtra,\n        left,\n        right,\n        extra,\n        children,\n        className,\n        noPadding,\n        noHeader,\n        noRight,\n        leftColSize = 12,\n        ...pageProps\n    } = props;\n\n    return (\n        <PageContainer\n            noPadding={noPadding ?? true}\n            className={classNames(styles.pageContainer, className)}\n            {...pageProps}\n        >\n            <Row className={styles.container}>\n                <Col\n                    xs={noRight ? 24 : leftColSize}\n                    className={classNames(styles.col, styles.colLeft, noRight && styles.colLeftNoRight)}\n                >\n                    {!noHeader && (\n                        <div className={styles.colHeader}>\n                            <h3 className={styles.colTitle}>{leftTitle}</h3>\n                            {leftTitleExtra}\n                        </div>\n                    )}\n                    {noRight ? <Col xs={leftColSize}>{left}</Col> : left}\n                </Col>\n                {!noRight && (\n                    <Col xs={24 - leftColSize} className={classNames(styles.col, styles.colRight)}>\n                        {!noHeader && (\n                            <div className={styles.colHeader}>\n                                <h3 className={styles.colTitle}>{rightTitle}</h3>\n                                {rightTitleExtra}\n                            </div>\n                        )}\n                        {right}\n                    </Col>\n                )}\n                {extra}\n            </Row>\n            {children}\n        </PageContainer>\n    );\n};\n\nexport default BiConverterPageContainer;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__0XdUl\",\"noPadding\":\"PageContainer_noPadding__8qKdC\",\"noContentPadding\":\"PageContainer_noContentPadding__e8KpM\",\"headingContainer\":\"PageContainer_headingContainer__oss+6\",\"contentContainer\":\"PageContainer_contentContainer__1pGdM\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","import React, {\n    Dispatch,\n    FunctionComponent,\n    ReactNode,\n    SetStateAction,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState\n} from 'react';\nimport { Button, Image, Tabs, Upload } from 'antd';\nimport BiConverterPageContainer from '../biConverterPageContainer/BiConverterPageContainer';\nimport AppImgComparisonSlider from '../../../components/appImgComparisonSlider/AppImgComparisonSlider';\nimport { useDebouncedMemo } from '../../../hooks/debouncedMemo';\nimport useOptionalLocalstorageState from '../../../hooks/useOptionalLocalstorageState';\nimport { DownloadOutlined, SwapLeftOutlined, UploadOutlined } from '@ant-design/icons';\nimport TabChangeHandler from '../../../types/antd/TabChangeHandler';\nimport Text from 'antd/lib/typography/Text';\nimport Flex from '../../../components/flex/Flex';\nimport dummyAntdUploadRequest from '../../../utils/antd/dummyAntdUploadRequest';\nimport isImageFile from '../../../utils/antd/isImageFile';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport readFileAsDataUrl from '../../../utils/readFileAsDataUrl';\nimport dataUrlToBlob from '../../../utils/dataUrlToBlob';\nimport { isNil } from 'lodash';\nimport ImageInfo from './components/ImageInfo';\nimport styles from './ImageConverterPageContainer.module.scss';\nimport DragAndDropLayout, { DragAndDropLayoutRef } from '../../../components/dragAndDropLayout/DragAndDropLayout';\n\nenum ViewTab {\n    COMPARE = 'COMPARE',\n    ORIGINAL = 'ORIGINAL',\n    RESULT = 'RESULT'\n}\n\nexport interface ImageOptionsComponentProps<O> {\n    options: O;\n    onOptionsChange: Dispatch<SetStateAction<O>>;\n}\n\nexport type ImageOptionsComponent<O> = FunctionComponent<ImageOptionsComponentProps<O>>;\n\nexport type ImageConvertWithOptions<O> = (sourceImage: string, options: O) => string | Promise<string>;\nexport type ImageConvertNoOptions = (sourceImage: string) => string | Promise<string>;\n\ninterface BaseProps<O> {\n    sourceTitle?: string;\n    resultTitle?: string;\n    noImageInfo?: boolean;\n    className?: string;\n}\n\ninterface PropsWithOptions<O> extends BaseProps<O> {\n    convert: ImageConvertWithOptions<O>;\n    defaultOptions: O;\n    optionsStorageKey: string;\n    renderOptionsContainer: ImageOptionsComponent<O>;\n}\n\ninterface PropsWithoutOptions extends BaseProps<undefined> {\n    convert: ImageConvertNoOptions;\n    defaultOptions?: never;\n    optionsStorageKey?: never;\n    renderOptionsContainer?: never;\n}\n\ntype Props<O> = PropsWithOptions<O> | PropsWithoutOptions;\n\nconst ImageConverterPageContainer = <O,>(props: Props<O>) => {\n    const {\n        sourceTitle = 'Options',\n        resultTitle = 'Preview',\n        noImageInfo,\n        convert,\n        defaultOptions,\n        optionsStorageKey,\n        renderOptionsContainer,\n        className\n    } = props;\n\n    const dndLayoutRef = useRef<DragAndDropLayoutRef>(null);\n\n    useEffect(() => {\n        dndLayoutRef.current?.fileUpload$.subscribe(console.log);\n    }, []);\n\n    const [options, setOptions] = useOptionalLocalstorageState<O>(optionsStorageKey, defaultOptions);\n    const [viewTab, setViewTab] = useState<ViewTab>(ViewTab.COMPARE);\n\n    const [isUploading, setIsUploading] = useState<boolean>(false);\n\n    const [sourceImageSrc, setSourceImageSrc] = useState<string>();\n    const resultImageSrc = useDebouncedMemo<string | undefined>(\n        async () => {\n            if (!sourceImageSrc) {\n                return;\n            }\n\n            return convert(sourceImageSrc, options);\n        },\n        [sourceImageSrc, options, convert],\n        100\n    );\n\n    const sourceImageBlob = useMemo(() => {\n        return isNil(sourceImageSrc) ? undefined : dataUrlToBlob(sourceImageSrc);\n    }, [sourceImageSrc]);\n\n    const resultImageBlob = useMemo(() => {\n        return isNil(resultImageSrc) ? undefined : dataUrlToBlob(resultImageSrc);\n    }, [resultImageSrc]);\n\n    const optionsContainer = useMemo<ReactNode | undefined>(() => {\n        if (!renderOptionsContainer) {\n            return;\n        }\n\n        const OptionsComponent = renderOptionsContainer;\n        return <OptionsComponent options={options} onOptionsChange={setOptions} />;\n    }, [renderOptionsContainer, options]);\n\n    const handleUploadedImageChange = useCallback(async (value: UploadChangeParam<UploadFile<unknown>>) => {\n        const { file } = value;\n\n        if (file.status === 'uploading') {\n            setIsUploading(true);\n            return;\n        }\n\n        const blob = file.originFileObj;\n\n        if (blob) {\n            setSourceImageSrc(await readFileAsDataUrl(blob));\n        }\n\n        setIsUploading(false);\n    }, []);\n\n    const handleDndFilesUpload = useCallback(async (files: FileList) => {\n        setSourceImageSrc(await readFileAsDataUrl(files[0]));\n\n        // const filesIterator = files[Symbol.iterator]();\n        //\n        // let fileResult = filesIterator.next();\n        // while (!fileResult.done) {\n        //     const isImage = isImageFile(fileResult.value);\n        //     if (isImage) {\n        //         setSourceImageSrc(await readFileAsDataUrl(fileResult.value));\n        //\n        //         break;\n        //     }\n        //\n        //     fileResult = filesIterator.next();\n        // }\n    }, []);\n\n    const setResultAsSource = () => {\n        if (resultImageSrc) {\n            setSourceImageSrc(resultImageSrc);\n        }\n    };\n\n    return (\n        <DragAndDropLayout checkFile={isImageFile} onFilesUpload={handleDndFilesUpload}>\n            <BiConverterPageContainer\n                className={className}\n                leftTitle={sourceTitle}\n                rightTitle={resultTitle}\n                rightTitleExtra={\n                    <Flex row gap={6}>\n                        <Button type=\"text\" icon={<SwapLeftOutlined />} onClick={setResultAsSource}>\n                            <span className=\"d-none d-sm-inline\">Set as source</span>\n                        </Button>\n                        <a download href={resultImageSrc}>\n                            <Button type=\"text\" icon={<DownloadOutlined />}>\n                                <span className=\"d-none d-sm-inline\">Download</span>\n                            </Button>\n                        </a>\n                    </Flex>\n                }\n                leftColSize={9}\n                left={\n                    <Flex col gap={10} className=\"p-2\">\n                        <Upload\n                            multiple={false}\n                            listType=\"text\"\n                            showUploadList={false}\n                            beforeUpload={isImageFile}\n                            onChange={handleUploadedImageChange}\n                            accept=\"image/*, *\"\n                            customRequest={dummyAntdUploadRequest}\n                        >\n                            <Button type=\"primary\" icon={<UploadOutlined />} loading={isUploading && { delay: 50 }}>\n                                Upload image...\n                            </Button>\n                        </Upload>\n\n                        {optionsContainer}\n                    </Flex>\n                }\n                noRight={!sourceImageSrc}\n                right={\n                    sourceImageSrc ? (\n                        <Tabs\n                            activeKey={viewTab}\n                            onChange={setViewTab as TabChangeHandler}\n                            tabBarExtraContent={null}\n                            className=\"ant-tabs-first-tab-indent ant-tabs-no-w100-but-max\"\n                        >\n                            <Tabs.TabPane key={ViewTab.COMPARE} tab=\"Compare\">\n                                <Flex col className=\"w-100\">\n                                    <div className={styles.imageWrapper}>\n                                        <AppImgComparisonSlider\n                                            fit\n                                            src1={sourceImageSrc}\n                                            src2={resultImageSrc}\n                                            // src1=\"https://img-comparison-slider.sneas.io/demo/images/before.webp\"\n                                            // src2=\"https://img-comparison-slider.sneas.io/demo/images/after.webp\"\n                                        />\n                                    </div>\n                                    {!noImageInfo && sourceImageBlob && resultImageBlob && (\n                                        <ImageInfo blob={sourceImageBlob} blob2={resultImageBlob} />\n                                    )}\n                                </Flex>\n                            </Tabs.TabPane>\n                            <Tabs.TabPane key={ViewTab.ORIGINAL} tab=\"Original\">\n                                <Flex col>\n                                    <div className={styles.imageWrapper}>\n                                        <Image src={sourceImageSrc} />\n                                    </div>\n                                    {!noImageInfo && sourceImageBlob && <ImageInfo blob={sourceImageBlob} />}\n                                </Flex>\n                            </Tabs.TabPane>\n                            <Tabs.TabPane key={ViewTab.RESULT} tab=\"Result\">\n                                <Flex col>\n                                    <div className={styles.imageWrapper}>\n                                        <Image src={resultImageSrc} />\n                                    </div>\n                                    {!noImageInfo && resultImageBlob && <ImageInfo blob={resultImageBlob} />}\n                                </Flex>\n                            </Tabs.TabPane>\n                        </Tabs>\n                    ) : (\n                        <Text className=\"p-2\">\n                            <h4>Upload your image first</h4>\n                        </Text>\n                    )\n                }\n            />\n        </DragAndDropLayout>\n    );\n};\n\nexport default ImageConverterPageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AppImgComparisonSlider_container__wSwkX\",\"fit\":\"AppImgComparisonSlider_fit__aIOPb\",\"image\":\"AppImgComparisonSlider_image__bYEop\"};","import React, { AllHTMLAttributes, ChangeEventHandler, FunctionComponent } from 'react';\nimport { ImgComparisonSlider } from '@img-comparison-slider/react';\nimport classNames from 'classnames';\nimport styles from './AppImgComparisonSlider.module.scss';\n\ntype HTMLImgComparisonSliderElement = HTMLElement & {\n    value: number;\n    hover: boolean;\n    direction: string;\n};\ntype ImgComparisonSliderProps = AllHTMLAttributes<HTMLImgComparisonSliderElement> & {\n    value?: number | string;\n    hover?: boolean;\n    direction?: string;\n    keyboard?: 'enabled' | 'disabled';\n    onSlide?: ChangeEventHandler<HTMLImgComparisonSliderElement>;\n};\ninterface Props extends ImgComparisonSliderProps {\n    src1: string | undefined;\n    src2: string | undefined;\n    fit?: boolean;\n}\n\nconst AppImgComparisonSlider: FunctionComponent<Props> = ({ src1, src2, fit, className, ...props }) => {\n    return (\n        <ImgComparisonSlider className={classNames(styles.container, fit && styles.fit, className)} {...props}>\n            <img className={styles.image} slot=\"first\" src={src1} />\n            <img className={styles.image} slot=\"second\" src={src2} />\n        </ImgComparisonSlider>\n    );\n};\n\nexport default AppImgComparisonSlider;\n","//based on https://stackoverflow.com/a/12300351\nconst dataUrlToBlob = (dataUrl: string): Blob => {\n    const byteString = window.atob(dataUrl.split(',')[1]);\n\n    const mimeString = dataUrl.split(',')[0].split(':')[1].split(';')[0];\n\n    const ab = new ArrayBuffer(byteString.length);\n\n    const ia = new Uint8Array(ab);\n\n    for (let i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ab], { type: mimeString });\n};\n\nexport default dataUrlToBlob;\n","import { round } from 'lodash';\n\nconst percentage = (value: number, total: number, precision = 2): number => {\n    return round((value / total) * 100, precision);\n};\n\nexport default percentage;\n","// extracted by mini-css-extract-plugin\nexport default {\"comparisonArrow\":\"ImageInfo_comparisonArrow__Fouso\"};","import React, { FunctionComponent } from 'react';\nimport prettyBytes from 'pretty-bytes';\nimport Flex from '../../../../components/flex/Flex';\nimport { ArrowRightAlt, Warning } from '@mui/icons-material';\nimport percentage from '../../../../utils/percentage';\nimport Text from 'antd/lib/typography/Text';\nimport styles from './ImageInfo.module.scss';\n\ninterface Props {\n    blob: Blob;\n    blob2?: Blob;\n}\n\nconst ImageInfo: FunctionComponent<Props> = ({ blob, blob2 }) => {\n    const sizePercentage = blob2 ? percentage(blob2.size, blob.size) : 0;\n    const isOversize = sizePercentage >= 101;\n\n    return (\n        <Flex col className=\"m-2\">\n            <Flex row align=\"center\">\n                Size: {prettyBytes(blob.size)}\n                {blob2 && (\n                    <>\n                        <div className={styles.comparisonArrow}>\n                            <ArrowRightAlt fontSize=\"small\" />\n                        </div>\n                        {prettyBytes(blob2.size)}&nbsp;\n                        <Text type={isOversize ? 'danger' : 'secondary'}>({sizePercentage}%)</Text>\n                        {isOversize && (\n                            <Text type=\"warning\" className=\"p-0 ms-1 d-flex\">\n                                <Warning fontSize=\"small\" />\n                            </Text>\n                        )}\n                    </>\n                )}\n            </Flex>\n            <Flex row align=\"center\">\n                Type: {blob.type}\n                {blob2 && blob2.type !== blob.type ? (\n                    <>\n                        <div className={styles.comparisonArrow}>\n                            <ArrowRightAlt fontSize=\"small\" />\n                        </div>\n                        {blob2.type}\n                    </>\n                ) : undefined}\n            </Flex>\n        </Flex>\n    );\n};\n\nexport default ImageInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"imageWrapper\":\"ImageConverterPageContainer_imageWrapper__7vPFs\"};","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"DragAndDropLayout_antd-text-primary__AKhYj\",\"ant-tabs-first-tab-indent\":\"DragAndDropLayout_ant-tabs-first-tab-indent__16A6+\",\"ant-tabs-tab\":\"DragAndDropLayout_ant-tabs-tab__vluX2\",\"ant-tabs-no-w100-but-max\":\"DragAndDropLayout_ant-tabs-no-w100-but-max__KtQRK\",\"ant-tabs-tabpane\":\"DragAndDropLayout_ant-tabs-tabpane__mnvBK\",\"container\":\"DragAndDropLayout_container__vyox2\",\"dragOverlay\":\"DragAndDropLayout_dragOverlay__qL-0C\",\"dragging\":\"DragAndDropLayout_dragging__1lt-2\",\"draggingOver\":\"DragAndDropLayout_draggingOver__YzKlp\",\"dragOverlayBorder\":\"DragAndDropLayout_dragOverlayBorder__DPq+o\",\"dragOverlayMain\":\"DragAndDropLayout_dragOverlayMain__dvjpu\",\"dropIcon\":\"DragAndDropLayout_dropIcon__1VSyJ\",\"infoText\":\"DragAndDropLayout_infoText__EL98x\"};","import React, { ReactNode, useImperativeHandle, useRef, useState } from 'react';\nimport styles from './DragAndDropLayout.module.scss';\nimport { Observable, Subject } from 'rxjs';\nimport classNames from 'classnames';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { useWindowEventListener } from 'rooks';\n\nexport interface DragAndDropLayoutRef {\n    container: HTMLDivElement;\n    fileUpload$: Observable<FileList>;\n}\n\ninterface Props {\n    children?: ReactNode;\n    onFilesUpload?: (files: FileList) => void;\n    checkFile?: (file: Blob | DataTransferItem) => boolean;\n}\n\nconst DragAndDropLayout = React.forwardRef<DragAndDropLayoutRef, Props>(\n    ({ onFilesUpload, checkFile, children }, ref) => {\n        const [isDragging, setIsDragging] = useState<boolean>(false);\n        const [isDraggingOver, setIsDraggingOver] = useState<boolean>(false);\n\n        const containerRef = useRef<HTMLDivElement>(null);\n        const fileUpload$Ref = useRef<Subject<FileList>>(new Subject<FileList>());\n        const dragEntersCountRef = useRef<number>(0);\n        const dragOverEntersCountRef = useRef<number>(0);\n\n        useImperativeHandle(\n            ref,\n            () => {\n                if (!containerRef.current) {\n                    return {} as DragAndDropLayoutRef;\n                }\n\n                return {\n                    container: containerRef.current,\n                    fileUpload$: fileUpload$Ref.current.asObservable()\n                };\n            },\n            []\n        );\n\n        const handleDragEnter = (event: React.DragEvent<HTMLDivElement>) => {\n            event.preventDefault();\n\n            const dataTransferItems = event.dataTransfer.items;\n            if (checkFile && Array.from(dataTransferItems).every((item) => !checkFile(item))) {\n                return;\n            }\n\n            setIsDraggingOver(true);\n            dragEntersCountRef.current++;\n        };\n\n        const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n            event.preventDefault();\n        };\n\n        const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n            setIsDragging(false);\n            setIsDraggingOver(false);\n            dragEntersCountRef.current = 0;\n            dragOverEntersCountRef.current = 0;\n\n            const { files } = event.dataTransfer;\n\n            const matchingFiles = checkFile ? Array.from(files).filter(checkFile) : files;\n\n            if (!matchingFiles.length) {\n                return;\n            }\n\n            event.preventDefault();\n\n            fileUpload$Ref.current.next(files);\n            onFilesUpload?.(files);\n        };\n\n        const handleDragLeave = (event: React.DragEvent<HTMLDivElement>) => {\n            dragEntersCountRef.current--;\n            if (dragEntersCountRef.current <= 0) {\n                setIsDraggingOver(false);\n                dragEntersCountRef.current = 0;\n            }\n        };\n\n        useWindowEventListener('dragenter', (event: DragEvent) => {\n            const dataTransferItems = event.dataTransfer?.items ?? [];\n            if (checkFile && Array.from(dataTransferItems).every((item) => !checkFile(item))) {\n                return;\n            }\n\n            event.preventDefault();\n            setIsDragging(true);\n            dragOverEntersCountRef.current++;\n        });\n\n        useWindowEventListener('dragleave', (event) => {\n            dragOverEntersCountRef.current--;\n            if (dragOverEntersCountRef.current <= 0) {\n                setIsDragging(false);\n                dragOverEntersCountRef.current = 0;\n            }\n        });\n\n        useWindowEventListener('dragover', (event) => {\n            event.preventDefault();\n        });\n\n        useWindowEventListener('drop', (event) => {\n            setIsDragging(false);\n            setIsDraggingOver(false);\n            dragEntersCountRef.current = 0;\n            dragOverEntersCountRef.current = 0;\n        });\n\n        const handlePaste = (event: React.ClipboardEvent<HTMLDivElement>) => {\n            const { files } = event.clipboardData;\n\n            const matchingFiles = checkFile ? Array.from(files).filter(checkFile) : files;\n            if (!matchingFiles.length) {\n                return;\n            }\n\n            fileUpload$Ref.current.next(files);\n            onFilesUpload?.(files);\n        };\n\n        return (\n            <div\n                ref={containerRef}\n                className={classNames('focus-visible-unstyled', styles.container)}\n                tabIndex={0}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                // onDragStart={handleDragStart}\n                onDragEnter={handleDragEnter}\n                onDragLeave={handleDragLeave}\n                // onDragExit={handleDragExit}\n                // onDragEnd={handleDragExit}\n                onPaste={handlePaste}\n            >\n                {children}\n                <div\n                    className={classNames(\n                        styles.dragOverlay,\n                        (isDragging || isDraggingOver) && styles.dragging,\n                        isDraggingOver && styles.draggingOver\n                    )}\n                >\n                    <div className={styles.dragOverlayBorder}>\n                        <div className={styles.dragOverlayMain}>\n                            <DownloadOutlined className={styles.dropIcon} />\n                            <div className={styles.infoText}>Drop your files here</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n);\n\nexport default DragAndDropLayout;\n","import { ImageConvertNoOptions, ImageConvertWithOptions } from '../ImageConverterPageContainer';\n\nfunction canvasConverter(\n    convert: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D) => string | void\n): ImageConvertNoOptions;\nfunction canvasConverter<O>(\n    convert: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, options: O) => string | void\n): ImageConvertWithOptions<O>;\nfunction canvasConverter<O>(\n    convert: (canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, options?: O) => string | void\n): ImageConvertNoOptions | ImageConvertWithOptions<O> {\n    return (sourceDataUrl: string, options: O) =>\n        new Promise((resolve, reject) => {\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            if (!context) {\n                throw new Error('Unable to get 2d context');\n            }\n\n            const img = new Image();\n            img.onload = () => {\n                canvas.width = img.width;\n                canvas.height = img.height;\n                context.drawImage(img, 0, 0, img.width, img.height);\n\n                const conversionResult = convert(canvas, context, options);\n                const result = conversionResult === undefined ? canvas.toDataURL('image/png') : conversionResult;\n\n                canvas.remove();\n                img.remove();\n                resolve(result);\n            };\n            img.onerror = reject;\n            img.src = sourceDataUrl;\n        });\n}\n\nexport default canvasConverter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ImageCompressorPage_container__l9Z+v\",\"label\":\"ImageCompressorPage_label__9372-\",\"labelText\":\"ImageCompressorPage_labelText__jAkwU\",\"input\":\"ImageCompressorPage_input__pAXzz\"};","import React, { FunctionComponent } from 'react';\nimport ImageConverterPageContainer, {\n    ImageOptionsComponent\n} from '../../layouts/pages/imageConverterPageContainer/ImageConverterPageContainer';\nimport canvasConverter from '../../layouts/pages/imageConverterPageContainer/utils/canvasConverter';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport Flex from '../../components/flex/Flex';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport { InputNumber, Select, Slider } from 'antd';\nimport styles from './ImageCompressorPage.module.scss';\nimport { isNil } from 'lodash';\n\ninterface Options {\n    format: string;\n    quality: number | undefined;\n}\n\nconst defaultOptions: Options = {\n    format: 'image/jpeg',\n    quality: 70\n};\n\nconst compressibleTypes = ['image/jpeg', 'image/webp'];\n\nconst convert = canvasConverter<Options>((canvas, context, options) => {\n    const isCompressible = compressibleTypes.includes(options.format);\n    const quality = isCompressible && !isNil(options.quality) ? options.quality / 100 : undefined;\n\n    return canvas.toDataURL(options.format || 'image/jpeg', quality);\n});\n\nconst OptionsComponent: ImageOptionsComponent<Options> = ({ options, onOptionsChange }) => {\n    const handleOptionChange = useChangeStateHandler(onOptionsChange);\n\n    return (\n        <Flex col gap={6}>\n            <label className={styles.label}>\n                <span className={styles.labelText}>Format</span>\n                <Select value={options.format} onChange={handleOptionChange('format')} className={styles.input}>\n                    <Select.Option key=\"image/png\">PNG</Select.Option>\n                    <Select.Option key=\"image/jpeg\">JPEG</Select.Option>\n                    <Select.Option key=\"image/webp\">WEBP</Select.Option>\n                </Select>\n            </label>\n            {compressibleTypes.includes(options.format) && (\n                <>\n                    <label className={styles.label}>\n                        <span className={styles.labelText}>Quality</span>\n                        <InputNumber\n                            value={options.quality}\n                            onChange={handleOptionChange('quality')}\n                            placeholder=\"0-100%\"\n                            min={0}\n                            max={100}\n                            className={styles.input}\n                            // formatter={value => value ? `${value}%` : (value as any)}\n                            // parser={value => !value ? (undefined as any) : Number(value.replace('%', ''))}\n                        />\n                    </label>\n                    <Slider value={options.quality} onChange={handleOptionChange('quality')} min={0} max={100} />\n                </>\n            )}\n        </Flex>\n    );\n};\n\nconst ImageCompressorPage: FunctionComponent = () => {\n    return (\n        <ImageConverterPageContainer\n            sourceTitle=\"Image Compressor\"\n            convert={convert}\n            defaultOptions={defaultOptions}\n            renderOptionsContainer={OptionsComponent}\n            optionsStorageKey={getLocalStorageKey('image-compressor', 'options')}\n            className={styles.container}\n        />\n    );\n};\n\nexport default ImageCompressorPage;\n","const dummyAntdUploadRequest = ({ onSuccess }: { onSuccess?: (response: string) => void }) => {\n    setTimeout(() => {\n        onSuccess?.('ok');\n    }, 0);\n};\n\nexport default dummyAntdUploadRequest;\n","const isImageFile = (file: Blob | DataTransferItem) => {\n    return /^image\\/.+$/.test(file.type);\n};\n\nexport default isImageFile;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","const promisifyFileReaderMethod = <R extends string | ArrayBuffer>(invocation: (reader: FileReader) => void) => {\n    return new Promise<R>((resolve, reject) => {\n        const reader = new FileReader();\n\n        const handleLoad = (event: FileReaderEventMap['load']) => {\n            reader.removeEventListener('load', handleLoad);\n            resolve(event.target?.result as R);\n        };\n\n        const handleError = (event: FileReaderEventMap['error']) => {\n            reader.removeEventListener('error', handleError);\n            reject(event);\n        };\n\n        reader.addEventListener('load', handleLoad);\n        reader.addEventListener('error', handleError);\n\n        invocation(reader);\n    });\n};\n\nexport default promisifyFileReaderMethod;\n","import promisifyFileReaderMethod from './helper/promisifyFileReaderMethod';\n\nconst readFileAsDataUrl = (blob: Blob): Promise<string> =>\n    promisifyFileReaderMethod<string>((reader) => {\n        reader.readAsDataURL(blob);\n    });\n\nexport default readFileAsDataUrl;\n"],"names":["isNoResult","value","noResult","isObject","createDebouncedMemoHook","debounceFn","factory","deps","wait","useState","setValue","factoryRef","useAutoRef","debounceFunction","useRef","call","actualNoResult","Object","freeze","_noResult","v4","current","useEffect","useDebouncedMemo","debounce","throttle","isChangeEvent","setState","property","actualValue","target","useCallback","key","state","changeState","useChangeState","initialState","localstorageState","useWriteableLocalstorageState","NULL_LOCALSTORAGE_KEY","normalState","setNormalState","useMemo","undefined","doNothing","useLocalstorageState","lsState","setLsState","resetLsState","props","leftTitle","rightTitle","leftTitleExtra","rightTitleExtra","left","right","extra","children","className","noPadding","noHeader","noRight","leftColSize","pageProps","classNames","styles","xs","PageTag","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","config","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","renderTag","tag","index","WIP","color","icon","NOT_WORKING","getTagNodes","React","title","description","titleExtra","tags","noContentPadding","contentClassName","contentRef","withComments","restProps","renderedTags","map","length","direction","size","ViewTab","src1","src2","fit","ImgComparisonSlider","slot","src","dataUrl","byteString","atob","split","mimeString","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","Blob","type","total","precision","round","blob","blob2","sizePercentage","percentage","isOversize","col","row","align","prettyBytes","fontSize","onFilesUpload","checkFile","isDragging","setIsDragging","isDraggingOver","setIsDraggingOver","containerRef","fileUpload$Ref","Subject","dragEntersCountRef","dragOverEntersCountRef","useImperativeHandle","container","fileUpload$","asObservable","useWindowEventListener","event","dataTransferItems","dataTransfer","items","Array","from","every","item","preventDefault","tabIndex","onDrop","files","filter","next","onDragOver","onDragEnter","onDragLeave","onPaste","clipboardData","sourceTitle","resultTitle","noImageInfo","convert","defaultOptions","optionsStorageKey","renderOptionsContainer","dndLayoutRef","subscribe","console","log","useOptionalLocalstorageState","options","setOptions","COMPARE","viewTab","setViewTab","isUploading","setIsUploading","sourceImageSrc","setSourceImageSrc","resultImageSrc","sourceImageBlob","isNil","dataUrlToBlob","resultImageBlob","optionsContainer","OptionsComponent","onOptionsChange","handleUploadedImageChange","file","status","originFileObj","readFileAsDataUrl","handleDndFilesUpload","isImageFile","gap","onClick","download","href","multiple","listType","showUploadList","beforeUpload","onChange","accept","customRequest","dummyAntdUploadRequest","loading","delay","activeKey","tabBarExtraContent","tab","ORIGINAL","RESULT","sourceDataUrl","Promise","resolve","reject","canvas","document","createElement","context","getContext","Error","img","Image","onload","width","height","drawImage","conversionResult","result","toDataURL","remove","onerror","format","quality","compressibleTypes","canvasConverter","includes","handleOptionChange","useChangeStateHandler","placeholder","min","max","getLocalStorageKey","onSuccess","setTimeout","test","scope","name","invocation","reader","FileReader","addEventListener","handleLoad","removeEventListener","handleError","promisifyFileReaderMethod","readAsDataURL"],"sourceRoot":""}