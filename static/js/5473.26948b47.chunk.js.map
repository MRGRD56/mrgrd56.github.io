{"version":3,"file":"static/js/5473.26948b47.chunk.js","mappings":"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","sources":["hooks/debouncedMemo.ts","hooks/useArrayStateMutator.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeState.ts","hooks/useChangeStateHandler.ts","hooks/useStateProducer.ts","hooks/useWriteableLocalstorageState.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/disqusThread/DisqusThread.tsx","pages/tinkoff5BukvSolverPage/types/index.ts","webpack://mrgrd56.github.io/./src/pages/tinkoff5BukvSolverPage/Tinkoff5BukvSolverPage.module.scss?692a","pages/tinkoff5BukvSolverPage/utils/getNextLetterType.ts","pages/tinkoff5BukvSolverPage/utils/point2d.ts","utils/checkIsMobile.ts","pages/tinkoff5BukvSolverPage/components/Tinkoff5BukvCell.tsx","pages/tinkoff5BukvSolverPage/components/Tinkoff5BukvWord.tsx","pages/tinkoff5BukvSolverPage/types/T5bGame.ts","pages/tinkoff5BukvSolverPage/assets/tinkoff5bukvWords.ts","pages/tinkoff5BukvSolverPage/utils/solveT5bGame.ts","pages/tinkoff5BukvSolverPage/Tinkoff5BukvSolverPage.tsx","utils/getLocalStorageKey.ts","utils/produceState.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { DependencyList, useEffect, useRef, useState } from 'react';\nimport { debounce, isObject, throttle } from 'lodash';\nimport { v4 } from 'uuid';\nimport call from '../utils/call';\nimport useAutoRef from './useAutoRef';\n\ninterface NoResult {\n    readonly _noResult: string;\n}\n\nconst isNoResult = <T>(value: T | NoResult, noResult: NoResult): value is NoResult => {\n    return isObject(value) && '_noResult' in value && value === noResult; //TODO just value === noResult ?\n};\n\ntype MemoFactory<R> = (noResult: NoResult) => R | Promise<R> | NoResult;\n\nconst createDebouncedMemoHook =\n    (debounceFn: typeof debounce) =>\n    <R>(factory: MemoFactory<R>, deps: DependencyList | undefined, wait?: number) => {\n        const [value, setValue] = useState<R>();\n        const factoryRef = useAutoRef(factory);\n\n        const debounceFunction = useRef(\n            call(() => {\n                const actualNoResult: NoResult = Object.freeze({\n                    _noResult: v4()\n                });\n\n                return debounceFn(async () => {\n                    const value = factoryRef.current(actualNoResult);\n\n                    if (!isNoResult(value, actualNoResult)) {\n                        setValue(await value);\n                    }\n                }, wait);\n            })\n        ).current;\n\n        useEffect(() => {\n            debounceFunction();\n        }, deps);\n\n        return value;\n    };\n\nexport const useDebouncedMemo = createDebouncedMemoHook(debounce);\nexport const useThrottledMemo = createDebouncedMemoHook(throttle);\n\n// const useDebouncedMemo = <T>(factory: () => T, deps: DependencyList | undefined, wait?: number) => {\n//     const [value, setValue] = useState<T>();\n//\n//     const timeoutRef = useRef<NodeJS.Timeout>();\n//\n//\n// };\n","import { Dispatch, SetStateAction, useMemo } from 'react';\nimport useStateProducer from './useStateProducer';\n\nconst useArrayStateMutator = <T>(setState: Dispatch<SetStateAction<T[]>>) => {\n    const produceState = useStateProducer(setState);\n\n    return useMemo(() => {\n        const add = (...items: T[]) => setState((state) => [...state, ...items]);\n        const changeByIndex = (index: number, newItem: T) =>\n            produceState((state) => {\n                state[index] = newItem;\n            });\n        const updateByIndex = (index: number, newItem: (oldItem: T) => T) =>\n            produceState((state) => {\n                const oldItem = state[index];\n                if (oldItem === undefined) {\n                    return;\n                }\n\n                changeByIndex(index, newItem(oldItem));\n            });\n        const removeByIndex = (index: number) =>\n            produceState((state) => {\n                state.splice(index, 1);\n            });\n        const fpChangeByIndex = (index: number) => (newItem: T) => changeByIndex(index, newItem);\n        const fpUpdateByIndex = (index: number) => (newItem: (oldItem: T) => T) => updateByIndex(index, newItem);\n        const fpRemoveByIndex = (index: number) => () => removeByIndex(index);\n        const clear = () => setState([]);\n\n        return {\n            add,\n            changeByIndex,\n            updateByIndex,\n            removeByIndex,\n            fpChangeByIndex,\n            fpUpdateByIndex,\n            fpRemoveByIndex,\n            clear\n        };\n    }, [setState]);\n};\n\nexport default useArrayStateMutator;\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","import { Dispatch, SetStateAction, useEffect, useMemo, useState } from 'react';\nimport { useLocalstorageState } from 'rooks';\n\ntype UseLocalstorageStateReturnValue<S> = [S, Dispatch<SetStateAction<S>>, () => void];\n\nconst useWriteableLocalstorageState = <S>(\n    key: string,\n    initialState?: S | (() => S)\n): UseLocalstorageStateReturnValue<S> => {\n    const [lsState, setLsState, resetLsState] = useLocalstorageState<S>(key, initialState);\n    const [state, setState] = useState<S>(lsState);\n\n    useEffect(() => {\n        setLsState(state as S);\n    }, [state]);\n\n    return useMemo(() => [state, setState, resetLsState], [state, setState, resetLsState]);\n};\n\nexport default useWriteableLocalstorageState;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","export enum T5bLetterType {\n    ABSENT = 'ABSENT',\n    MISPOSITIONED = 'MISPOSITIONED',\n    FOUND = 'FOUND'\n}\n\nexport interface T5bLetter {\n    value: string | undefined;\n    type: T5bLetterType;\n}\n\nexport interface T5bWord {\n    letters: T5bLetter[];\n}\n\nexport interface Point2D {\n    x: number;\n    y: number;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"Tinkoff5BukvSolverPage_antd-text-primary__K46V3\",\"ant-tabs-first-tab-indent\":\"Tinkoff5BukvSolverPage_ant-tabs-first-tab-indent__rjtKw\",\"ant-tabs-tab\":\"Tinkoff5BukvSolverPage_ant-tabs-tab__aoxJT\",\"ant-tabs-no-w100-but-max\":\"Tinkoff5BukvSolverPage_ant-tabs-no-w100-but-max__yflic\",\"ant-tabs-tabpane\":\"Tinkoff5BukvSolverPage_ant-tabs-tabpane__wd--z\",\"field\":\"Tinkoff5BukvSolverPage_field__MHzdF\",\"cellLabel\":\"Tinkoff5BukvSolverPage_cellLabel__hx2eP\",\"cellInput\":\"Tinkoff5BukvSolverPage_cellInput__2ExUB\",\"cell\":\"Tinkoff5BukvSolverPage_cell__plepd\",\"typeMissing\":\"Tinkoff5BukvSolverPage_typeMissing__7F7mO\",\"typeMispositioned\":\"Tinkoff5BukvSolverPage_typeMispositioned__eeeAC\",\"typePresent\":\"Tinkoff5BukvSolverPage_typePresent__GJcQR\",\"cellActive\":\"Tinkoff5BukvSolverPage_cellActive__wS0ps\",\"solutionContainer\":\"Tinkoff5BukvSolverPage_solutionContainer__EUgp5\",\"solutionCounter\":\"Tinkoff5BukvSolverPage_solutionCounter__OcBs2\",\"solutionWordsContainer\":\"Tinkoff5BukvSolverPage_solutionWordsContainer__mbI5X\",\"solutionWord\":\"Tinkoff5BukvSolverPage_solutionWord__+4+5c\",\"infoModalExampleLettersContainer\":\"Tinkoff5BukvSolverPage_infoModalExampleLettersContainer__l3FIx\",\"infoModalExampleLetter\":\"Tinkoff5BukvSolverPage_infoModalExampleLetter__rkuzw\"};","import { T5bLetterType } from '../types';\n\nconst nextTypes: Record<T5bLetterType, T5bLetterType> = {\n    [T5bLetterType.ABSENT]: T5bLetterType.MISPOSITIONED,\n    [T5bLetterType.MISPOSITIONED]: T5bLetterType.FOUND,\n    [T5bLetterType.FOUND]: T5bLetterType.ABSENT\n};\n\nconst getNextLetterType = (currentType: T5bLetterType) => {\n    return nextTypes[currentType];\n};\n\nexport default getNextLetterType;\n","import { Point2D } from '../types';\n\nconst point2d = (x: number, y: number): Point2D => ({ x, y });\n\nexport default point2d;\n","const checkIsMobile = (): boolean => {\n    let check = false;\n    (function (a) {\n        if (\n            /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n                a\n            ) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n                a.substr(0, 4)\n            )\n        )\n            check = true;\n    })(navigator.userAgent || navigator.vendor || (window as any).opera);\n    return check;\n};\n\nexport default checkIsMobile;\n\nexport const IS_MOBILE = checkIsMobile();\n","import React, { CSSProperties, FC, useCallback, useEffect, useRef } from 'react';\nimport { Point2D, T5bLetter, T5bLetterType } from '../types';\nimport styles from '../Tinkoff5BukvSolverPage.module.scss';\nimport classNames from 'classnames';\nimport getNextLetterType from '../utils/getNextLetterType';\nimport point2d from '../utils/point2d';\nimport { IS_MOBILE } from '../../../utils/checkIsMobile';\n\ninterface Props {\n    letter: T5bLetter;\n    onChange?: (letter: T5bLetter) => void;\n    active?: boolean;\n    onActivate?: () => void;\n    onChangeActiveCell?: (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => void;\n    className?: string;\n    style?: CSSProperties;\n    cardClassName?: string;\n    cardStyle?: CSSProperties;\n    readOnly?: boolean;\n}\n\nconst Tinkoff5BukvCell: FC<Props> = ({\n    letter,\n    onChange,\n    active,\n    onActivate,\n    onChangeActiveCell,\n    className,\n    style,\n    cardClassName,\n    cardStyle,\n    readOnly\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const typeClassName = {\n        [T5bLetterType.ABSENT]: styles.typeMissing,\n        [T5bLetterType.MISPOSITIONED]: styles.typeMispositioned,\n        [T5bLetterType.FOUND]: styles.typePresent\n    }[letter.type];\n\n    const handleCellClick = useCallback(\n        (event: React.MouseEvent) => {\n            event.stopPropagation();\n\n            if (!active) {\n                onActivate?.();\n                return;\n            }\n\n            onChange?.({\n                ...letter,\n                type: getNextLetterType(letter.type)\n            });\n        },\n        [active, onActivate, onChange, letter]\n    );\n\n    const handleCellInnerClick = useCallback((event: React.MouseEvent) => {\n        event.stopPropagation();\n    }, []);\n\n    const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const nativeEvent = event.nativeEvent as InputEvent;\n\n        event.preventDefault();\n\n        const insertedLetter = nativeEvent.data;\n\n        if (\n            !insertedLetter ||\n            !/[абвгдеёжзийклмнопрстуфхцчшщъыьэюя]/i.test(insertedLetter) ||\n            insertedLetter.length > 1\n        ) {\n            return;\n        }\n\n        const letters = insertedLetter.replace(/ё/gi, 'Е').toUpperCase();\n\n        if (!letters) {\n            return;\n        }\n\n        const lastLetter = letters[letters.length - 1];\n        event.currentTarget.value = lastLetter;\n\n        onChange?.({\n            ...letter,\n            value: lastLetter\n        });\n        if (lastLetter) {\n            onChangeActiveCell?.(point2d(1, 0), false, true);\n        }\n    };\n\n    const handleBeforeInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const nativeEvent = event.nativeEvent as InputEvent;\n\n        const eventData = nativeEvent.data ?? (nativeEvent as unknown as KeyboardEvent).key;\n\n        if (!eventData || !/[абвгдеёжзийклмнопрстуфхцчшщъыьэюя]/i.test(eventData)) {\n            event.preventDefault();\n            return;\n        }\n\n        event.currentTarget.value = '';\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === ' ' || event.code === 'Space') {\n            onChange?.({\n                ...letter,\n                type: getNextLetterType(letter.type)\n            });\n            return;\n        }\n\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n            event.currentTarget.value = '';\n            onChange?.({\n                ...letter,\n                value: undefined\n            });\n\n            if (event.key === 'Backspace') {\n                onChangeActiveCell?.(point2d(-1, 0), false, true);\n            } else {\n                onChangeActiveCell?.(point2d(1, 0), true, true);\n            }\n        }\n    };\n\n    const handleContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n\n        onChange?.({\n            ...letter,\n            type: getNextLetterType(letter.type)\n        });\n\n        if (IS_MOBILE) {\n            navigator.vibrate?.(50);\n        }\n    };\n\n    useEffect(() => {\n        if (active) {\n            inputRef.current?.focus();\n        }\n    }, [active]);\n\n    return (\n        <label className={classNames(styles.cellLabel, className)} onClick={handleCellClick} style={style}>\n            <div\n                className={classNames(styles.cell, typeClassName, active && styles.cellActive, cardClassName)}\n                onContextMenu={handleContextMenu}\n                style={cardStyle}\n            >\n                {letter.value?.trim() || <>&nbsp;</>}\n            </div>\n            <input\n                ref={inputRef}\n                type=\"url\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                unselectable=\"on\"\n                pattern=\"[АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя]\"\n                className={styles.cellInput}\n                onClick={handleCellInnerClick}\n                onBeforeInput={handleBeforeInput}\n                onInputCapture={handleInput}\n                onKeyDown={handleKeyDown}\n                readOnly={readOnly}\n            />\n        </label>\n    );\n};\n\nexport default Tinkoff5BukvCell;\n","import React, { FC, useCallback } from 'react';\nimport { Point2D, T5bLetter, T5bWord } from '../types';\nimport Tinkoff5BukvCell from './Tinkoff5BukvCell';\nimport Flex from '../../../components/flex/Flex';\n\ninterface Props {\n    word: T5bWord;\n    onChange?: (letters: T5bWord) => void;\n    activeLetterIndex?: number | undefined;\n    onActiveLetterIndexChange?: (letterIndex: number | undefined) => void;\n    onChangeActiveCell?: (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => void;\n}\n\nconst Tinkoff5BukvWord: FC<Props> = ({\n    word,\n    onChange,\n    activeLetterIndex,\n    onActiveLetterIndexChange,\n    onChangeActiveCell\n}) => {\n    const handleLetterChange = useCallback(\n        (changedIndex: number) => (changedLetter: T5bLetter) => {\n            onChange?.({\n                ...word,\n                letters: word.letters.map((letter, index) => {\n                    if (index !== changedIndex) {\n                        return letter;\n                    }\n\n                    return changedLetter;\n                })\n            });\n        },\n        [word, onChange]\n    );\n\n    const handleLetterActivate = useCallback(\n        (index: number) => () => {\n            onActiveLetterIndexChange?.(index);\n        },\n        [onChange]\n    );\n\n    return (\n        <Flex gap={10} row wrap=\"nowrap\">\n            {word.letters.map((letter, index) => (\n                <Tinkoff5BukvCell\n                    key={index}\n                    letter={letter}\n                    onChange={handleLetterChange(index)}\n                    active={activeLetterIndex !== undefined && activeLetterIndex === index}\n                    onActivate={handleLetterActivate(index)}\n                    onChangeActiveCell={onChangeActiveCell}\n                />\n            ))}\n        </Flex>\n    );\n};\n\nexport default Tinkoff5BukvWord;\n","import { T5bLetter, T5bLetterType, T5bWord } from './index';\n\ninterface PositionedLetter {\n    position: number;\n    letter: string;\n}\n\nclass T5bGame {\n    readonly absentLetters: string[];\n    readonly mispositionedLetters: Record<string, Set<number>>;\n    readonly foundLetters: PositionedLetter[];\n\n    constructor(words: T5bWord[]) {\n        const normalizedWords: { letters: (T5bLetter | undefined)[] }[] = words.map((word) => {\n            return {\n                ...word,\n                letters: word.letters.map((letter) => {\n                    if (!letter.value) {\n                        return undefined;\n                    }\n\n                    return {\n                        ...letter,\n                        value: letter.value?.toLowerCase()\n                    };\n                })\n            };\n        });\n\n        this.absentLetters = normalizedWords\n            .flatMap((word) => word.letters)\n            .filter((letter) => letter?.type === T5bLetterType.ABSENT)\n            .map((letter) => letter?.value as string);\n\n        this.mispositionedLetters = {};\n        normalizedWords.forEach((word) => {\n            word.letters.forEach((letter, letterIndex) => {\n                if (letter && letter.type === T5bLetterType.MISPOSITIONED) {\n                    const letterValue = letter.value as string;\n                    if (this.mispositionedLetters[letterValue]) {\n                        this.mispositionedLetters[letterValue] = new Set([\n                            ...Array.from(this.mispositionedLetters[letterValue]),\n                            letterIndex\n                        ]);\n                    } else {\n                        this.mispositionedLetters[letterValue] = new Set([letterIndex]);\n                    }\n                }\n            });\n        });\n\n        this.foundLetters = [];\n        normalizedWords.forEach((word) => {\n            word.letters.forEach((letter, letterIndex) => {\n                if (letter && letter.type === T5bLetterType.FOUND) {\n                    this.foundLetters.push({\n                        position: letterIndex,\n                        letter: letter.value as string\n                    });\n                }\n            });\n        });\n\n        console.log({ this: this });\n    }\n}\n\nexport default T5bGame;\n","const wordsRaw = `\nвремя\nзнать\nстать\nжизнь\nслово\nместо\nничто\nчерез\nконец\nчасть\nгород\nникто\nземля\nправо\nдверь\nобраз\nзакон\nвойна\nголос\nкнига\nчисло\nнарод\nформа\nсвязь\nулица\nвечер\nмысль\nмесяц\nшкола\nтеатр\nрубль\nсмысл\nорган\nрынок\nсемья\nцентр\nответ\nавтор\nстена\nсовет\nглава\nнаука\nплечо\nточка\nпалец\nномер\nметод\nфильм\nгость\nрайон\nкровь\nармия\nкласс\nгерой\nспина\nсцена\nберег\nфирма\nзавод\nпесня\nроман\nповод\nмалый\nуспех\nвыход\nтекст\nпункт\nлиния\nсреда\nволос\nветер\nогонь\nгрудь\nстрах\nсумма\nсфера\nвчера\nплохо\nмужик\nнемец\nвыбор\nмасса\nслава\nкухня\nотдел\nтовар\nслеза\nвывод\nнорма\nрамка\nрежим\nцелое\nвирус\nпоиск\nналог\nдоход\nкарта\nсорок\nакция\nфраза\nсосед\nтолпа\nсхема\nволна\nптица\nзапах\nводка\nпоезд\nадрес\nлидер\nстиль\nвесна\nэпоха\nзапад\nтайна\nтрава\nфронт\nмузей\nкнязь\nсутки\nсудья\nкрыша\nпоток\nчесть\nеврей\nсотня\nдождь\nтруба\nосень\nпьеса\nчерта\nкусок\nбилет\nмасло\nэкран\nканал\nвагон\nдурак\nсезон\nзапас\nдлина\nокруг\nкрыло\nдоска\nпакет\nживот\nсмена\nпорог\nбуква\nлодка\nсерия\nшутка\nкулак\nнефть\nцифра\nсапог\nмешок\nотказ\nзамок\nдиван\nпокой\nдобро\nспорт\nкость\nмайор\nотдых\nручка\nмечта\nсюжет\nрубеж\nкрест\nвзрыв\nпочва\nзаказ\nштука\nсумка\nхвост\nпесок\nозеро\nстрой\nдочка\nтанец\nнабор\nгорло\nплата\nсъезд\nкошка\nпятно\nткань\nокеан\nвизит\nпауза\nствол\nтепло\nрадио\nнация\nзверь\nбанка\nметро\nобмен\nтоска\nзабор\nмороз\nмарка\nгрязь\nспрос\nмотор\nсевер\nсклад\nмотив\nарест\nотряд\nнужда\nсобор\nсалон\nкапля\nпожар\nхолод\nобида\nвклад\nтуман\nрукав\nгонка\nатака\nигрок\nтонна\nвождь\nорден\nюноша\nбабка\nвызов\nполка\nбровь\nудача\nбытие\nшапка\nложка\nбелок\nголод\nохота\nветка\nтариф\nбашня\nагент\nгений\nсахар\nблаго\nсмесь\nразум\nплита\nбрюки\nмышца\nпосол\nпачка\nшоссе\nикона\nхалат\nидеал\nлента\nбомба\nштамм\nущерб\nархив\nштаны\nпоход\nморда\nпроза\nмаска\nопера\nшляпа\nведро\nлампа\nмалыш\nоблик\nкопия\nуголь\nустав\nсудно\nчашка\nэлита\nпочта\nветвь\nпалка\nстолб\nактив\nангел\nштраф\nотель\nножка\nмышка\nсвеча\nгрань\nблюдо\nскала\nтакси\nзерно\nфорум\nсосна\nпапка\nблеск\nстепь\nпламя\nтреть\nпевец\nречка\nфинал\nнедра\nзнамя\nдевка\nрюмка\nобщее\nисход\nзвено\nгрипп\nпечка\nплоть\nпилот\nсамец\nчереп\nбочка\nгараж\nсосуд\nсклон\nпоэма\nлавка\nкисть\nбокал\nкойка\nидиот\nякорь\nдрова\nопора\nворот\nфизик\nтопор\nбарон\nбарак\nкукла\nносок\nжених\nобувь\nпринц\nпушка\nбедро\nсетка\nпорыв\nсарай\nопрос\nстарт\nшкура\nдрака\nпроба\nмусор\nказак\nморяк\nхимия\nсамка\nтуфля\nплемя\nмадам\nкубок\nягода\nбитва\nмонах\nдырка\nграмм\nпобег\nбазар\nдрама\nотбор\nспирт\nкузов\nванна\nрыбак\nканон\nребро\nфрукт\nвдова\nказнь\nвесть\nбалет\nручей\nпение\nнавык\nвзвод\nкасса\nщенок\nвздох\nюрист\nшахта\nбукет\nтираж\nшпион\nтезис\nжилец\nструя\nзалог\nочерк\nбуфет\nсдача\nжажда\nпасть\nнитка\nрояль\nпацан\nсуета\nтайга\nнаряд\nпетля\nпласт\nобман\nшарик\nрычаг\nзлоба\nпеснь\nстадо\nглина\nвыезд\nзакат\nобзор\nвисок\nзавет\nискра\nпогон\nслуга\nвзнос\nкрыса\nсынок\nкульт\nдовод\nчайка\nспуск\nобыск\nгрунт\nкупол\nотзыв\nзаряд\nпозор\nкатер\nвопль\nцыган\nалмаз\nтупик\nобряд\nминус\nполяк\nтропа\nрельс\nферма\nпирог\nгорка\nтабак\nсталь\nтварь\nпочка\nиспуг\nзалив\nпетух\nфокус\nвилка\nаллея\nпоказ\nовраг\nполюс\nгроза\nрусло\nолень\nбудка\nрыбка\nрубка\nсалат\nбанда\nобрыв\nборец\nхохот\nперец\nмайка\nкомар\nпират\nпарус\nстенд\nислам\nхутор\nбиржа\nисток\nфасад\nпытка\nистец\nтурок\nэтика\nвиски\nобком\nсеанс\nновое\nвлага\nмэрия\nпалач\nтреск\nклоун\nссора\nбашка\nсплав\nмедик\nскука\nнасос\nшкала\nласка\nарена\nимидж\nтитул\nкиоск\nпарта\nповар\nзатея\nпарад\nпучок\nгазон\nпятка\nсиняк\nкрона\nрывок\nштурм\nседло\nпепел\nпорок\nкаюта\nкупец\nсдвиг\nкишка\nдрожь\nштора\nпусто\nбремя\nфюрер\nпафос\nкепка\nмиска\nчулок\nместь\nбагаж\nманеж\nсвист\nдрянь\nкумир\nсадик\nазарт\nгудок\nквота\nлимон\nстопа\nбелка\nобход\nслюна\nролик\nоклад\nбетон\nкамин\nпульт\nмерка\nгамма\nгруда\nродня\nвахта\nафиша\nшорох\nособа\nдонос\nштамп\nбрюхо\nбланк\nгруша\nдемон\nскрип\nтесто\nталия\nмагия\nсквер\nвышка\nлапка\nвилла\nскула\nпчела\nкучка\nабзац\nпасха\nфранк\nбугор\nнапор\nказна\nвесло\nбалка\nчервь\nкубик\nдосуг\nвихрь\nкосяк\nвенец\nшашка\nнюанс\nчудак\nпульс\nвылет\nвъезд\nглубь\nшишка\nсвита\nотсек\nприют\nакула\nкража\nфакел\nшланг\nлилия\nкорка\nдиета\nвенок\nарбуз\nрубин\nканат\nдуэль\nхолст\nбаран\nмафия\nколея\nрация\nизнос\nкомок\nробот\nглыба\nфланг\nрифма\nизгиб\nэскиз\nнутро\nхимик\nбухта\nтачка\nфиниш\nманер\nаборт\nвальс\nчукча\nсокол\nкаска\nброня\nвозня\nсалют\nопека\nдебют\nподол\nдевиз\nбаржа\nтолща\nмакет\nрента\nвывоз\nшприц\nкаток\nотрыв\nуклон\nтесть\nкофта\nнедуг\nжулик\nотбой\nособь\nвеник\nтрест\nсироп\nнавоз\nбогач\nощупь\nвишня\nсыщик\nсмола\nкапот\nдонор\nвидео\nдымок\nсопка\nбарин\nотвод\nзаход\nвыкуп\nматка\nустье\nзенит\nлунка\nпосев\nжитие\nбанан\nпресс\nпарик\nканун\nнавес\nссуда\nоткос\nсабля\nшторм\nордер\nуклад\nжилка\nаванс\nпешка\nузник\nтракт\nотход\nшасси\nулика\nполис\nэтнос\nкрупа\nдробь\nмираж\nзабой\nметла\nталон\nгубка\nсекта\nлоток\nсауна\nсенат\nмачта\nпорох\nшакал\nпрядь\nавось\nтахта\nлимит\nраунд\nзавал\nгорох\nшрифт\nстраж\nдымка\nпаста\nсукно\nфилин\nзаезд\nтопик\nгетто\nсинод\nозноб\nтопот\nмолот\nграфа\nкабак\nзагар\nхруст\nгладь\nчехол\nлинза\nвалун\nбайка\nвыпад\nничья\nуксус\nлеший\nиудей\nнажим\nвзмах\nвожак\nмойка\nштрих\nбычок\nносик\nнаезд\nкефир\nбрань\nкивок\nпорча\nлавра\nатлас\nмятеж\nвиток\nтрата\nсосок\nустой\nсозыв\nбулат\nнотка\nшпага\nворох\nрыжик\nфишка\nвычет\nдозор\nшейка\nмякиш\nразок\nяичко\nкудри\nслива\nлопух\nщепка\nотчим\nпудра\nсмута\nпомин\nполог\nловля\nшалаш\nбатон\nгрива\nакциз\nзапой\nворон\nпурга\nврата\nкочка\nкамыш\nдубль\nнаган\nкабан\nгалка\nнемка\nлакей\nчугун\nшпана\nширма\nфлора\nшаман\nальфа\nтенор\nсмета\nрезон\nгряда\nшайка\nвздор\nгайка\nметан\nтопка\nкомод\nосина\nотпор\nрожок\nгусар\nдосье\nкурок\nфанат\nмасть\nохват\nтыква\nлицей\nдрево\nжилет\nчрево\nвыдох\nтитан\nфауна\nсанки\nамбар\nчасик\nореол\nвотум\nмушка\nдетка\nшайба\nберет\nбулка\nконус\nалкаш\nлапша\nтанго\nлазер\nхобби\nваряг\nсушка\nтиран\nкелья\nдогма\nобвал\nсмотр\nсотка\nокрик\nбутон\nукроп\nфлюид\nаминь\nзапор\nшлюха\nтумба\nфужер\nтомик\nднище\nумник\nгольф\nглавк\nересь\nэмаль\nпинок\nказах\nшпиль\nхмель\nотрок\nмания\nчужак\nлютик\nизъян\nиврит\nбраво\nпаром\nмамка\nкалий\nуступ\nтонус\nсучок\nблоха\nладья\nвырез\nэгида\nнорка\nножик\nрулон\nгорец\nглушь\nкраса\nобрез\nузбек\nярлык\nкучер\nнакал\nпайка\nшубка\nторец\nвожжа\nпотоп\nотвар\nгазик\nпупок\nкроха\nволхв\nпашня\nбуран\nчешуя\nослик\nклерк\nмасон\nмолва\nдекан\nотлив\nзасов\nляжка\nплеть\nлеска\nшпала\nпосох\nвынос\nмумия\nсклеп\nрознь\nмазут\nтомат\nзазор\nзажим\nтулуп\nобруч\nтелец\nсброс\nрвота\nсифон\nвогул\nспазм\nтабор\nтюбик\nбуфер\nдекор\nполив\nколос\nпятак\nхвала\nварка\nзелье\nотток\nлямка\nзайка\nастра\nскоба\nбачок\nзавуч\nнабег\nбазис\nопись\nметка\nзубец\nегерь\nножны\nдамба\nжучок\nделец\nртуть\nареал\nдебри\nтранс\nперст\nосада\nговор\nбасня\nлотос\nубыль\nотвал\nдесна\nжердь\nтакса\nспица\nаршин\nстолп\nгонец\nфляга\nвираж\nлиана\nрубец\nфасон\nюнкер\nтраур\nкореш\nафера\nшлейф\nокунь\nангар\nшмель\nиндус\nказус\nбидон\nшельф\nбойня\nшквал\nтурне\nжетон\nчулан\nтембр\nкулик\nплеск\nзагон\nхобот\nвалик\nкаста\nстужа\nщиток\nкотик\nсмерч\nпицца\nпижон\nбирюк\nпобои\nоазис\nгодик\nциник\nлатыш\nбисер\nхиппи\nпесец\nвояка\nжесть\nпанно\nприма\nкороб\nкадка\nоплот\nпосад\nзамер\nломка\nлокон\nтапка\nаркан\nлевша\nлесть\nдебил\nродич\nкредо\nизыск\nджинн\nдятел\nтазик\nколба\nсовок\nпонос\nнаказ\nхохол\nтушка\nгниль\nпойма\nбочок\nладан\nпивко\nранка\nрезец\nтерем\nсудак\nплаха\nизгой\nшажок\nплато\nтоник\nгарем\nтабло\nкопна\nпушок\nгамак\nкураж\nпадеж\nостов\nфугас\nуазик\nчурка\nкадет\nбубен\nугода\nоткат\nтягач\nзадор\nмарля\nмазок\nадепт\nтанин\nхлыст\nтабун\nвьюга\nастма\nнарта\nкварц\nсонет\nлесок\nкювет\nрумын\nдрозд\nрадар\nкадык\nсамбо\nкушак\nлихва\nкобра\nабвер\nсачок\nдавка\nпопка\nпикет\nмаляр\nнахал\nрокот\nрупор\nгнида\nхакер\nкузен\nкруиз\nбрешь\nпочин\nтрель\nсопля\nалиби\nчудик\nолово\nхолуй\nкисет\nфикус\nдумец\nкольт\nопала\nжираф\nдупло\nчернь\nдзюдо\nясень\nснедь\nслизь\nтиски\nпихта\nфинка\nдрема\nагнец\nбалда\nкокон\nдудка\nмерин\nзапал\nкупон\nатлет\nверфь\nстезя\nконюх\nяство\nгалоп\nклише\nвенгр\nлепта\nингуш\nтяжба\nэстет\nкожух\nорава\nкирка\nчасок\nоргия\nшумок\nудаль\nходок\nловец\nвокал\nбурка\nсвояк\nфренч\nфраер\nвольт\nдомен\nротор\nчужое\nмразь\nферзь\nжакет\nзубок\nтруха\nбегун\nутеха\nскарб\nнакат\nмесье\nкомик\nпенис\nропот\nгомон\nавеню\nлайка\nокрас\nлепка\nвалет\nазиат\nмошка\nботва\nхолоп\nпекло\nзанос\nнапев\nзадел\nпомои\nпяток\nрампа\nизлом\nрядно\nквант\nсупер\nтипаж\nкросс\nампер\nхомут\nгелий\nшпора\nлыжня\nаорта\nмуфта\nобгон\nосока\nевнух\nпенка\nчалма\nсвора\nлепет\nлирик\nплешь\nоткуп\nкалач\nшуруп\nпряжа\nжелчь\nбыдло\nмалец\nлучик\nнимфа\nвобла\nдужка\nоскал\nшериф\nсидор\nампир\nобуза\nпрофи\nпрыть\nкарма\nфенол\nягуар\nрэкет\nситец\nкочан\nкачка\nштиль\nжрица\nвуаль\nпомпа\nблажь\nпорез\nомлет\nмирок\nскотч\nволок\nэллин\nкакао\nнавар\nкруча\nфлирт\nцапля\nканва\nотжиг\nстриж\nбрага\nсмрад\nкулон\nдрейф\nхворь\nболид\nмочка\nпойло\nкосмы\nпокос\nполоз\nгрыжа\nторос\nтучка\nмуляж\nбирка\nмесса\nзатор\nмарал\nштырь\nпсина\nунтер\nугорь\nзебра\nтаран\nрадон\nранец\nбляха\nвылов\nневод\nотвес\nкарат\nлобби\nомега\nольха\nтрико\nтюфяк\nблуза\nрейка\nтычок\nфазан\nчитка\nпосыл\nрезня\nрожон\nбадья\nухват\nбосяк\nфотон\nпепси\nтрюмо\nопиум\nпшено\nствор\nзаика\nщегол\nсоска\nсырок\nбагор\nнадел\nтранш\nрысак\nгвалт\nларец\nптаха\nверба\nпокер\nвыдел\nсилок\nсленг\nдачка\nцинга\nслайд\nбугай\nлитер\nотгул\nвихор\nписец\nотара\nосыпь\nхохма\nкукиш\nдебит\nзабег\nзамах\nпозыв\nпенал\nаббат\nзатон\nпикап\nшурин\nжерло\nлишек\nлобок\nсброд\nсбруя\nаскет\nседок\nвинцо\nкатар\nненец\nнарыв\nкляча\nторба\nмоток\nборов\nбордо\nвязка\nредис\nспесь\nкашка\nнерпа\nвафля\nрезка\nсилач\nзамша\nсвара\nмулла\nвиола\nмодус\nкайма\nиндюк\nпосул\nдамка\nпиала\nзагул\nхолка\nшхуна\nпалас\nжатва\nденди\nкиска\nбакен\nбурда\nотрог\nдушок\nротик\nбылое\nдрель\nкулич\nямщик\nгодок\nинтим\nсаван\nгриль\nбронх\nледок\nструп\nлимфа\nсюита\nпыжик\nтелок\nминор\nзавоз\nманто\nфакир\nпошив\nмилка\nпорка\nмулат\nбизон\nморок\nсопло\nупырь\nмидия\nдонец\nдонна\nабрек\nвзлом\nсноха\nнабат\nчарка\nшулер\nанонс\nхалва\nханжа\nгашиш\nогрех\nфурор\nчечен\nпарча\nлейка\nночка\nкулеш\nряска\nхерес\nюниор\nлужок\nаврал\nшифер\nзарок\nгонор\nзомби\nброшь\nпопса\nредут\nрепка\nкварк\nхунта\nдлань\nодурь\nплеер\nотрез\nстроп\nсваха\nбарыш\nоблом\nрусак\nгумно\nгейша\nшатун\nчтиво\nгидра\nгиена\nлабаз\nбитум\nглист\nхатка\nфобия\nбобик\nфавор\nвывих\nтриба\nтреба\nклеть\nнавет\nнагар\nсурок\nсотая\nкатод\nобжиг\nизвив\nиерей\nрокер\nрозга\nрешка\nотлов\nрахит\nпышка\nзевок\nватка\nплева\nтщета\nмелок\nхорей\nлубок\nмилок\nокись\nналим\nцедра\nсодом\nфреза\nэркер\nманго\nфрант\nлежак\nровик\nотпад\nхомяк\nклюка\nпенье\nшнапс\nариец\nзагиб\nпомол\nлитий\nизвоз\nсофит\nтелик\nлобик\nсошка\nивняк\nбекон\nгогот\nпакля\nсглаз\nпуфик\nребус\nвыдра\nабрис\nпросо\nвазон\nвтора\nсенцы\nнолик\nдомна\nмажор\nлемма\nчабан\nгуашь\nмазня\nманна\nфлокс\nклуня\nлогик\nтвист\nклика\nландо\nбожок\nспрей\nигрек\nпитон\nтромб\nстела\nамвон\nнадой\nфетиш\nвыгон\nбридж\nжинка\nпатио\nжирок\nколье\nоброк\nровня\nоклик\nсилос\nикота\nрядок\nсинус\nвыпас\nхурма\nотжим\nкумач\nутеря\nобвод\nесаул\nмосол\nшатен\nвятич\nкарга\nкокос\nхитон\nжучка\nрачок\nдушка\nбурят\nкарел\nноров\nленок\nжупел\nсазан\nлихач\nискус\nлишай\nколок\nаргон\nгусли\nшалун\nмураш\nшавка\nчушка\nдебет\nковка\nдебош\nтесак\nкладь\nлетун\nмитра\nштрек\nкельт\nунция\nакрил\nстояк\nзачин\nколун\nтурка\nфиник\nщебет\nспора\nлиман\nфуфло\nслюда\nнырок\nлипка\nпилка\nхабар\nленца\nрикша\nхалиф\nветла\nвешка\nкагор\nдылда\nломик\nдубок\nпугач\nвакса\nчубик\nчуваш\nбагет\nолива\nтамга\nкашне\nспрут\nосман\nдышло\nлевак\nклико\nпомор\nмопед\nколер\nтумак\nтулья\nацтек\nвалок\nсосец\nаллюр\nмысок\nжарка\nатолл\nсойка\nмирра\nхлябь\nголыш\nкошма\nфагот\nфурия\nотсев\nрвань\nботик\nшкода\nгаусс\nкупля\nбубна\nутиль\nпешня\nмизер\nкаппа\nбатог\nездок\nсатин\nскетч\nинжир\nсадок\nвидик\nгобой\nкузня\nгросс\nкайло\nпатлы\nалыча\nкирха\nкисея\nзаумь\nолифа\nлаваш\nпошиб\nбурун\nчепец\nказан\nанион\nтунец\nкосая\nслега\nлютня\nселен\nудерж\nшихта\nпрель\nгалун\nмахра\nзарез\nцацка\nкурья\nборок\nшваль\nжокей\nкорча\nфеска\nдерби\nвалка\nдедок\nгусак\nбитюг\nкиста\nфомка\nскаут\nлапта\nбеляк\nаскер\nаспид\nвалуй\nхаджи\nмагма\nмедяк\nрадий\nкамея\nабхаз\nполип\nюннат\nмымра\nкресс\nвысев\nхазар\nманси\nметис\nбарка\nсакля\nбурак\nзлато\nлучок\nдумка\nбасок\nбалык\nсурик\nтопаз\nлоция\nомуль\nбутса\nзамес\nкумыс\nомела\nбрасс\nкраля\nвепрь\nрупия\nулита\nбонза\nгуляш\nмолох\nплюха\nмосье\nтреух\nвраль\nвраки\nтипун\nтемка\nаргус\nкрага\nфаянс\nтавро\nмамба\nвозок\nкинза\nкрепь\nстраз\nдичок\nкащей\nкашпо\nкроль\nгопак\nдойка\nфорте\nлевит\nфураж\nсмерд\nармяк\nскирд\nскейт\nсезам\nхарчо\nбукля\nвидок\nюдоль\nэфиоп\nрулет\nрохля\nпилон\nэрзац\nзыбка\nрепей\nэклер\nцелик\nцокот\nзипун\nверея\nзенки\nчадра\nбайда\nпуант\nбивак\nживец\nпария\nпарок\nпричт\nштамб\nпончо\nшпрот\nполон\nзадок\nбином\nлафет\nшифон\nбахча\nдраже\nстоик\nдинар\nливер\nкутья\nсмоль\nлохмы\nкубло\nсудок\nчешка\nшелом\nноска\nсусек\nсовка\nдефис\nчирей\nпарша\nнамаз\nтотем\nхряпа\nбатут\nсиена\nкизяк\nзефир\nсолод\nсхима\nкойот\nтяпка\nзубик\nофорт\nнищая\nчувал\nмезон\nразор\nразик\nлеток\nцукат\nволан\nгумус\nцыпка\nнавал\nрондо\nфалда\nпемза\nманка\nкатет\nдедка\nгреча\nбонна\nраджа\nэкзот\nчумак\nрогоз\nкнехт\nмаета\nдокер\nалтын\nкофий\nпырей\nмурло\nзалом\nплебс\nторий\nсплин\nскунс\nлошак\nпалаш\nирмос\nопара\nвыгул\nваран\nшибер\nбарий\nрысца\nстанс\nхорал\nрында\nизмор\nдукат\nобмер\nколли\nкалым\nхорда\nматюг\nхинди\nкофей\nдувал\nконка\nжерех\nдруид\nщипок\nдинго\nсемит\nситро\nнытик\nумора\nалеут\nдрофа\nбутан\nсерсо\nхамка\nсивка\nлития\nдрога\nпирит\nхайло\nлюпин\nзулус\nканоэ\nзакут\nголец\nкапор\nэвенк\nлегат\nрезак\nфьорд\nцезий\nфуэте\nрегби\nлючок\nрдест\nкарда\nлярва\nдонка\nбатыр\nсомик\nжатка\nземец\nпадуб\nнечет\nматюк\nфиорд\nнаяда\nбиток\nпузан\nмакси\nпампа\nпанна\nчекан\nмошна\nмохер\nшафер\nфибра\nпарез\nструг\nмитоз\nгурия\nпижма\nчибис\nаксон\nмедок\nсуфле\nпраща\nналив\nпатер\nдерма\nмаман\nфарси\nталес\nчубук\nкичка\nтальк\nгжель\nанчар\nтубус\nмясцо\nзапев\nклуша\nманок\nкоала\nворог\nперси\nушица\nлассо\nсайга\nхмарь\nсайра\nдурка\nсамба\nоникс\nябеда\nиспод\nсатир\nямина\nрумба\nсдоба\nхасид\nпетит\nкагал\nухарь\nяхонт\nабцуг\nабшид\nавгит\nавгур\nавизо\nавтол\nагава\nагама\nагами\nагнат\nаграф\nадряс\nажгон\nайван\nаймак\nайран\nайсор\nакажу\nакант\nактер\nаларм\nалтей\nалчба\nамбра\nамбре\nамеба\nанкер\nантик\nантре\nаншеф\nапорт\nапрош\nарека\nархар\nастат\nасцит\nаттик\nаэроб\nаэрон\nбабье\nбагги\nбадан\nбайга\nбакан\nбакун\nбалок\nбареж\nбарит\nбарич\nбармы\nбаска\nбасма\nбаснь\nбасон\nбатат\nбахта\nбезик\nбейка\nбекар\nбекас\nбелек\nбелец\nбелье\nбеляш\nбердо\nбилль\nбирюч\nбитье\nблато\nблизь\nблинт\nбобер\nбобок\nбодяк\nбожба\nбонмо\nборей\nборть\nбочаг\nбочар\nбрада\nбрика\nбриль\nбритт\nбрыжи\nбрыла\nбубон\nбудра\nбудяк\nбукан\nбукле\nбукса\nбулга\nбулла\nбурав\nбурат\nбурса\nбутуз\nбылка\nбылье\nбытье\nбювар\nбювет\nбюкса\nвабик\nвалах\nвалеж\nвалек\nвалер\nвалец\nвалух\nванта\nварок\nватин\nведун\nвежда\nвекша\nвелюр\nвервь\nверед\nверес\nверки\nверша\nвесок\nвещун\nвзбег\nвзвар\nвзлет\nвзмет\nвзмыв\nвзрез\nвзрыд\nвзыск\nвизаж\nвизир\nвилок\nвирша\nвития\nвитье\nвласы\nвнука\nвозик\nвозка\nволга\nворье\nвотяк\nвошка\nвпуск\nвруша\nвспых\nвсход\nвыбой\nвывал\nвывес\nвыгар\nвыгиб\nвыдув\nвыжиг\nвыжим\nвыкат\nвыкол\nвыкос\nвыкус\nвылаз\nвылом\nвымах\nвымор\nвыпал\nвыпар\nвыпор\nвыпот\nвыруб\nвытье\nвязок\nвятка\nгавот\nгагат\nгазок\nганец\nганза\nганка\nгарда\nгарус\nгемма\nгерма\nгетра\nгибка\nгиляк\nгинея\nгипюр\nгирло\nгитан\nгитов\nгичка\nглясе\nгнейс\nгнома\nгнусь\nголик\nгольд\nголье\nголяк\nгорно\nгорюн\nгофре\nграве\nгранд\nгребь\nгреза\nгрена\nгридь\nгрозд\nгуано\nгубан\nгугня\nгужик\nгузка\nгузно\nгумма\nгумми\nгуран\nгурда\nгусек\nгусит\nгуцул\nгюрза\nдадан\nдевон\nдежка\nдеизм\nдеист\nдележ\nдемос\nденек\nдерен\nдерть\nдесть\nдетва\nджига\nдзета\nдиана\nдикая\nдобор\nдожим\nдойна\nдойра\nдомек\nдомер\nдомра\nдонце\nдонья\nдорка\nдосев\nдосол\nдосыл\nдофин\nдошка\nдрага\nдрань\nдрена\nдруза\nдубец\nдубка\nдубье\nдудак\nдудук\nдунец\nдунит\nдунст\nдурра\nдурро\nдутар\nдутик\nдутыш\nдутье\nдухан\nдщерь\nдюбек\nдюкер\nдюшес\nегоза\nежиха\nездка\nелина\nемеля\nерник\nершик\nехида\nжакан\nжакоб\nжамка\nжарок\nжевок\nжелна\nжелоб\nжелть\nженка\nжеода\nживье\nжилье\nжитье\nжменя\nжнива\nжниво\nжница\nжулан\nжулье\nжупан\nжурка\nзадик\nзаеда\nзажин\nзажор\nзазыв\nзакал\nзакол\nзакуп\nзалет\nзализ\nзамет\nзамор\nзапон\nзарод\nзасев\nзасол\nзасос\nзасыл\nзатек\nзатес\nзаток\nзацеп\nзачес\nзачет\nзащип\nзвень\nзельц\nзернь\nзлюка\nзобик\nзолка\nзраза\nзурна\nзыбун\nзятек\nзятик\nиваси\nивина\nигиль\nигрун\nидиом\nижица\nизбач\nизвет\nизвод\nизлет\nизмол\nизюбр\nилька\nильма\nинвар\nиндий\nинока\nинула\nиония\nиприт\nирбис\nиссоп\nистод\nишиас\nкабил\nкабул\nкавун\nкаган\nкагат\nкадий\nкайен\nкайла\nкайра\nкалан\nкалиф\nкалла\nкамас\nкамка\nкамса\nкамус\nкамча\nканюк\nкапер\nкапок\nкариб\nкарст\nкатыш\nкацап\nкегль\nкегля\nкекур\nкенар\nкенаф\nкивер\nкизил\nкиник\nкипер\nкирза\nкифоз\nклака\nклект\nклест\nклипс\nклупп\nкнель\nкникс\nкница\nкобза\nкобыз\nковач\nковер\nкожан\nкожье\nкозел\nкознь\nкозон\nкойне\nкокет\nкокор\nколет\nколик\nколит\nколка\nколоб\nколон\nколча\nкомми\nконек\nконик\nкопал\nкопач\nкопер\nкопир\nкопка\nкопра\nкопун\nкопыл\nкопье\nкорда\nкорчь\nкорье\nкоряк\nкосач\nкосец\nкосок\nкосье\nкотел\nкоток\nкочет\nкощей\nкрапп\nкреол\nкриль\nкрица\nкроат\nкроки\nкроше\nкруть\nкручь\nкудлы\nкукан\nкукша\nкулан\nкулек\nкумжа\nкумык\nкунак\nкупаж\nкурай\nкурец\nкурия\nкурка\nкутас\nкутеж\nкуток\nкутум\nкухва\nкухта\nкхмер\nкюрий\nкюрин\nлабет\nлагун\nлазея\nлазка\nлазок\nлайба\nлайда\nламут\nланды\nланка\nларго\nларек\nлатка\nлатук\nлафит\nлачка\nлбина\nлбище\nлегаш\nлежка\nлемеш\nлемур\nленто\nлепра\nлерка\nлетка\nлешак\nлещик\nливан\nлизин\nлизис\nлизол\nлизун\nликер\nлилея\nлинек\nлипец\nлипси\nлиска\nлитва\nлитка\nлитье\nлобан\nложок\nлонжа\nлузга\nлунит\nлупка\nлысун\nлытка\nлычко\nльяло\nлюбка\nлюнет\nлюпус\nлюрик\nлюффа\nлягва\nляпис\nляссе\nляшка\nмагик\nмазар\nмазер\nмазик\nмазка\nмазло\nмазур\nмайер\nмайна\nмакао\nмакса\nмалек\nмалик\nмалка\nмалье\nмамбо\nмание\nманко\nманул\nмаори\nмаран\nмарго\nмахан\nмезга\nмекка\nмелос\nменка\nметил\nметол\nмеццо\nмигач\nмикст\nмильт\nмимик\nминер\nмиома\nмираб\nмирза\nмирон\nмирта\nмишка\nмишук\nмлеко\nмогар\nмогол\nмодий\nмойва\nмойра\nмокко\nмокой\nмокша\nмолвь\nмолка\nмолян\nмоляр\nморцо\nмотет\nмотка\nмотня\nмотто\nмохна\nмохны\nмуаре\nмузга\nмумие\nмурза\nмурин\nмурья\nмутон\nмуфти\nмуцин\nмучка\nмушар\nмысик\nмытье\nмычка\nмышей\nмюзет\nмюрид\nмялка\nмямля\nмянда\nмятье\nнабоб\nнавис\nнавой\nнагиб\nнагон\nнагул\nнадир\nнадув\nнажиг\nнажин\nназем\nнакол\nнакра\nналеп\nналет\nналой\nнамек\nнамет\nнамин\nнамол\nнамыв\nнанду\nнанка\nнанос\nнапой\nнарез\nнасад\nнасып\nнатек\nнатес\nнатяг\nнафта\nнаход\nначес\nначет\nначин\nневер\nнегус\nнемая\nненка\nнерка\nнетяг\nнивка\nнизка\nнизок\nнилот\nновик\nнойон\nномад\nнонет\nнория\nносач\nнотис\nнудга\nнукер\nнулик\nнырец\nнытье\nобвес\nобвоз\nобдел\nобдир\nобдув\nобжим\nобжин\nобжог\nобкат\nобкос\nоблет\nоблов\nоблог\nобмет\nобмин\nобмол\nобмыв\nобнос\nободь\nобрат\nобруб\nобсев\nобчет\nобъем\nовсец\nовсюг\nовчар\nодежа\nожина\nозимь\nойрот\nокиян\nокоем\nокрол\nоктет\nолеин\nолеум\nолимп\nонагр\nонуча\nоплыв\nопоек\nопока\nоптик\nорала\nорало\nорарь\nоржад\nоркан\nорлан\nорлец\nорлик\nорляк\nоршад\nосетр\nосляк\nосмий\nосмол\nосмос\nосоед\nостит\nостюк\nостяк\nотава\nотбив\nотвоз\nотгиб\nотгон\nотдух\nотзол\nоткол\nоткус\nотлет\nотлог\nотлуп\nотмах\nотмол\nотнос\nотпал\nотруб\nотсос\nотцеп\nотчал\nотчет\nотъем\nофеня\nофсет\nошеек\nошкуй\nпадог\nпадун\nпайва\nпайза\nпалех\nпалея\nпалия\nпалуб\nпанаш\nпанер\nпанты\nпанье\nпанья\nпапах\nпапеж\nпараф\nпарка\nпарня\nпарун\nпасма\nпасмо\nпасюк\nпатан\nпатуа\nпахви\nпахвы\nпахит\nпахта\nпаяло\nпевун\nпегаш\nпекан\nпенек\nпенни\nперга\nперед\nперка\nперло\nперье\nпесик\nпешец\nпещер\nпещур\nпиано\nпигус\nпиита\nпикан\nпикер\nпикон\nпикша\nпилав\nпилат\nпиния\nпинна\nпинта\nпипка\nпирке\nпирок\nпироп\nпиток\nпитье\nпифос\nпищик\nплавь\nплаун\nплена\nплесо\nплица\nпнище\nповал\nповет\nповой\nпогиб\nподий\nподог\nподой\nпоедь\nпожня\nпожог\nпозем\nпозер\nпозык\nпойка\nпокат\nпокус\nполба\nполет\nполой\nполок\nполом\nполяш\nпомет\nпонюх\nпопас\nпопик\nпорей\nпорто\nпоруб\nпоташ\nпотек\nпотир\nпотяг\nпочет\nприем\nприор\nпроем\nпропс\nпроух\nпрусс\nпрыск\nпряха\nпсарь\nпсица\nпсише\nпудик\nпукля\nпунец\nпурин\nпурка\nпутец\nпутик\nпучка\nпьеза\nпялка\nпясть\nраина\nракия\nракша\nранет\nрастр\nратай\nратин\nрафия\nрацея\nребаб\nревун\nредан\nремез\nремиз\nренет\nрений\nрепер\nрепье\nржавь\nржица\nржище\nризки\nринит\nрипус\nриска\nритор\nришта\nрогач\nродий\nрожак\nрозан\nройба\nройка\nромец\nромок\nромша\nронжа\nропак\nростр\nроток\nртище\nругня\nрудяк\nружье\nруина\nрусин\nрутил\nрыбец\nрыжак\nрытье\nрюшка\nрябец\nрябик\nрябок\nрясна\nсаами\nсабан\nсабеи\nсабей\nсабза\nсабур\nсагиб\nсадно\nсайда\nсайка\nсаква\nсалма\nсалол\nсалоп\nсаман\nсамум\nсапер\nсапка\nсапун\nсаржа\nсарыч\nсбора\nсвиль\nсвяза\nсевба\nсевок\nсеево\nсейид\nсейша\nсекач\nселин\nсемга\nсенцо\nсепия\nсерка\nсерко\nсерна\nсерум\nсеунч\nсечка\nсиаль\nсивая\nсивер\nсивко\nсивуч\nсигма\nсижок\nсизяк\nсилка\nсилон\nсилур\nсильф\nсимка\nсинап\nсинец\nсиняя\nсипай\nсирен\nсирин\nсистр\nситар\nситце\nскало\nскань\nскарн\nскачь\nскена\nскепт\nсклиз\nскопа\nскора\nскорм\nскрап\nскреп\nскуди\nскудо\nслань\nслуда\nслука\nсмазь\nсмуть\nсныть\nсовик\nсогды\nсогра\nсойма\nсойот\nсолея\nсолка\nсоляр\nсомье\nсопун\nсорго\nсорит\nсором\nсорус\nсосун\nсохач\nспурт\nстарь\nстега\nстека\nстень\nстепс\nстило\nступь\nстыдь\nстынь\nсуаре\nсулея\nсулой\nсупец\nсупин\nсуржа\nсурна\nсусак\nсусло\nсутаж\nсучье\nсыпец\nсырец\nсырть\nсырца\nсырье\nсычуг\nсябер\nсяжок\nтавот\nтаган\nтакыр\nталер\nталик\nталыш\nтанок\nтапер\nтапир\nтарын\nтаска\nтатка\nтафта\nтафья\nтацет\nташка\nтезка\nтеизм\nтеист\nтелка\nтенек\nтерка\nтермы\nтерно\nтеска\nтесло\nтетка\nтеург\nтечка\nтешка\nтиара\nтигра\nтимол\nтипец\nтипик\nтитло\nтифон\nтифус\nтлень\nтодес\nтойон\nтокай\nтолай\nтоман\nтондо\nторит\nтохар\nтрапп\nтрасс\nтрефа\nтриас\nтриер\nтриод\nтромп\nтуаль\nтугай\nтугун\nтузик\nтукан\nтулес\nтулий\nтулуз\nтулук\nтулун\nтупей\nтупец\nтурач\nтутор\nтутти\nтынок\nтырло\nтырса\nтюник\nтюрбе\nтюрбо\nтюрик\nтютюн\nтючок\nтябло\nтягло\nуброд\nубрус\nувраж\nугрев\nудило\nудэге\nудэхе\nузина\nуйгур\nуклея\nукрюк\nулыба\nумбра\nумище\nуниат\nуника\nунион\nупрек\nураза\nурема\nурина\nурман\nусина\nусище\nускок\nутица\nухожь\nучеба\nушкан\nушкуй\nушник\nфабра\nфавус\nфадом\nфазис\nфальц\nфарад\nфасет\nфаска\nфатум\nфатюй\nфация\nфелон\nфетюк\nфиакр\nфижмы\nфизия\nфилей\nфилер\nфильц\nфимоз\nфинна\nфитин\nфланк\nфлейт\nфлейц\nфлешь\nфлинт\nфолио\nфоска\nфофан\nфрахт\nфузея\nфукус\nфуляр\nфурма\nфутер\nфутор\nхадис\nхакас\nхалда\nхамит\nхамса\nхамье\nханша\nхапун\nхашиш\nхедер\nхедив\nхерик\nхиазм\nхиляк\nхинду\nхинин\nхитин\nхлест\nхлупь\nхлюст\nхмара\nхмурь\nходун\nхорек\nхорея\nхряск\nхряст\nхурал\nцадик\nцанга\nцапка\nцапун\nцапфа\nцарек\nцевка\nцевье\nцехин\nцикля\nциста\nцитра\nцуцик\nцыбик\nчабер\nчакан\nчалка\nчебак\nчебот\nчелка\nчемер\nчепан\nчерва\nчеред\nчерен\nческа\nчетка\nчечет\nчижик\nчилим\nчинар\nчинка\nчирик\nчирок\nчирус\nчиряк\nчомга\nчреда\nчтица\nчувяк\nчужая\nчуйка\nчурек\nчутье\nчухна\nшабат\nшабер\nшабли\nшабот\nшабур\nшалон\nшамот\nшанец\nшанкр\nшасла\nшассе\nшатер\nшатия\nшванк\nшверт\nшевро\nшелеп\nшемая\nшепот\nшизик\nшиизм\nшимми\nшинок\nшипок\nшипун\nшитво\nшитик\nшитье\nшишак\nшкерт\nшлица\nшмоль\nшнека\nшнява\nшняка\nшорня\nшофер\nшпуля\nшпунт\nшпынь\nшримс\nштейн\nштифт\nштосс\nштраб\nштыка\nшугай\nшуйца\nшурпа\nшуряк\nшушун\nщекот\nщелка\nщелок\nщепье\nщерба\nщетка\nщечка\nщипец\nщипка\nщитик\nщупик\nщурка\nщучка\nэгрет\nэдикт\nэммер\nэнзим\nэолит\nэпика\nэпонж\nэспри\nэшарп\nюгрич\nюгурт\nюзист\nюкола\nюница\nюнкор\nюрага\nюферс\nягель\nяишня\nямища\nярица\nяруга\nярыга\nяспис\nястык\nясырь\nятовь\nабака\n`.trim();\n\nconst tinkoff5bukvWords = wordsRaw.split('\\n');\n\nexport default tinkoff5bukvWords;\n","import tinkoff5bukvWords from '../assets/tinkoff5bukvWords';\nimport T5bGame from '../types/T5bGame';\nimport { difference } from 'lodash';\n\nconst solveT5bGame = (game: T5bGame): string[] => {\n    const mispositionedLettersEntries = Object.entries(game.mispositionedLetters).map(\n        (entry) => [entry[0], Array.from(entry[1])] as const\n    );\n\n    const foundLettersList = game.foundLetters.map((letter) => letter.letter);\n    const absentLetters = difference(game.absentLetters, foundLettersList);\n\n    return tinkoff5bukvWords.filter((word) => {\n        if (\n            !game.foundLetters.every((letter) => {\n                return word[letter.position] === letter.letter;\n            })\n        ) {\n            return false;\n        }\n\n        if (\n            !absentLetters.every((letter) => {\n                return !word.includes(letter);\n            })\n        ) {\n            return false;\n        }\n\n        if (\n            !mispositionedLettersEntries.every(([letter, wrongPositions]) => {\n                return wrongPositions.every((wrongPosition) => {\n                    const letterIndex = word.indexOf(letter);\n                    return letterIndex !== -1 && word[wrongPosition] !== letter;\n                });\n            })\n        ) {\n            return false;\n        }\n\n        return true;\n    });\n};\n\nexport default solveT5bGame;\n","import React, { FunctionComponent, useCallback, useMemo, useState } from 'react';\nimport Flex from '../../components/flex/Flex';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './Tinkoff5BukvSolverPage.module.scss';\nimport Tinkoff5BukvWord from './components/Tinkoff5BukvWord';\nimport { Point2D, T5bLetter, T5bLetterType, T5bWord } from './types';\nimport useArrayStateMutator from '../../hooks/useArrayStateMutator';\nimport point2d from './utils/point2d';\nimport T5bGame from './types/T5bGame';\nimport solveT5bGame from './utils/solveT5bGame';\nimport { useDebouncedMemo } from '../../hooks/debouncedMemo';\nimport { Button, Modal, Tag, Tooltip } from 'antd';\nimport { take } from 'lodash';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport useWriteableLocalstorageState from '../../hooks/useWriteableLocalstorageState';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Text from 'antd/lib/typography/Text';\nimport Tinkoff5BukvCell from './components/Tinkoff5BukvCell';\nimport { IS_MOBILE } from '../../utils/checkIsMobile';\nimport useAppTheme from '../../hooks/useAppTheme';\nimport { useAppSettingsState } from '../../hooks/useAppSettings';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport AppTheme from '../../types/AppTheme';\n\nconst createLetter = (value?: string, type: T5bLetterType = T5bLetterType.ABSENT): T5bLetter => ({\n    value,\n    type\n});\n\nconst createWord = (letters?: T5bLetter[]): T5bWord => {\n    return {\n        letters: letters ?? [createLetter(), createLetter(), createLetter(), createLetter(), createLetter()]\n    };\n};\n\nconst createWords = (): T5bWord[] => [\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord()\n];\n\nconst fillWord = (t5bWord: T5bWord, word: string, previous5bWord: T5bWord | undefined): T5bWord => {\n    return {\n        ...t5bWord,\n        letters: t5bWord.letters.map((letter, index) => {\n            return {\n                ...letter,\n                type: previous5bWord\n                    ? previous5bWord.letters[index].type === T5bLetterType.FOUND\n                        ? T5bLetterType.FOUND\n                        : letter.type\n                    : letter.type,\n                value: word[index]\n            };\n        })\n    };\n};\n\nconst Tinkoff5BukvSolverPage: FunctionComponent = () => {\n    const { isDarkMode } = useAppTheme();\n    const { setAppSettings } = useAppSettingsState();\n    const changeSettings = useChangeStateHandler(setAppSettings);\n\n    const [words, setWords] = useState<T5bWord[]>(createWords());\n    const { fpChangeByIndex: handleWordChange } = useArrayStateMutator(setWords);\n\n    const [activeCell, setActiveCell] = useState<Point2D>();\n\n    const [solutionLimit, setSolutionLimit] = useState<number>(100);\n\n    const [isInfoTooltipDefaultVisible, setIsInfoTooltipDefaultVisible] = useWriteableLocalstorageState(\n        getLocalStorageKey('tinkoff-5bukv-solver', 'isInfoTooltipDefaultVisible'),\n        true\n    );\n\n    const [isInfoTooltipVisible, setIsInfoTooltipVisible] = useState<boolean>(isInfoTooltipDefaultVisible);\n    const [isInfoModalVisible, setIsInfoModalVisible] = useState<boolean>();\n\n    const entireSolution = useDebouncedMemo(\n        () => {\n            const game = new T5bGame(words);\n            return solveT5bGame(game);\n        },\n        [words],\n        50\n    );\n\n    const solution = useMemo(() => {\n        return (\n            entireSolution && {\n                count: entireSolution.length,\n                words: take(entireSolution, solutionLimit)\n            }\n        );\n    }, [entireSolution, solutionLimit]);\n\n    const handleActiveLetterIndexChange = useCallback(\n        (wordIndex: number | undefined) => (letterIndex: number | undefined) => {\n            if (wordIndex === undefined || letterIndex === undefined) {\n                setActiveCell(undefined);\n                return;\n            }\n\n            setActiveCell(point2d(letterIndex, wordIndex));\n        },\n        []\n    );\n\n    const handleOutsideFieldClick = useCallback(() => {\n        setActiveCell(undefined);\n    }, []);\n\n    const handleChangeActiveCell = useCallback(\n        (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => {\n            if (!activeCell) {\n                return;\n            }\n\n            delta = point2d(Math.sign(delta.x), Math.sign(delta.y));\n\n            if (delta.x - delta.y === 0) {\n                return;\n            }\n\n            setActiveCell((index) => {\n                if (!index) {\n                    return index;\n                }\n\n                const indexY = index.y;\n                const indexX = index.x;\n\n                const deltaY = delta.y;\n                const deltaX = delta.x;\n\n                const currentWord = words[activeCell.y];\n\n                const maxY = words.length - 1;\n                const maxX = currentWord.letters.length - 1;\n\n                const getMovedY = (deltaY: number, isNoOverflow?: boolean) => {\n                    if (isHorizontalOnly) {\n                        return indexY;\n                    }\n\n                    if (deltaY === 1 && indexY >= maxY) {\n                        return isNoOverflow ? indexY : 0;\n                    }\n                    if (deltaY === -1 && indexY <= 0) {\n                        return isNoOverflow ? indexY : maxY;\n                    }\n                    return indexY + deltaY;\n                };\n\n                if (deltaY) {\n                    return point2d(indexX, getMovedY(deltaY));\n                }\n\n                const getMovedX = (overflowX: number, isNoOverflow: boolean) => {\n                    if (overflowX === 1) {\n                        return isNoOverflow ? indexX : 0;\n                    }\n                    if (overflowX === -1) {\n                        return isNoOverflow ? indexX : maxX;\n                    }\n                    return indexX + deltaX;\n                };\n\n                const overflowX = deltaX === -1 && indexX <= 0 ? -1 : deltaX === 1 && indexX >= maxX ? 1 : 0;\n\n                const movedY = getMovedY(overflowX, isNoEdgesOverflow);\n                const isNoOverflowY = isNoEdgesOverflow === true && movedY === indexY;\n\n                return point2d(getMovedX(overflowX, isNoOverflowY), movedY);\n            });\n        },\n        [words, activeCell]\n    );\n\n    const handleKeyDown = useCallback(\n        (event: React.KeyboardEvent<HTMLElement>) => {\n            switch (event.key) {\n                case 'ArrowUp':\n                    handleChangeActiveCell(point2d(0, -1));\n                    break;\n                case 'ArrowDown':\n                    handleChangeActiveCell(point2d(0, 1));\n                    break;\n                case 'ArrowLeft':\n                    handleChangeActiveCell(point2d(-1, 0));\n                    break;\n                case 'ArrowRight':\n                    handleChangeActiveCell(point2d(1, 0));\n                    break;\n            }\n        },\n        [handleChangeActiveCell]\n    );\n\n    const handleSolutionWordClick = (word: string) => () => {\n        const wordToFillIndex = words.findIndex((word) => word.letters.every((letter) => !letter.value));\n        if (wordToFillIndex === -1) {\n            return;\n        }\n\n        const wordToFill = words[wordToFillIndex];\n        const filledWord = fillWord(wordToFill, word.toUpperCase(), words[wordToFillIndex - 1]);\n        handleWordChange(wordToFillIndex)(filledWord);\n    };\n\n    const handleSolutionShowMore = () => {\n        setSolutionLimit((limit) => limit + 100);\n    };\n\n    const handleInfoTooltipVisibleChange = useCallback(\n        (isVisible: boolean) => {\n            if (!isVisible || !isInfoModalVisible) {\n                setIsInfoTooltipVisible(isVisible);\n            }\n\n            if (!isVisible) {\n                setIsInfoTooltipDefaultVisible(false);\n            }\n        },\n        [isInfoModalVisible]\n    );\n\n    const handleInfoButtonClick = () => {\n        setIsInfoTooltipVisible(false);\n        setIsInfoModalVisible(true);\n        setIsInfoTooltipDefaultVisible(false);\n    };\n\n    const handleInfoModalClose = useCallback(() => {\n        setIsInfoModalVisible(false);\n    }, []);\n\n    return (\n        <>\n            <PageContainer\n                title={\n                    <Flex row gap={6} align=\"center\">\n                        <div>Tinkoff 5bukv Solver</div>\n                        <Tooltip\n                            title=\"Нажмите, чтобы узнать, как использовать сервис\"\n                            defaultVisible={isInfoTooltipDefaultVisible}\n                            visible={isInfoTooltipVisible}\n                            onVisibleChange={handleInfoTooltipVisibleChange}\n                        >\n                            <Button\n                                icon={<InfoCircleFilled />}\n                                size=\"small\"\n                                type=\"text\"\n                                onClick={handleInfoButtonClick}\n                            />\n                        </Tooltip>\n                    </Flex>\n                }\n                className={styles.container}\n                onClick={handleOutsideFieldClick}\n                onKeyDown={handleKeyDown}\n                withComments\n            >\n                <Flex col>\n                    <Flex gap={10} col wrap=\"nowrap\" className={styles.field}>\n                        {words.map((word, index) => {\n                            const activeLetterIndex =\n                                activeCell === undefined\n                                    ? undefined\n                                    : activeCell.y === index\n                                    ? activeCell.x\n                                    : undefined;\n\n                            return (\n                                <Tinkoff5BukvWord\n                                    key={index}\n                                    word={word}\n                                    onChange={handleWordChange(index)}\n                                    activeLetterIndex={activeLetterIndex}\n                                    onActiveLetterIndexChange={handleActiveLetterIndexChange(index)}\n                                    onChangeActiveCell={handleChangeActiveCell}\n                                />\n                            );\n                        })}\n                    </Flex>\n\n                    {solution && (\n                        <Flex col gap={8} className={styles.solutionContainer}>\n                            <h3 className={styles.solutionCounter}>Слов найдено: {solution.count}</h3>\n\n                            <Flex row wrap=\"wrap\" className={styles.solutionWordsContainer}>\n                                {solution.words.map((word, index) => (\n                                    <Tag\n                                        key={`${word}/${index}`}\n                                        className={styles.solutionWord}\n                                        onClick={handleSolutionWordClick(word)}\n                                    >\n                                        {word}\n                                    </Tag>\n                                ))}\n                                {solution.count > solution.words.length && (\n                                    <Tag className={styles.solutionWord} onClick={handleSolutionShowMore}>\n                                        ...\n                                    </Tag>\n                                )}\n                            </Flex>\n                        </Flex>\n                    )}\n                </Flex>\n            </PageContainer>\n\n            <Modal\n                title=\"Как использовать решатель\"\n                visible={isInfoModalVisible}\n                onCancel={handleInfoModalClose}\n                onOk={handleInfoModalClose}\n                centered\n                footer={[\n                    <Button key=\"ok\" type=\"primary\" onClick={handleInfoModalClose}>\n                        Понятно\n                    </Button>\n                ]}\n            >\n                <Paragraph>\n                    Данный сервис предназначен для поиска подходящих слов для игры \"5&nbsp;букв\" от Тинькофф.\n                </Paragraph>\n                <Paragraph>\n                    Сверху находится поле для слов, аналогичное такому в самой игре. Оно предназначено для ввода слов и\n                    задания цветов буквам, как в приложении.\n                </Paragraph>\n                <Paragraph>Есть два способа ввода слов:</Paragraph>\n                <Paragraph>\n                    <ol>\n                        <li>Нажать на одну из букв (например, самую первую) и ввести на клавиатуре нужное слово;</li>\n                        <li>Нажать на один из подходящих вариантов слов, перечисленных внизу страницы.</li>\n                    </ol>\n                </Paragraph>\n                <Paragraph>\n                    Затем нужно задать цвет букв, аналогичный тому, что отображается при вводе этого слова в самой игре.\n                    Сделать это можно несколькими способами:\n                </Paragraph>\n                <Paragraph>\n                    <ol>\n                        <li>\n                            Нажать на клетку (букву), чтобы она стала выделенной, затем нажимать на эту букву до тех\n                            пор, пока не будет выбран нужный цвет;\n                        </li>\n                        <li>\n                            <Tooltip title=\"Только для мобильных устройств\" placement=\"right\">\n                                📱\n                            </Tooltip>{' '}\n                            Нажать и удерживать букву, цвет будет изменён;\n                        </li>\n                        <li>\n                            <Tooltip title=\"Только для ПК\" placement=\"right\">\n                                💻\n                            </Tooltip>{' '}\n                            Нажимать на букву правой кнопкой мыши, цвет также будет изменяться;\n                        </li>\n                        <li>\n                            <Tooltip title=\"Только для ПК\" placement=\"right\">\n                                💻\n                            </Tooltip>{' '}\n                            Нажать на букву, чтобы она стала выделена, затем нажать на клавиатуре ПК клавишу{' '}\n                            <Text keyboard>Пробел</Text>.\n                        </li>\n                    </ol>\n                </Paragraph>\n                <Paragraph className=\"d-flex flex-column mb-0\">\n                    <div className=\"mb-1\">\n                        Порядок изменения цвета букв такой ({IS_MOBILE ? <>нажмите</> : <>наведите</>} для описания):\n                    </div>\n                    <Flex row gap={8} wrap=\"wrap\" className={styles.infoModalExampleLettersContainer}>\n                        <Tooltip title=\"Буква отсутствует в слове\">\n                            <div>\n                                <Tinkoff5BukvCell\n                                    letter={createLetter('А', T5bLetterType.ABSENT)}\n                                    className={styles.infoModalExampleLetter}\n                                    readOnly\n                                />\n                            </div>\n                        </Tooltip>\n                        <Tooltip title=\"Буква присутствует в слове, но находится на другой позиции\">\n                            <div>\n                                <Tinkoff5BukvCell\n                                    letter={createLetter('А', T5bLetterType.MISPOSITIONED)}\n                                    className={styles.infoModalExampleLetter}\n                                    readOnly\n                                />\n                            </div>\n                        </Tooltip>\n                        <Tooltip title=\"Буква в слове находится на этом месте\">\n                            <div>\n                                <Tinkoff5BukvCell\n                                    letter={createLetter('А', T5bLetterType.FOUND)}\n                                    className={styles.infoModalExampleLetter}\n                                    readOnly\n                                />\n                            </div>\n                        </Tooltip>\n                    </Flex>\n                </Paragraph>\n                {!isDarkMode && (\n                    <Paragraph className=\"mt-3\">\n                        Рекомендуется использовать тёмную тему при использовании сервиса.{' '}\n                        <a onClick={() => changeSettings('theme')(AppTheme.DARK)}>Нажмите</a>, чтобы переключить.\n                    </Paragraph>\n                )}\n            </Modal>\n        </>\n    );\n};\n\nexport default Tinkoff5BukvSolverPage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["isNoResult","value","noResult","isObject","createDebouncedMemoHook","debounceFn","factory","deps","wait","useState","setValue","factoryRef","useAutoRef","debounceFunction","useRef","call","actualNoResult","Object","freeze","_noResult","v4","current","useEffect","useDebouncedMemo","debounce","throttle","setState","produceState","useStateProducer","useMemo","changeByIndex","index","newItem","state","updateByIndex","oldItem","undefined","removeByIndex","splice","add","items","fpChangeByIndex","fpUpdateByIndex","fpRemoveByIndex","clear","isChangeEvent","property","actualValue","target","useCallback","key","changeState","useChangeState","recipe","initialState","useLocalstorageState","lsState","setLsState","resetLsState","PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","config","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","getTagNodes","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","Paragraph","T5bLetterType","nextTypes","ABSENT","MISPOSITIONED","FOUND","currentType","x","y","checkIsMobile","a","check","userAgent","vendor","opera","test","substr","IS_MOBILE","letter","onChange","active","onActivate","onChangeActiveCell","style","cardClassName","cardStyle","readOnly","inputRef","typeClassName","type","handleCellClick","event","stopPropagation","getNextLetterType","handleCellInnerClick","focus","onClick","onContextMenu","preventDefault","vibrate","trim","autoComplete","autoCorrect","spellCheck","unselectable","pattern","onBeforeInput","nativeEvent","eventData","data","currentTarget","onInputCapture","insertedLetter","letters","replace","toUpperCase","lastLetter","point2d","onKeyDown","code","word","activeLetterIndex","onActiveLetterIndexChange","handleLetterChange","changedIndex","changedLetter","handleLetterActivate","Flex","gap","row","wrap","T5bGame","words","absentLetters","mispositionedLetters","foundLetters","normalizedWords","toLowerCase","this","flatMap","filter","forEach","letterIndex","letterValue","Set","Array","from","push","position","console","log","split","game","mispositionedLettersEntries","entries","entry","foundLettersList","difference","tinkoff5bukvWords","every","includes","wrongPosition","indexOf","createLetter","createWord","isDarkMode","useAppTheme","setAppSettings","useAppSettingsState","changeSettings","useChangeStateHandler","setWords","handleWordChange","useArrayStateMutator","activeCell","setActiveCell","solutionLimit","setSolutionLimit","useWriteableLocalstorageState","getLocalStorageKey","isInfoTooltipDefaultVisible","setIsInfoTooltipDefaultVisible","isInfoTooltipVisible","setIsInfoTooltipVisible","isInfoModalVisible","setIsInfoModalVisible","entireSolution","solveT5bGame","solution","count","take","handleActiveLetterIndexChange","wordIndex","handleOutsideFieldClick","handleChangeActiveCell","delta","isHorizontalOnly","isNoEdgesOverflow","Math","sign","indexY","indexX","deltaY","deltaX","currentWord","maxY","maxX","getMovedY","isNoOverflow","overflowX","movedY","getMovedX","handleKeyDown","handleSolutionWordClick","wordToFillIndex","findIndex","filledWord","t5bWord","previous5bWord","fillWord","handleInfoTooltipVisibleChange","isVisible","handleInfoModalClose","PageContainer","align","defaultVisible","visible","onVisibleChange","InfoCircleFilled","col","limit","onCancel","onOk","centered","footer","placement","Text","keyboard","AppTheme","scope","name","NULL_LOCALSTORAGE_KEY","produce","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","i","arr","offset","arguments","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}