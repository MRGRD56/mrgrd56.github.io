{"version":3,"file":"static/js/5316.510beff0.chunk.js","mappings":"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","sources":["hooks/useStateProducer.ts","pages/uuidGeneratorPage/UuidGeneratorPage.tsx","utils/produceState.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","import React, { useCallback, useMemo, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, Row, Space } from 'antd';\nimport { v4 } from 'uuid';\nimport Text from 'antd/lib/typography/Text';\nimport ExternalLink from '../../components/ExternalLink';\nimport CopyButton from '../../components/copyButton/CopyButton';\nimport getNpmPackageLink from '../../utils/getNpmPackageLink';\nimport useStateProducer from '../../hooks/useStateProducer';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { useDidMount } from 'rooks';\n\nconst titleExtra = (\n    <Text type=\"secondary\">\n        uses <ExternalLink href={getNpmPackageLink('uuid')}>uuid</ExternalLink>\n    </Text>\n);\n\nconst UuidGeneratorPage = () => {\n    const [uuid, setUuid] = useState<string>();\n    const [history, setHistory] = useState<string[]>([]);\n    const produceHistory = useStateProducer(setHistory);\n\n    const historyString = useMemo<string>(() => {\n        return history.join('\\n');\n    }, [history]);\n\n    const generate = useCallback(() => {\n        const newUuid = v4();\n        setUuid(newUuid);\n        produceHistory((history) => {\n            history.unshift(newUuid);\n        });\n        return newUuid;\n    }, []);\n\n    useDidMount(() => {\n        generate();\n    });\n\n    return (\n        <PageContainer title=\"UUID Generator\" titleExtra={titleExtra}>\n            <Col>\n                <Row>\n                    <Space className=\"mb-2\">\n                        <Text copyable className=\"fs-6\">\n                            {uuid}\n                        </Text>\n                    </Space>\n                </Row>\n                <Space className=\"mb-2\">\n                    <Button onClick={generate}>Generate</Button>\n                    <CopyButton value={uuid} onClick={generate}>\n                        Generate and copy\n                    </CopyButton>\n                </Space>\n                <TextArea value={historyString} rows={6} />\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default UuidGeneratorPage;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["setState","useCallback","recipe","produceState","titleExtra","type","href","getNpmPackageLink","useState","uuid","setUuid","history","setHistory","produceHistory","useStateProducer","historyString","useMemo","join","generate","newUuid","v4","unshift","useDidMount","title","className","copyable","onClick","value","rows","state","produce","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","REGEX","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}