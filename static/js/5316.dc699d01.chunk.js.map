{"version":3,"file":"static/js/5316.dc699d01.chunk.js","mappings":"uJAYA,IATyB,SAAIA,GACzB,OAAOC,EAAAA,EAAAA,cACH,SAACC,IACGC,EAAAA,EAAAA,GAAaH,EAAUE,KAE3B,CAACF,M,+MCIHI,GACF,UAAC,IAAD,CAAMC,KAAK,YAAX,mBACS,SAAC,IAAD,CAAcC,MAAMC,EAAAA,EAAAA,GAAkB,QAAtC,qBAgDb,UA5C0B,WACtB,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAAmB,IAAjD,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAiBC,EAAAA,EAAAA,GAAiBF,GAElCG,GAAgBC,EAAAA,EAAAA,UAAgB,WAClC,OAAOL,EAAQM,KAAK,QACrB,CAACN,IAEEO,GAAWjB,EAAAA,EAAAA,cAAY,WACzB,IAAMkB,GAAUC,EAAAA,EAAAA,KAKhB,OAJAV,EAAQS,GACRN,GAAe,SAACF,GACZA,EAAQU,QAAQF,MAEbA,IACR,IAMH,OAJAG,EAAAA,EAAAA,IAAY,WACRJ,QAIA,SAAC,IAAD,CAAeK,MAAM,iBAAiBnB,WAAYA,EAAlD,UACI,UAAC,IAAD,YACI,SAAC,IAAD,WACI,SAAC,IAAD,CAAOoB,UAAU,OAAjB,UACI,SAAC,IAAD,CAAMC,UAAQ,EAACD,UAAU,OAAzB,SACKf,SAIb,UAAC,IAAD,CAAOe,UAAU,OAAjB,WACI,SAAC,IAAD,CAAQE,QAASR,EAAjB,uBACA,SAAC,IAAD,CAAYS,MAAOlB,EAAMiB,QAASR,EAAlC,mCAIJ,SAAC,UAAD,CAAUS,MAAOZ,EAAea,KAAM,W,oBCtDtD,IAF0B,SAACC,GAAD,8CAAkEA,K,qCCY5F,IANqB,SAAI7B,EAAuCE,GAC5DF,GAAS,SAAC8B,GACN,OAAOC,EAAAA,EAAAA,IAAQD,EAAO5B","sources":["hooks/useStateProducer.ts","pages/uuidGeneratorPage/UuidGeneratorPage.tsx","utils/getNpmPackageLink.ts","utils/produceState.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","import React, { useCallback, useMemo, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, Row, Space } from 'antd';\nimport { v4 } from 'uuid';\nimport Text from 'antd/lib/typography/Text';\nimport ExternalLink from '../../components/ExternalLink';\nimport CopyButton from '../../components/copyButton/CopyButton';\nimport getNpmPackageLink from '../../utils/getNpmPackageLink';\nimport useStateProducer from '../../hooks/useStateProducer';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { useDidMount } from 'rooks';\n\nconst titleExtra = (\n    <Text type=\"secondary\">\n        uses <ExternalLink href={getNpmPackageLink('uuid')}>uuid</ExternalLink>\n    </Text>\n);\n\nconst UuidGeneratorPage = () => {\n    const [uuid, setUuid] = useState<string>();\n    const [history, setHistory] = useState<string[]>([]);\n    const produceHistory = useStateProducer(setHistory);\n\n    const historyString = useMemo<string>(() => {\n        return history.join('\\n');\n    }, [history]);\n\n    const generate = useCallback(() => {\n        const newUuid = v4();\n        setUuid(newUuid);\n        produceHistory((history) => {\n            history.unshift(newUuid);\n        });\n        return newUuid;\n    }, []);\n\n    useDidMount(() => {\n        generate();\n    });\n\n    return (\n        <PageContainer title=\"UUID Generator\" titleExtra={titleExtra}>\n            <Col>\n                <Row>\n                    <Space className=\"mb-2\">\n                        <Text copyable className=\"fs-6\">\n                            {uuid}\n                        </Text>\n                    </Space>\n                </Row>\n                <Space className=\"mb-2\">\n                    <Button onClick={generate}>Generate</Button>\n                    <CopyButton value={uuid} onClick={generate}>\n                        Generate and copy\n                    </CopyButton>\n                </Space>\n                <TextArea value={historyString} rows={6} />\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default UuidGeneratorPage;\n","const getNpmPackageLink = (packageName: string): string => `https://www.npmjs.com/package/${packageName}`;\n\nexport default getNpmPackageLink;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n"],"names":["setState","useCallback","recipe","produceState","titleExtra","type","href","getNpmPackageLink","useState","uuid","setUuid","history","setHistory","produceHistory","useStateProducer","historyString","useMemo","join","generate","newUuid","v4","unshift","useDidMount","title","className","copyable","onClick","value","rows","packageName","state","produce"],"sourceRoot":""}