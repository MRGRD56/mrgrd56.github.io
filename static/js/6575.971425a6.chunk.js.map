{"version":3,"file":"static/js/6575.971425a6.chunk.js","mappings":"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","sources":["types/MonacoLanguage.ts","components/MonacoLanguageSelect.tsx","components/appEditor/AppEditor.tsx","utils/copyText.ts","utils/copyBlob.ts","utils/computeValue.ts","components/copyButton/CopyButton.tsx","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","webpack://mrgrd56.github.io/./src/pages/codeFormatterPage/CodeFormatterPage.module.scss?d21c","utils/formatCode/formatXml.ts","utils/formatCode/index.ts","pages/codeFormatterPage/CodeFormatterPage.tsx","utils/getLocalStorageKey.ts","../node_modules/@ant-design/icons-svg/es/asn/CopyOutlined.js","../node_modules/@ant-design/icons/es/icons/CopyOutlined.js","../node_modules/antd/es/_util/responsiveObserve.js","../node_modules/antd/es/grid/row.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["export const monacoLanguages = [\n    'abap',\n    'aes',\n    'apex',\n    'azcli',\n    'bat',\n    'bicep',\n    'c',\n    'cameligo',\n    'clojure',\n    'coffeescript',\n    'cpp',\n    'csharp',\n    'csp',\n    'css',\n    'dart',\n    'dockerfile',\n    'ecl',\n    'elixir',\n    'flow9',\n    'freemarker2',\n    'freemarker2.tag-angle.interpolation-bracket',\n    'freemarker2.tag-angle.interpolation-dollar',\n    'freemarker2.tag-auto.interpolation-bracket',\n    'freemarker2.tag-auto.interpolation-dollar',\n    'freemarker2.tag-bracket.interpolation-bracket',\n    'freemarker2.tag-bracket.interpolation-dollar',\n    'fsharp',\n    'go',\n    'graphql',\n    'handlebars',\n    'hcl',\n    'html',\n    'ini',\n    'java',\n    'javascript',\n    'json',\n    'julia',\n    'kotlin',\n    'less',\n    'lexon',\n    'liquid',\n    'lua',\n    'm3',\n    'markdown',\n    'mips',\n    'msdax',\n    'mysql',\n    'objective-c',\n    'pascal',\n    'pascaligo',\n    'perl',\n    'pgsql',\n    'php',\n    'pla',\n    'plaintext',\n    'postiats',\n    'powerquery',\n    'powershell',\n    'proto',\n    'pug',\n    'python',\n    'qsharp',\n    'r',\n    'razor',\n    'redis',\n    'redshift',\n    'restructuredtext',\n    'ruby',\n    'rust',\n    'sb',\n    'scala',\n    'scheme',\n    'scss',\n    'shell',\n    'sol',\n    'sparql',\n    'sql',\n    'st',\n    'swift',\n    'systemverilog',\n    'tcl',\n    'twig',\n    'typescript',\n    'vb',\n    'verilog',\n    'xml',\n    'yaml'\n] as const;\n\ntype MonacoLanguage = typeof monacoLanguages[number];\n\nexport default MonacoLanguage;\n","import React, { FunctionComponent } from 'react';\nimport { monacoLanguages } from '../types/MonacoLanguage';\nimport { Select, SelectProps } from 'antd';\n\ntype Props = SelectProps;\n\nconst defaultProps: Partial<Props> = {\n    showSearch: true\n};\n\nconst MonacoLanguageSelect: FunctionComponent<Props> = ({ children, ...props }) => {\n    return (\n        <Select {...defaultProps} {...props}>\n            {monacoLanguages.map((language) => (\n                <Select.Option key={language}>{language}</Select.Option>\n            ))}\n            {children}\n        </Select>\n    );\n};\n\nexport default MonacoLanguageSelect;\n","import React, { FunctionComponent, useCallback, useMemo } from 'react';\nimport Editor, { EditorProps, OnChange } from '@monaco-editor/react';\nimport useAppTheme from '../../hooks/useAppTheme';\nimport { Spin } from 'antd';\nimport classNames from 'classnames';\nimport * as monaco from 'monaco-editor';\nimport MonacoLanguage from '../../types/MonacoLanguage';\nimport { editor } from 'monaco-editor';\n\nconst loadingNode = <Spin size=\"large\" />;\n\nexport type AppOnChange = (value: string, ev: monaco.editor.IModelContentChangedEvent) => void;\n\nconst defaultOptions: Readonly<editor.IStandaloneEditorConstructionOptions> = {\n    minimap: { enabled: false }\n};\n\nexport interface AppEditorProps extends Omit<EditorProps, 'onChange'> {\n    onChange?: AppOnChange;\n    language?: MonacoLanguage;\n}\n\nconst AppEditor: FunctionComponent<AppEditorProps> = ({ className, loading, theme, onChange, options, ...props }) => {\n    const { isDarkMode } = useAppTheme();\n\n    const editorOptions = useMemo(\n        () => ({\n            ...defaultOptions,\n            ...options\n        }),\n        [options]\n    );\n\n    const handleChange = useCallback<OnChange>(\n        (value, ev) => {\n            onChange?.(value ?? '', ev);\n        },\n        [onChange]\n    );\n\n    return (\n        <Editor\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\n            className={classNames('app-monaco-editor', className)}\n            loading={loading ?? loadingNode}\n            onChange={handleChange}\n            options={editorOptions}\n            {...props}\n        />\n    );\n};\n\nexport default AppEditor;\n","const copyText = (text: string | undefined) => {\n    if (!text) {\n        return;\n    }\n\n    return navigator.clipboard.writeText(text);\n};\n\nexport default copyText;\n","const copyBlob = (blob: Blob) => {\n    return navigator.clipboard.write([\n        new ClipboardItem({\n            [blob.type]: blob\n        })\n    ]);\n};\n\nexport default copyBlob;\n","import { isFunction } from 'lodash';\n\nconst computeValue = <T>(value: T | (() => T)): T => {\n    return isFunction(value) ? value() : value;\n};\n\nexport default computeValue;\n","import React, { MouseEvent, MouseEventHandler, useRef, useState } from 'react';\nimport copyText from '../../utils/copyText';\nimport { Button, ButtonProps } from 'antd';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { isNil, isString } from 'lodash';\nimport copyBlob from '../../utils/copyBlob';\nimport computeValue from '../../utils/computeValue';\n\ntype ContentType = string | Blob | null | undefined;\n\ninterface Props<T extends ContentType> extends Omit<ButtonProps, 'value'> {\n    value: T | (() => T);\n    copyEmpty?: boolean;\n    onClick?: (event: MouseEvent<HTMLButtonElement>) => T;\n}\n\nfunction CopyButton<T extends ContentType>({ value, copyEmpty, children, onClick, icon, ...props }: Props<T>) {\n    const [isCopied, setIsCopied] = useState<boolean>(false);\n\n    const copiedTimeoutRef = useRef<NodeJS.Timeout>();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = async (event) => {\n        const replacedValue = onClick?.(event);\n\n        const actualValue = replacedValue ?? computeValue(value);\n\n        if (!actualValue && !copyEmpty) {\n            return;\n        }\n\n        if (copiedTimeoutRef.current) {\n            clearTimeout(copiedTimeoutRef.current);\n        }\n\n        if (isNil(actualValue) || isString(actualValue)) {\n            await copyText(actualValue ?? '');\n        }\n        if (actualValue instanceof Blob) {\n            await copyBlob(actualValue);\n        }\n\n        setIsCopied(true);\n        copiedTimeoutRef.current = setTimeout(() => {\n            setIsCopied(false);\n        }, 1000);\n    };\n\n    return (\n        <Button onClick={handleClick} icon={icon ?? (isCopied ? <CheckOutlined /> : <CopyOutlined />)} {...props}>\n            {children ?? 'Copy'}\n        </Button>\n    );\n}\n\nexport default CopyButton;\n// export default React.memo(CopyButton, (prevProps, nextProps) => {\n//     return isEqual(omit(prevProps, 'value'), omit(nextProps, 'value')) && isEqualFunctions(prevProps.value, nextProps.value);\n// });\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)}>{children}</div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"CodeFormatterPage_antd-text-primary__Jn6ta\",\"page\":\"CodeFormatterPage_page__USQLf\",\"container\":\"CodeFormatterPage_container__f9Z+o\",\"controlsContainer\":\"CodeFormatterPage_controlsContainer__gB0vb\",\"formatContainer\":\"CodeFormatterPage_formatContainer__0OaVd\",\"languageSelect\":\"CodeFormatterPage_languageSelect__T7F-h\",\"editor\":\"CodeFormatterPage_editor__GSZ17\"};","import CodeFormatter from './types/CodeFormatter';\n\nconst XML_MIME = 'application/xml';\n\nconst domParser = new DOMParser();\nconst xmlSerializer = new XMLSerializer();\n\nconst stylesheet = domParser.parseFromString(\n    [\n        '<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">',\n        '  <xsl:strip-space elements=\"*\"/>',\n        '  <xsl:template match=\"para[content-style][not(text())]\">', // change to just text() to strip space in text nodes\n        '    <xsl:value-of select=\"normalize-space(.)\"/>',\n        '  </xsl:template>',\n        '  <xsl:template match=\"node()|@*\">',\n        '    <xsl:copy><xsl:apply-templates select=\"node()|@*\"/></xsl:copy>',\n        '  </xsl:template>',\n        '  <xsl:output indent=\"yes\"/>',\n        '</xsl:stylesheet>'\n    ].join('\\n'),\n    'application/xml'\n);\n\nconst formatXml: CodeFormatter = (source) => {\n    const sourceDocument = domParser.parseFromString(source, XML_MIME);\n    const xsltProcessor = new XSLTProcessor();\n    xsltProcessor.importStylesheet(stylesheet);\n    const resultDocument = xsltProcessor.transformToDocument(sourceDocument);\n    return xmlSerializer.serializeToString(resultDocument);\n};\n\nexport default formatXml;\n","import FormattedLanguage from './types/FormattedLanguage';\nimport CodeFormatter from './types/CodeFormatter';\nimport formatXml from './formatXml';\n\nconst formatters: Readonly<Record<FormattedLanguage, CodeFormatter>> = {\n    xml: formatXml\n};\n\nconst formatCode = (language: FormattedLanguage, source: string): string => formatters[language](source);\n\nexport default formatCode;\n","import React, { FunctionComponent, useCallback, useRef, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { OnMount } from '@monaco-editor/react';\nimport { Button, Col, Row } from 'antd';\nimport styles from './CodeFormatterPage.module.scss';\nimport MonacoLanguage from '../../types/MonacoLanguage';\nimport { useLocalstorageState } from 'rooks';\nimport { editor, languages } from 'monaco-editor';\nimport CopyButton from '../../components/copyButton/CopyButton';\nimport formatCode from '../../utils/formatCode';\nimport AppEditor from '../../components/appEditor/AppEditor';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport MonacoLanguageSelect from '../../components/MonacoLanguageSelect';\n\n// interface FormattedLanguage {\n//     prettierParser: prettier.BuiltInParserName,\n//     monacoLanguage: MonacoLanguage\n// }\n\n// type FormattedLanguagesMap = Record<BuiltInParserName, MonacoLanguage>;\n//\n// const formatterLanguagesMap: FormattedLanguagesMap = {\n//     'angular': 'typescript',\n//     'babel-flow': 'flow9',\n//     'babel-ts': 'typescript',\n//     'babel': 'javascript',\n//     'css': 'css',\n//     'espree': 'plaintext',\n//     'flow': 'flow9',\n//     'glimmer': 'plaintext',\n//     'graphql': 'graphql',\n//     'html': 'html',\n//     'json-stringify': 'json',\n//     'json': 'json',\n//     'json5': 'json',\n//     'less': 'less',\n//     'lwc': 'plaintext',\n//     'markdown': 'markdown',\n//     'mdx': 'markdown',\n//     'meriyah': 'plaintext',\n//     'scss': 'scss',\n//     'typescript': 'typescript',\n//     'vue': 'typescript',\n//     'yaml': 'yaml'\n// };\n//\n// window.prettier = prettier;\n\nconst monacoOptions: editor.IStandaloneEditorConstructionOptions = {\n    formatOnPaste: true\n};\n\nconst CodeFormatterPage: FunctionComponent = () => {\n    const [selectedLanguage, setSelectedLanguage] = useLocalstorageState<MonacoLanguage>(\n        getLocalStorageKey('code-formatter', 'selectedLanguage'),\n        'typescript'\n    );\n    const [code, setCode] = useState<string>('');\n\n    const monacoEditorRef = useRef<editor.IStandaloneCodeEditor>();\n\n    const handleMonacoMount = useCallback<OnMount>((editor, monaco) => {\n        monacoEditorRef.current = editor;\n\n        monaco.languages.registerDocumentFormattingEditProvider('xml', {\n            provideDocumentFormattingEdits(\n                model: editor.ITextModel,\n                options: languages.FormattingOptions\n            ): languages.ProviderResult<languages.TextEdit[]> {\n                return [\n                    {\n                        text: formatCode('xml', model.getValue()),\n                        range: model.getFullModelRange()\n                    }\n                ];\n            }\n        });\n    }, []);\n\n    const handleFormatClick = useCallback(() => {\n        monacoEditorRef.current?.getAction('editor.action.formatDocument').run();\n    }, []);\n\n    return (\n        <PageContainer title=\"Code Formatter\" className={styles.page} noContentPadding>\n            <div className={styles.container}>\n                <Col className={styles.controlsContainer}>\n                    <Row className={styles.formatContainer}>\n                        <MonacoLanguageSelect\n                            className={styles.languageSelect}\n                            value={selectedLanguage}\n                            onChange={setSelectedLanguage}\n                        />\n                        <Button type=\"primary\" className={styles.formatButton} onClick={handleFormatClick}>\n                            Format\n                        </Button>\n                        <CopyButton value={code} type=\"default\" />\n                    </Row>\n                </Col>\n                <AppEditor\n                    className={styles.editor}\n                    language={selectedLanguage}\n                    value={code}\n                    onChange={setCode}\n                    options={monacoOptions}\n                    onMount={handleMonacoMount}\n                />\n            </div>\n        </PageContainer>\n    );\n};\n\nexport default CodeFormatterPage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","// This icon file is generated automatically.\nvar CopyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\" } }] }, \"name\": \"copy\", \"theme\": \"outlined\" };\nexport default CopyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CopyOutlinedSvg from \"@ant-design/icons-svg/es/asn/CopyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CopyOutlined = function CopyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CopyOutlinedSvg\n  }));\n};\n\nCopyOutlined.displayName = 'CopyOutlined';\nexport default /*#__PURE__*/React.forwardRef(CopyOutlined);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport var responsiveMap = {\n  xs: '(max-width: 575px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  xxl: '(min-width: 1600px)'\n};\nvar subscribers = new Map();\nvar subUid = -1;\nvar screens = {};\nvar responsiveObserve = {\n  matchHandlers: {},\n  dispatch: function dispatch(pointMap) {\n    screens = pointMap;\n    subscribers.forEach(function (func) {\n      return func(screens);\n    });\n    return subscribers.size >= 1;\n  },\n  subscribe: function subscribe(func) {\n    if (!subscribers.size) this.register();\n    subUid += 1;\n    subscribers.set(subUid, func);\n    func(screens);\n    return subUid;\n  },\n  unsubscribe: function unsubscribe(token) {\n    subscribers[\"delete\"](token);\n    if (!subscribers.size) this.unregister();\n  },\n  unregister: function unregister() {\n    var _this = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n      var handler = _this.matchHandlers[matchMediaQuery];\n      handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n    });\n    subscribers.clear();\n  },\n  register: function register() {\n    var _this2 = this;\n\n    Object.keys(responsiveMap).forEach(function (screen) {\n      var matchMediaQuery = responsiveMap[screen];\n\n      var listener = function listener(_ref) {\n        var matches = _ref.matches;\n\n        _this2.dispatch(_extends(_extends({}, screens), _defineProperty({}, screen, matches)));\n      };\n\n      var mql = window.matchMedia(matchMediaQuery);\n      mql.addListener(listener);\n      _this2.matchHandlers[matchMediaQuery] = {\n        mql: mql,\n        listener: listener\n      };\n      listener(mql);\n    });\n  }\n};\nexport default responsiveObserve;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport RowContext from './RowContext';\nimport { tuple } from '../_util/type';\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nvar RowAligns = tuple('top', 'middle', 'bottom', 'stretch');\nvar RowJustify = tuple('start', 'end', 'center', 'space-around', 'space-between', 'space-evenly');\nvar Row = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var customizePrefixCls = props.prefixCls,\n      justify = props.justify,\n      align = props.align,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      _props$gutter = props.gutter,\n      gutter = _props$gutter === void 0 ? 0 : _props$gutter,\n      wrap = props.wrap,\n      others = __rest(props, [\"prefixCls\", \"justify\", \"align\", \"className\", \"style\", \"children\", \"gutter\", \"wrap\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState({\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      screens = _React$useState2[0],\n      setScreens = _React$useState2[1];\n\n  var supportFlexGap = useFlexGapSupport();\n  var gutterRef = React.useRef(gutter); // ================================== Effect ==================================\n\n  React.useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (screen) {\n      var currentGutter = gutterRef.current || 0;\n\n      if (!Array.isArray(currentGutter) && _typeof(currentGutter) === 'object' || Array.isArray(currentGutter) && (_typeof(currentGutter[0]) === 'object' || _typeof(currentGutter[1]) === 'object')) {\n        setScreens(screen);\n      }\n    });\n    return function () {\n      return ResponsiveObserve.unsubscribe(token);\n    };\n  }, []); // ================================== Render ==================================\n\n  var getGutter = function getGutter() {\n    var results = [0, 0];\n    var normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, 0];\n    normalizedGutter.forEach(function (g, index) {\n      if (_typeof(g) === 'object') {\n        for (var i = 0; i < responsiveArray.length; i++) {\n          var breakpoint = responsiveArray[i];\n\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint];\n            break;\n          }\n        }\n      } else {\n        results[index] = g || 0;\n      }\n    });\n    return results;\n  };\n\n  var prefixCls = getPrefixCls('row', customizePrefixCls);\n  var gutters = getGutter();\n  var classes = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-wrap\"), wrap === false), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(justify), justify), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(align), align), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className); // Add gutter related style\n\n  var rowStyle = {};\n  var horizontalGutter = gutters[0] > 0 ? gutters[0] / -2 : undefined;\n  var verticalGutter = gutters[1] > 0 ? gutters[1] / -2 : undefined;\n\n  if (horizontalGutter) {\n    rowStyle.marginLeft = horizontalGutter;\n    rowStyle.marginRight = horizontalGutter;\n  }\n\n  if (supportFlexGap) {\n    // Set gap direct if flex gap support\n    var _gutters = _slicedToArray(gutters, 2);\n\n    rowStyle.rowGap = _gutters[1];\n  } else if (verticalGutter) {\n    rowStyle.marginTop = verticalGutter;\n    rowStyle.marginBottom = verticalGutter;\n  } // \"gutters\" is a new array in each rendering phase, it'll make 'React.useMemo' effectless.\n  // So we deconstruct \"gutters\" variable here.\n\n\n  var _gutters2 = _slicedToArray(gutters, 2),\n      gutterH = _gutters2[0],\n      gutterV = _gutters2[1];\n\n  var rowContext = React.useMemo(function () {\n    return {\n      gutter: [gutterH, gutterV],\n      wrap: wrap,\n      supportFlexGap: supportFlexGap\n    };\n  }, [gutterH, gutterV, wrap, supportFlexGap]);\n  return /*#__PURE__*/React.createElement(RowContext.Provider, {\n    value: rowContext\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({}, others, {\n    className: classes,\n    style: _extends(_extends({}, rowStyle), style),\n    ref: ref\n  }), children));\n});\nRow.displayName = 'Row';\nexport default Row;","import { Row } from '../grid';\nexport default Row;"],"names":["monacoLanguages","defaultProps","showSearch","children","props","map","language","loadingNode","size","defaultOptions","minimap","enabled","className","loading","theme","onChange","options","isDarkMode","useAppTheme","editorOptions","useMemo","handleChange","useCallback","value","ev","classNames","text","navigator","clipboard","writeText","blob","write","ClipboardItem","type","isFunction","copyEmpty","onClick","icon","useState","isCopied","setIsCopied","copiedTimeoutRef","useRef","handleClick","event","replacedValue","actualValue","computeValue","current","clearTimeout","isNil","isString","copyText","Blob","copyBlob","setTimeout","CheckOutlined","CopyOutlined","PageTag","getTagNodes","key","WIP","color","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","ref","title","description","titleExtra","tags","noPadding","noContentPadding","contentClassName","restProps","renderedTags","styles","length","direction","Paragraph","domParser","DOMParser","xmlSerializer","XMLSerializer","stylesheet","parseFromString","join","formatters","xml","source","sourceDocument","xsltProcessor","XSLTProcessor","importStylesheet","resultDocument","transformToDocument","serializeToString","monacoOptions","formatOnPaste","useLocalstorageState","getLocalStorageKey","selectedLanguage","setSelectedLanguage","code","setCode","monacoEditorRef","handleMonacoMount","editor","monaco","languages","registerDocumentFormattingEditProvider","provideDocumentFormattingEdits","model","formatCode","getValue","range","getFullModelRange","handleFormatClick","getAction","run","PageContainer","MonacoLanguageSelect","CopyButton","AppEditor","onMount","scope","name","NULL_LOCALSTORAGE_KEY","AntdIcon","_objectSpread","CopyOutlinedSvg","displayName","responsiveArray","responsiveMap","xs","sm","md","lg","xl","xxl","subscribers","Map","subUid","screens","responsiveObserve","matchHandlers","dispatch","pointMap","forEach","func","subscribe","this","register","set","unsubscribe","token","unregister","_this","Object","keys","screen","matchMediaQuery","handler","mql","removeListener","listener","clear","_this2","_ref","matches","_extends","_defineProperty","window","matchMedia","addListener","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","Row","tuple","_classNames","customizePrefixCls","prefixCls","justify","align","style","_props$gutter","gutter","wrap","others","_React$useContext","ConfigContext","getPrefixCls","_React$useState","_React$useState2","_slicedToArray","setScreens","supportFlexGap","useFlexGapSupport","gutterRef","ResponsiveObserve","currentGutter","Array","isArray","_typeof","gutters","results","g","breakpoint","undefined","getGutter","classes","concat","rowStyle","horizontalGutter","verticalGutter","marginLeft","marginRight","_gutters","rowGap","marginTop","marginBottom","_gutters2","gutterH","gutterV","rowContext","RowContext"],"sourceRoot":""}