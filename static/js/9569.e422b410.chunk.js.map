{"version":3,"file":"static/js/9569.e422b410.chunk.js","mappings":"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","sources":["utils/copyText.ts","utils/copyBlob.ts","utils/computeValue.ts","components/copyButton/CopyButton.tsx","hooks/useChangeAnyStateHandler.ts","hooks/useChangeState.ts","hooks/useChangeStateHandler.ts","hooks/useStateProducer.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/disqusThread/DisqusThread.tsx","webpack://mrgrd56.github.io/./src/pages/dataUrlPage/DataUrlPage.module.scss?32d2","utils/readFileAsBase64.ts","pages/dataUrlPage/DataUrlPage.tsx","utils/antd/dummyAntdUploadRequest.ts","utils/getErrorMessage.ts","utils/produceState.ts","utils/helper/promisifyFileReaderMethod.ts","utils/readFileAsDataUrl.ts","../node_modules/@ant-design/icons-svg/es/asn/CopyOutlined.js","../node_modules/@ant-design/icons/es/icons/CopyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","../node_modules/js-base64/base64.mjs"],"sourcesContent":["const copyText = (text: string | undefined) => {\n    if (!text) {\n        return;\n    }\n\n    return navigator.clipboard.writeText(text);\n};\n\nexport default copyText;\n","const copyBlob = (blob: Blob) => {\n    return navigator.clipboard.write([\n        new ClipboardItem({\n            [blob.type]: blob\n        })\n    ]);\n};\n\nexport default copyBlob;\n","import { isFunction } from 'lodash';\n\nconst computeValue = <T>(value: T | (() => T)): T => {\n    return isFunction(value) ? value() : value;\n};\n\nexport default computeValue;\n","import React, { MouseEvent, MouseEventHandler, useRef, useState } from 'react';\nimport copyText from '../../utils/copyText';\nimport { Button, ButtonProps } from 'antd';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { isNil, isString } from 'lodash';\nimport copyBlob from '../../utils/copyBlob';\nimport computeValue from '../../utils/computeValue';\n\ntype ContentType = string | Blob | null | undefined;\n\ninterface Props<T extends ContentType> extends Omit<ButtonProps, 'value'> {\n    value: T | (() => T);\n    copyEmpty?: boolean;\n    onClick?: (event: MouseEvent<HTMLButtonElement>) => T;\n}\n\nfunction CopyButton<T extends ContentType>({ value, copyEmpty, children, onClick, icon, ...props }: Props<T>) {\n    const [isCopied, setIsCopied] = useState<boolean>(false);\n\n    const copiedTimeoutRef = useRef<NodeJS.Timeout>();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = async (event) => {\n        const replacedValue = onClick?.(event);\n\n        const actualValue = replacedValue ?? computeValue(value);\n\n        if (!actualValue && !copyEmpty) {\n            return;\n        }\n\n        if (copiedTimeoutRef.current) {\n            clearTimeout(copiedTimeoutRef.current);\n        }\n\n        if (isNil(actualValue) || isString(actualValue)) {\n            await copyText(actualValue ?? '');\n        }\n        if (actualValue instanceof Blob) {\n            await copyBlob(actualValue);\n        }\n\n        setIsCopied(true);\n        copiedTimeoutRef.current = setTimeout(() => {\n            setIsCopied(false);\n        }, 1000);\n    };\n\n    return (\n        <Button onClick={handleClick} icon={icon ?? (isCopied ? <CheckOutlined /> : <CopyOutlined />)} {...props}>\n            {children ?? 'Copy'}\n        </Button>\n    );\n}\n\nexport default CopyButton;\n// export default React.memo(CopyButton, (prevProps, nextProps) => {\n//     return isEqual(omit(prevProps, 'value'), omit(nextProps, 'value')) && isEqualFunctions(prevProps.value, nextProps.value);\n// });\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { FC, HTMLProps, useMemo } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"DataUrlPage_antd-text-primary__Flf01\",\"ant-tabs-first-tab-indent\":\"DataUrlPage_ant-tabs-first-tab-indent__47l4X\",\"ant-tabs-tab\":\"DataUrlPage_ant-tabs-tab__remb5\",\"ant-tabs-no-w100-but-max\":\"DataUrlPage_ant-tabs-no-w100-but-max__ZKd2l\",\"ant-tabs-tabpane\":\"DataUrlPage_ant-tabs-tabpane__eNZ5z\",\"container\":\"DataUrlPage_container__MyEjw\",\"formItem\":\"DataUrlPage_formItem__aXvft\",\"label\":\"DataUrlPage_label__hnYDe\",\"input\":\"DataUrlPage_input__lT+k0\",\"verticalFormItem\":\"DataUrlPage_verticalFormItem__GwdBy\",\"copyButton\":\"DataUrlPage_copyButton__bijc5\"};","import readFileAsDataUrl from './readFileAsDataUrl';\n\nconst readFileAsBase64 = async (blob: Blob): Promise<string> => {\n    const dataUrl = await readFileAsDataUrl(blob);\n    return dataUrl.split('base64,')[1];\n};\n\nexport default readFileAsBase64;\n","import React, { ClipboardEventHandler, FunctionComponent, useCallback, useMemo, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './DataUrlPage.module.scss';\nimport { Button, Col, Input, notification, Space, Switch, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport dummyAntdUploadRequest from '../../utils/antd/dummyAntdUploadRequest';\nimport TextArea from 'antd/lib/input/TextArea';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport { DataUrlViewPageQueryParams } from '../dataUrlViewPage/DataUrlViewPage';\nimport { identity, pickBy } from 'lodash';\nimport { routes } from '../../constants/router/routes';\nimport { Link } from 'react-router-dom';\nimport useStateProducer from '../../hooks/useStateProducer';\nimport classNames from 'classnames';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport getErrorMessage from '../../utils/getErrorMessage';\nimport { Base64 } from 'js-base64';\nimport readFileAsBase64 from '../../utils/readFileAsBase64';\nimport CopyButton from '../../components/copyButton/CopyButton';\n\ninterface DataUrlState {\n    title: string;\n    mimeType: string;\n    encoding: string;\n    content: string;\n    isBase64: boolean;\n    isAutoBase64: boolean;\n}\n\nconst initialState: DataUrlState = {\n    title: '',\n    mimeType: 'text/plain',\n    encoding: 'utf-8',\n    content: 'Hello World',\n    isBase64: false,\n    isAutoBase64: false\n};\n\nconst getDataUrlQueryParams = (state: DataUrlState): DataUrlViewPageQueryParams => {\n    // data:[<MIME-type>][;charset=<encoding>][;base64],<data>\n\n    const isAutoBase64 = state.isAutoBase64 && !state.isBase64;\n    const isBase64 = state.isBase64 || isAutoBase64;\n    const content = isAutoBase64 ? Base64.encode(state.content) : state.content;\n\n    const charsetPart = state.encoding && `;charset=${state.encoding}`;\n    const base64Part = isBase64 ? ';base64' : '';\n    const dataPart = `,${content}`;\n\n    const data = `data:${state.mimeType}${charsetPart}${base64Part}${dataPart}`;\n\n    return {\n        title: state.title || undefined,\n        data\n    };\n};\n\nconst getDataUrlViewUrl = (params: DataUrlViewPageQueryParams): string => {\n    const queryParamsPart = new URLSearchParams(pickBy(params, identity)).toString();\n\n    return `${routes.dataUrlView.path}?${queryParamsPart}`;\n};\n\nconst DataUrlPage: FunctionComponent = () => {\n    const [state, setState] = useState<DataUrlState>(initialState);\n\n    const produceState = useStateProducer(setState);\n    const handleStateChange = useChangeStateHandler(setState);\n\n    const [displayedDataUrlViewUrl, setDisplayedDataUrlViewUrl] = useState<string>();\n\n    const dataUrlViewLinkRef = (element: HTMLAnchorElement | null) => {\n        if (element) {\n            setDisplayedDataUrlViewUrl(element.href);\n        }\n    };\n\n    const dataUrlViewUrl = useMemo(() => {\n        const data = getDataUrlQueryParams(state);\n        return {\n            data,\n            viewUrl: getDataUrlViewUrl(data)\n        };\n    }, [state]);\n\n    const transformContent = useCallback(\n        (transformer: (source: string) => string) => {\n            produceState((state) => {\n                try {\n                    state.content = transformer(state.content);\n                } catch (error) {\n                    notification.error({\n                        message: getErrorMessage(error)\n                    });\n                }\n            });\n        },\n        [produceState]\n    );\n\n    const encodeBase64Content = useCallback(() => transformContent(Base64.encode), [transformContent]);\n    const decodeBase64Content = useCallback(() => transformContent(Base64.decode), [transformContent]);\n\n    const handleFileChange = useCallback(async (blob: Blob, name: string) => {\n        const content = (blob && (await readFileAsBase64(blob))) ?? '';\n\n        setState({\n            title: name,\n            mimeType: blob.type ?? '',\n            isBase64: true,\n            isAutoBase64: false,\n            encoding: '',\n            content\n        });\n    }, []);\n\n    const handleUploadedFileChange = useCallback(\n        async (info: UploadChangeParam<UploadFile<unknown>>) => {\n            const { file } = info;\n\n            if (file.status !== 'done') {\n                return;\n            }\n\n            const blob = file.originFileObj;\n\n            if (!blob) {\n                return;\n            }\n\n            await handleFileChange(blob, file.name);\n        },\n        [handleFileChange]\n    );\n\n    const handleContentPaste = useCallback<ClipboardEventHandler<HTMLTextAreaElement>>(\n        async (event) => {\n            const file = event.clipboardData.files[0];\n\n            if (file === undefined) {\n                return;\n            }\n\n            await handleFileChange(file, file.name);\n        },\n        [handleFileChange]\n    );\n\n    return (\n        <PageContainer title=\"Data URL Generator\">\n            <Col xs={24} lg={18} xl={12} className={styles.container}>\n                <Space className=\"mb-2\">\n                    <Upload\n                        customRequest={dummyAntdUploadRequest}\n                        onChange={handleUploadedFileChange}\n                        showUploadList={false}\n                    >\n                        <Button icon={<UploadOutlined />}>Upload file</Button>\n                    </Upload>\n                </Space>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Title:</span>\n                    <Input className={styles.input} value={state.title} onChange={handleStateChange('title')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Mime type:</span>\n                    <Input className={styles.input} value={state.mimeType} onChange={handleStateChange('mimeType')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Encoding:</span>\n                    <Input className={styles.input} value={state.encoding} onChange={handleStateChange('encoding')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Content:</span>\n                    <div className={styles.input}>\n                        <TextArea\n                            className={styles.input}\n                            value={state.content}\n                            onChange={handleStateChange('content')}\n                            rows={3}\n                            showCount\n                            onPaste={handleContentPaste}\n                            allowClear\n                        />\n                        <Space className=\"mt-2\" wrap>\n                            <Button onClick={encodeBase64Content}>Encode base64</Button>\n                            <Button onClick={decodeBase64Content}>Decode base64</Button>\n                        </Space>\n                        <label className={classNames(styles.formItem, 'mt-2')}>\n                            <Switch checked={state.isBase64} onChange={handleStateChange('isBase64')} />\n                            <span className=\"ms-3\">Base64</span>\n                        </label>\n                        <label className={classNames(styles.formItem, 'mt-2')}>\n                            <Switch\n                                checked={state.isAutoBase64 && !state.isBase64}\n                                onChange={handleStateChange('isAutoBase64')}\n                                disabled={state.isBase64}\n                            />\n                            <span className=\"ms-3\">Auto convert text to base64</span>\n                        </label>\n                    </div>\n                </label>\n                <TextArea readOnly value={dataUrlViewUrl.data.data} rows={4} showCount className=\"mt-3\" />\n                <CopyButton value={dataUrlViewUrl.data.data} className={classNames(styles.copyButton, 'mb-1')} />\n                <Link to={dataUrlViewUrl.viewUrl} target=\"_blank\" ref={dataUrlViewLinkRef}>\n                    View the iframe\n                </Link>\n                <TextArea readOnly value={displayedDataUrlViewUrl} rows={4} showCount />\n                <CopyButton value={displayedDataUrlViewUrl} className={classNames(styles.copyButton, 'mb-1')} />\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default DataUrlPage;\n","const dummyAntdUploadRequest = ({ onSuccess }: { onSuccess?: (response: string) => void }) => {\n    setTimeout(() => {\n        onSuccess?.('ok');\n    }, 0);\n};\n\nexport default dummyAntdUploadRequest;\n","const getErrorMessage = (error: any) => {\n    return error instanceof Error ? error.message : String(error);\n};\n\nexport default getErrorMessage;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n","const promisifyFileReaderMethod = <R extends string | ArrayBuffer>(invocation: (reader: FileReader) => void) => {\n    return new Promise<R>((resolve, reject) => {\n        const reader = new FileReader();\n\n        const handleLoad = (event: FileReaderEventMap['load']) => {\n            reader.removeEventListener('load', handleLoad);\n            resolve(event.target?.result as R);\n        };\n\n        const handleError = (event: FileReaderEventMap['error']) => {\n            reader.removeEventListener('error', handleError);\n            reject(event);\n        };\n\n        reader.addEventListener('load', handleLoad);\n        reader.addEventListener('error', handleError);\n\n        invocation(reader);\n    });\n};\n\nexport default promisifyFileReaderMethod;\n","import promisifyFileReaderMethod from './helper/promisifyFileReaderMethod';\n\nconst readFileAsDataUrl = (blob: Blob): Promise<string> =>\n    promisifyFileReaderMethod<string>((reader) => {\n        reader.readAsDataURL(blob);\n    });\n\nexport default readFileAsDataUrl;\n","// This icon file is generated automatically.\nvar CopyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z\" } }] }, \"name\": \"copy\", \"theme\": \"outlined\" };\nexport default CopyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CopyOutlinedSvg from \"@ant-design/icons-svg/es/asn/CopyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CopyOutlined = function CopyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CopyOutlinedSvg\n  }));\n};\n\nCopyOutlined.displayName = 'CopyOutlined';\nexport default /*#__PURE__*/React.forwardRef(CopyOutlined);","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"names":["text","navigator","clipboard","writeText","blob","write","ClipboardItem","type","value","isFunction","copyEmpty","children","onClick","icon","props","useState","isCopied","setIsCopied","copiedTimeoutRef","useRef","handleClick","event","replacedValue","actualValue","computeValue","current","clearTimeout","isNil","isString","copyText","Blob","copyBlob","setTimeout","CheckOutlined","CopyOutlined","isChangeEvent","isObject","setState","property","call","target","useCallback","key","state","changeState","useChangeState","recipe","produceState","PageTag","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","shortname","getTagNodes","WIP","color","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","ref","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","Paragraph","readFileAsBase64","readFileAsDataUrl","dataUrl","split","initialState","mimeType","encoding","content","isBase64","isAutoBase64","getDataUrlViewUrl","params","queryParamsPart","URLSearchParams","pickBy","identity","routes","useStateProducer","handleStateChange","useChangeStateHandler","displayedDataUrlViewUrl","setDisplayedDataUrlViewUrl","dataUrlViewUrl","data","Base64","charsetPart","base64Part","dataPart","undefined","getDataUrlQueryParams","viewUrl","transformContent","transformer","error","notification","message","getErrorMessage","encodeBase64Content","decodeBase64Content","handleFileChange","name","handleUploadedFileChange","info","file","status","originFileObj","handleContentPaste","clipboardData","files","PageContainer","xs","lg","xl","customRequest","dummyAntdUploadRequest","onChange","showUploadList","UploadOutlined","TextArea","rows","showCount","onPaste","allowClear","wrap","checked","disabled","readOnly","CopyButton","to","element","href","onSuccess","Error","String","produce","invocation","Promise","resolve","reject","reader","FileReader","addEventListener","handleLoad","removeEventListener","result","handleError","promisifyFileReaderMethod","readAsDataURL","AntdIcon","_objectSpread","CopyOutlinedSvg","displayName","UploadOutlinedSvg","version","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","_TE","TextEncoder","b64chs","Array","prototype","slice","b64tab","a","tab","forEach","c","i","b64re","_fromCC","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","x","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","_fromUint8Array","u8a","strs","l","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","_noEnum","v","enumerable","writable","configurable","extendString","_add","body","Object","defineProperty","this","extendUint8Array","gBase64","VERSION","fromBase64","toBase64","encodeURL","isValid","extendBuiltins"],"sourceRoot":""}