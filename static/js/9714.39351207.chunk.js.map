{"version":3,"file":"static/js/9714.39351207.chunk.js","mappings":"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","sources":["hooks/useChangeState.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeStateHandler.ts","hooks/useStateProducer.ts","webpack://mrgrd56.github.io/./src/pages/dataUrlPage/DataUrlPage.module.scss?32d2","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","utils/readFileAsBase64.ts","pages/dataUrlPage/DataUrlPage.tsx","utils/dummyAntdUploadRequest.ts","utils/produceState.ts","utils/helper/promisifyFileReaderMethod.ts","utils/readFileAsDataUrl.ts","../node_modules/js-base64/base64.mjs"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"DataUrlPage_antd-text-primary__Flf01\",\"container\":\"DataUrlPage_container__MyEjw\",\"formItem\":\"DataUrlPage_formItem__aXvft\",\"label\":\"DataUrlPage_label__hnYDe\",\"input\":\"DataUrlPage_input__lT+k0\",\"verticalFormItem\":\"DataUrlPage_verticalFormItem__GwdBy\",\"copyButton\":\"DataUrlPage_copyButton__bijc5\"};","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\n\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import readFileAsDataUrl from './readFileAsDataUrl';\n\nconst readFileAsBase64 = async (blob: Blob): Promise<string> => {\n    const dataUrl = await readFileAsDataUrl(blob);\n    return dataUrl.split('base64,')[1];\n};\n\nexport default readFileAsBase64;\n","import React, { ClipboardEventHandler, FunctionComponent, useCallback, useMemo, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './DataUrlPage.module.scss';\nimport { Button, Col, Input, notification, Space, Switch, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport dummyAntdUploadRequest from '../../utils/dummyAntdUploadRequest';\nimport TextArea from 'antd/lib/input/TextArea';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport { DataUrlViewPageQueryParams } from '../dataUrlViewPage/DataUrlViewPage';\nimport { identity, pickBy } from 'lodash';\nimport { routes } from '../../constants/router/routes';\nimport { Link } from 'react-router-dom';\nimport useStateProducer from '../../hooks/useStateProducer';\nimport classNames from 'classnames';\nimport { UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport getErrorMessage from '../../utils/getErrorMessage';\nimport { Base64 } from 'js-base64';\nimport readFileAsBase64 from '../../utils/readFileAsBase64';\nimport CopyButton from '../../components/copyButton/CopyButton';\n\ninterface DataUrlState {\n    title: string;\n    mimeType: string;\n    encoding: string;\n    content: string;\n    isBase64: boolean;\n    isAutoBase64: boolean;\n}\n\nconst initialState: DataUrlState = {\n    title: '',\n    mimeType: 'text/plain',\n    encoding: 'utf-8',\n    content: 'Hello World',\n    isBase64: false,\n    isAutoBase64: false\n};\n\nconst getDataUrlQueryParams = (state: DataUrlState): DataUrlViewPageQueryParams => {\n    // data:[<MIME-type>][;charset=<encoding>][;base64],<data>\n\n    const isAutoBase64 = state.isAutoBase64 && !state.isBase64;\n    const isBase64 = state.isBase64 || isAutoBase64;\n    const content = isAutoBase64 ? Base64.encode(state.content) : state.content;\n\n    const charsetPart = state.encoding && `;charset=${state.encoding}`;\n    const base64Part = isBase64 ? ';base64' : '';\n    const dataPart = `,${content}`;\n\n    const data = `data:${state.mimeType}${charsetPart}${base64Part}${dataPart}`;\n\n    return {\n        title: state.title || undefined,\n        data\n    };\n};\n\nconst getDataUrlViewUrl = (params: DataUrlViewPageQueryParams): string => {\n    const queryParamsPart = new URLSearchParams(pickBy(params, identity)).toString();\n\n    return `${routes.dataUrlView.path}?${queryParamsPart}`;\n};\n\nconst DataUrlPage: FunctionComponent = () => {\n    const [state, setState] = useState<DataUrlState>(initialState);\n\n    const produceState = useStateProducer(setState);\n    const handleStateChange = useChangeStateHandler(setState);\n\n    const [displayedDataUrlViewUrl, setDisplayedDataUrlViewUrl] = useState<string>();\n\n    const dataUrlViewLinkRef = (element: HTMLAnchorElement | null) => {\n        if (element) {\n            setDisplayedDataUrlViewUrl(element.href);\n        }\n    };\n\n    const dataUrlViewUrl = useMemo(() => {\n        const data = getDataUrlQueryParams(state);\n        return {\n            data,\n            viewUrl: getDataUrlViewUrl(data)\n        };\n    }, [state]);\n\n    const transformContent = useCallback(\n        (transformer: (source: string) => string) => {\n            produceState((state) => {\n                try {\n                    state.content = transformer(state.content);\n                } catch (error) {\n                    notification.error({\n                        message: getErrorMessage(error)\n                    });\n                }\n            });\n        },\n        [produceState]\n    );\n\n    const encodeBase64Content = useCallback(() => transformContent(Base64.encode), [transformContent]);\n    const decodeBase64Content = useCallback(() => transformContent(Base64.decode), [transformContent]);\n\n    const handleFileChange = useCallback(async (blob: Blob, name: string) => {\n        const content = (blob && (await readFileAsBase64(blob))) ?? '';\n\n        setState({\n            title: name,\n            mimeType: blob.type ?? '',\n            isBase64: true,\n            isAutoBase64: false,\n            encoding: '',\n            content\n        });\n    }, []);\n\n    const handleUploadedFileChange = useCallback(\n        async (info: UploadChangeParam<UploadFile<unknown>>) => {\n            const { file } = info;\n\n            if (file.status !== 'done') {\n                return;\n            }\n\n            const blob = file.originFileObj;\n\n            if (!blob) {\n                return;\n            }\n\n            await handleFileChange(blob, file.name);\n        },\n        [handleFileChange]\n    );\n\n    const handleContentPaste = useCallback<ClipboardEventHandler<HTMLTextAreaElement>>(\n        async (event) => {\n            const file = event.clipboardData.files[0];\n\n            if (file === undefined) {\n                return;\n            }\n\n            await handleFileChange(file, file.name);\n        },\n        [handleFileChange]\n    );\n\n    return (\n        <PageContainer title=\"Data URL Generator\">\n            <Col xs={24} lg={18} xl={12} className={styles.container}>\n                <Space className=\"mb-2\">\n                    <Upload\n                        customRequest={dummyAntdUploadRequest}\n                        onChange={handleUploadedFileChange}\n                        showUploadList={false}\n                    >\n                        <Button icon={<UploadOutlined />}>Upload file</Button>\n                    </Upload>\n                </Space>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Title:</span>\n                    <Input className={styles.input} value={state.title} onChange={handleStateChange('title')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Mime type:</span>\n                    <Input className={styles.input} value={state.mimeType} onChange={handleStateChange('mimeType')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Encoding:</span>\n                    <Input className={styles.input} value={state.encoding} onChange={handleStateChange('encoding')} />\n                </label>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>Content:</span>\n                    <div className={styles.input}>\n                        <TextArea\n                            className={styles.input}\n                            value={state.content}\n                            onChange={handleStateChange('content')}\n                            rows={3}\n                            showCount\n                            onPaste={handleContentPaste}\n                            allowClear\n                        />\n                        <Space className=\"mt-2\" wrap>\n                            <Button onClick={encodeBase64Content}>Encode base64</Button>\n                            <Button onClick={decodeBase64Content}>Decode base64</Button>\n                        </Space>\n                        <label className={classNames(styles.formItem, 'mt-2')}>\n                            <Switch checked={state.isBase64} onChange={handleStateChange('isBase64')} />\n                            <span className=\"ms-3\">Base64</span>\n                        </label>\n                        <label className={classNames(styles.formItem, 'mt-2')}>\n                            <Switch\n                                checked={state.isAutoBase64 && !state.isBase64}\n                                onChange={handleStateChange('isAutoBase64')}\n                                disabled={state.isBase64}\n                            />\n                            <span className=\"ms-3\">Auto convert text to base64</span>\n                        </label>\n                    </div>\n                </label>\n                <TextArea readOnly value={dataUrlViewUrl.data.data} rows={4} showCount className=\"mt-3\" />\n                <CopyButton value={dataUrlViewUrl.data.data} className={classNames(styles.copyButton, 'mb-1')} />\n                <Link to={dataUrlViewUrl.viewUrl} target=\"_blank\" ref={dataUrlViewLinkRef}>\n                    View the iframe\n                </Link>\n                <TextArea readOnly value={displayedDataUrlViewUrl} rows={4} showCount />\n                <CopyButton value={displayedDataUrlViewUrl} className={classNames(styles.copyButton, 'mb-1')} />\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default DataUrlPage;\n","const dummyAntdUploadRequest = ({ onSuccess }: { onSuccess?: (response: string) => void }) => {\n    setTimeout(() => {\n        onSuccess?.('ok');\n    }, 0);\n};\n\nexport default dummyAntdUploadRequest;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n","const promisifyFileReaderMethod = <R extends string | ArrayBuffer>(invocation: (reader: FileReader) => void) => {\n    return new Promise<R>((resolve, reject) => {\n        const reader = new FileReader();\n\n        const handleLoad = (event: FileReaderEventMap['load']) => {\n            reader.removeEventListener('load', handleLoad);\n            resolve(event.target?.result as R);\n        };\n\n        const handleError = (event: FileReaderEventMap['error']) => {\n            reader.removeEventListener('error', handleError);\n            reject(event);\n        };\n\n        reader.addEventListener('load', handleLoad);\n        reader.addEventListener('error', handleError);\n\n        invocation(reader);\n    });\n};\n\nexport default promisifyFileReaderMethod;\n","import promisifyFileReaderMethod from './helper/promisifyFileReaderMethod';\n\nconst readFileAsDataUrl = (blob: Blob) =>\n    promisifyFileReaderMethod<string>((reader) => {\n        reader.readAsDataURL(blob);\n    });\n\nexport default readFileAsDataUrl;\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"names":["setState","useCallback","key","value","state","isChangeEvent","isObject","property","changeState","useChangeState","actualValue","call","target","recipe","produceState","UploadOutlined","props","ref","React","AntdIcon","_objectSpread","icon","UploadOutlinedSvg","displayName","readFileAsBase64","blob","readFileAsDataUrl","dataUrl","split","initialState","title","mimeType","encoding","content","isBase64","isAutoBase64","getDataUrlViewUrl","params","queryParamsPart","URLSearchParams","pickBy","identity","toString","routes","useState","useStateProducer","handleStateChange","useChangeStateHandler","displayedDataUrlViewUrl","setDisplayedDataUrlViewUrl","dataUrlViewUrl","useMemo","data","Base64","charsetPart","base64Part","dataPart","undefined","getDataUrlQueryParams","viewUrl","transformContent","transformer","error","notification","message","getErrorMessage","encodeBase64Content","decodeBase64Content","handleFileChange","name","type","handleUploadedFileChange","info","file","status","originFileObj","handleContentPaste","event","clipboardData","files","PageContainer","xs","lg","xl","className","styles","customRequest","dummyAntdUploadRequest","onChange","showUploadList","TextArea","rows","showCount","onPaste","allowClear","wrap","onClick","classNames","checked","disabled","readOnly","CopyButton","to","element","href","onSuccess","setTimeout","produce","invocation","Promise","resolve","reject","reader","FileReader","addEventListener","handleLoad","removeEventListener","result","handleError","promisifyFileReaderMethod","readAsDataURL","version","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","_TE","TextEncoder","b64chs","Array","prototype","slice","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","x","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","length","charCodeAt","TypeError","substring","_btoa","_fromUint8Array","u8a","strs","l","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","_noEnum","v","enumerable","writable","configurable","extendString","_add","body","Object","defineProperty","this","extendUint8Array","gBase64","VERSION","fromBase64","toBase64","encodeURL","isValid","extendBuiltins"],"sourceRoot":""}