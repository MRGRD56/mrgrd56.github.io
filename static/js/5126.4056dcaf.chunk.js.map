{"version":3,"file":"static/js/5126.4056dcaf.chunk.js","mappings":"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","sources":["hooks/debouncedMemo.ts","hooks/useArrayStateMutator.ts","hooks/useStateProducer.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","pages/tinkoff5BukvSolverPage/types/index.ts","webpack://mrgrd56.github.io/./src/pages/tinkoff5BukvSolverPage/Tinkoff5BukvSolverPage.module.scss?692a","pages/tinkoff5BukvSolverPage/utils/getNextLetterType.ts","pages/tinkoff5BukvSolverPage/utils/point2d.ts","pages/tinkoff5BukvSolverPage/components/Tinkoff5BukvCell.tsx","pages/tinkoff5BukvSolverPage/components/Tinkoff5BukvWord.tsx","pages/tinkoff5BukvSolverPage/types/T5bGame.ts","pages/tinkoff5BukvSolverPage/assets/tinkoff5bukvWords.ts","pages/tinkoff5BukvSolverPage/utils/solveT5bGame.ts","pages/tinkoff5BukvSolverPage/Tinkoff5BukvSolverPage.tsx","utils/produceState.ts","../node_modules/@ant-design/icons-svg/es/asn/ClockCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/ClockCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js","../node_modules/antd/es/tag/CheckableTag.js","../node_modules/antd/es/tag/index.js","../node_modules/antd/lib/typography/Paragraph.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import { DependencyList, useEffect, useRef, useState } from 'react';\nimport { debounce, isObject, throttle } from 'lodash';\nimport { v4 } from 'uuid';\nimport call from '../utils/call';\nimport useAutoRef from './useAutoRef';\n\ninterface NoResult {\n    readonly _noResult: string;\n}\n\nconst isNoResult = <T>(value: T | NoResult, noResult: NoResult): value is NoResult => {\n    return isObject(value) && '_noResult' in value && value === noResult; //TODO just value === noResult ?\n};\n\ntype MemoFactory<R> = (noResult: NoResult) => R | Promise<R> | NoResult;\n\nconst createDebouncedMemoHook =\n    (debounceFn: typeof debounce) =>\n    <R>(factory: MemoFactory<R>, deps: DependencyList | undefined, wait?: number) => {\n        const [value, setValue] = useState<R>();\n        const factoryRef = useAutoRef(factory);\n\n        const debounceFunction = useRef(\n            call(() => {\n                const actualNoResult: NoResult = Object.freeze({\n                    _noResult: v4()\n                });\n\n                return debounceFn(async () => {\n                    const value = factoryRef.current(actualNoResult);\n\n                    if (!isNoResult(value, actualNoResult)) {\n                        setValue(await value);\n                    }\n                }, wait);\n            })\n        ).current;\n\n        useEffect(() => {\n            debounceFunction();\n        }, deps);\n\n        return value;\n    };\n\nexport const useDebouncedMemo = createDebouncedMemoHook(debounce);\nexport const useThrottledMemo = createDebouncedMemoHook(throttle);\n\n// const useDebouncedMemo = <T>(factory: () => T, deps: DependencyList | undefined, wait?: number) => {\n//     const [value, setValue] = useState<T>();\n//\n//     const timeoutRef = useRef<NodeJS.Timeout>();\n//\n//\n// };\n","import { Dispatch, SetStateAction, useMemo } from 'react';\nimport useStateProducer from './useStateProducer';\n\nconst useArrayStateMutator = <T>(setState: Dispatch<SetStateAction<T[]>>) => {\n    const produceState = useStateProducer(setState);\n\n    return useMemo(() => {\n        const add = (...items: T[]) => setState((state) => [...state, ...items]);\n        const changeByIndex = (index: number, newItem: T) =>\n            produceState((state) => {\n                state[index] = newItem;\n            });\n        const updateByIndex = (index: number, newItem: (oldItem: T) => T) =>\n            produceState((state) => {\n                const oldItem = state[index];\n                if (oldItem === undefined) {\n                    return;\n                }\n\n                changeByIndex(index, newItem(oldItem));\n            });\n        const removeByIndex = (index: number) =>\n            produceState((state) => {\n                state.splice(index, 1);\n            });\n        const fpChangeByIndex = (index: number) => (newItem: T) => changeByIndex(index, newItem);\n        const fpUpdateByIndex = (index: number) => (newItem: (oldItem: T) => T) => updateByIndex(index, newItem);\n        const fpRemoveByIndex = (index: number) => () => removeByIndex(index);\n        const clear = () => setState([]);\n\n        return {\n            add,\n            changeByIndex,\n            updateByIndex,\n            removeByIndex,\n            fpChangeByIndex,\n            fpUpdateByIndex,\n            fpRemoveByIndex,\n            clear\n        };\n    }, [setState]);\n};\n\nexport default useArrayStateMutator;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport produceState, { StateProducerRecipe } from '../utils/produceState';\r\n\r\nconst useStateProducer = <S>(setState: Dispatch<SetStateAction<S>>) => {\r\n    return useCallback(\r\n        (recipe: StateProducerRecipe<S>) => {\r\n            produceState(setState, recipe);\r\n        },\r\n        [setState]\r\n    );\r\n};\r\n\r\nexport default useStateProducer;\r\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","export enum T5bLetterType {\n    ABSENT = 'ABSENT',\n    MISPOSITIONED = 'MISPOSITIONED',\n    FOUND = 'FOUND'\n}\n\nexport interface T5bLetter {\n    value: string | undefined;\n    type: T5bLetterType;\n}\n\nexport interface T5bWord {\n    letters: T5bLetter[];\n}\n\nexport interface Point2D {\n    x: number;\n    y: number;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"Tinkoff5BukvSolverPage_antd-text-primary__K46V3\",\"ant-tabs-first-tab-indent\":\"Tinkoff5BukvSolverPage_ant-tabs-first-tab-indent__rjtKw\",\"ant-tabs-tab\":\"Tinkoff5BukvSolverPage_ant-tabs-tab__aoxJT\",\"ant-tabs-no-w100-but-max\":\"Tinkoff5BukvSolverPage_ant-tabs-no-w100-but-max__yflic\",\"ant-tabs-tabpane\":\"Tinkoff5BukvSolverPage_ant-tabs-tabpane__wd--z\",\"field\":\"Tinkoff5BukvSolverPage_field__MHzdF\",\"cellLabel\":\"Tinkoff5BukvSolverPage_cellLabel__hx2eP\",\"cellInput\":\"Tinkoff5BukvSolverPage_cellInput__2ExUB\",\"cell\":\"Tinkoff5BukvSolverPage_cell__plepd\",\"typeMissing\":\"Tinkoff5BukvSolverPage_typeMissing__7F7mO\",\"typeMispositioned\":\"Tinkoff5BukvSolverPage_typeMispositioned__eeeAC\",\"typePresent\":\"Tinkoff5BukvSolverPage_typePresent__GJcQR\",\"cellActive\":\"Tinkoff5BukvSolverPage_cellActive__wS0ps\",\"solutionContainer\":\"Tinkoff5BukvSolverPage_solutionContainer__EUgp5\",\"solutionCounter\":\"Tinkoff5BukvSolverPage_solutionCounter__OcBs2\",\"solutionWordsContainer\":\"Tinkoff5BukvSolverPage_solutionWordsContainer__mbI5X\",\"solutionWord\":\"Tinkoff5BukvSolverPage_solutionWord__+4+5c\"};","import { T5bLetterType } from '../types';\n\nconst nextTypes: Record<T5bLetterType, T5bLetterType> = {\n    [T5bLetterType.ABSENT]: T5bLetterType.MISPOSITIONED,\n    [T5bLetterType.MISPOSITIONED]: T5bLetterType.FOUND,\n    [T5bLetterType.FOUND]: T5bLetterType.ABSENT\n};\n\nconst getNextLetterType = (currentType: T5bLetterType) => {\n    return nextTypes[currentType];\n};\n\nexport default getNextLetterType;\n","import { Point2D } from '../types';\n\nconst point2d = (x: number, y: number): Point2D => ({ x, y });\n\nexport default point2d;\n","import React, { FC, useCallback, useEffect, useRef } from 'react';\nimport { Point2D, T5bLetter, T5bLetterType } from '../types';\nimport styles from '../Tinkoff5BukvSolverPage.module.scss';\nimport classNames from 'classnames';\nimport getNextLetterType from '../utils/getNextLetterType';\nimport point2d from '../utils/point2d';\n\ninterface Props {\n    letter: T5bLetter;\n    onChange: (letter: T5bLetter) => void;\n    active: boolean;\n    onActivate: () => void;\n    onChangeActiveCell: (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => void;\n}\n\nconst Tinkoff5BukvCell: FC<Props> = ({ letter, onChange, active, onActivate, onChangeActiveCell }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const typeClassName = {\n        [T5bLetterType.ABSENT]: styles.typeMissing,\n        [T5bLetterType.MISPOSITIONED]: styles.typeMispositioned,\n        [T5bLetterType.FOUND]: styles.typePresent\n    }[letter.type];\n\n    const handleCellClick = useCallback(\n        (event: React.MouseEvent) => {\n            event.stopPropagation();\n\n            if (!active) {\n                onActivate();\n                return;\n            }\n\n            onChange({\n                ...letter,\n                type: getNextLetterType(letter.type)\n            });\n        },\n        [active, onActivate, onChange, letter]\n    );\n\n    const handleCellInnerClick = useCallback((event: React.MouseEvent) => {\n        event.stopPropagation();\n    }, []);\n\n    const handleInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const nativeEvent = event.nativeEvent as InputEvent;\n\n        event.preventDefault();\n\n        const insertedLetter = nativeEvent.data;\n\n        if (\n            !insertedLetter ||\n            !/[абвгдеёжзийклмнопрстуфхцчшщъыьэюя]/i.test(insertedLetter) ||\n            insertedLetter.length > 1\n        ) {\n            return;\n        }\n\n        const letters = insertedLetter.replace(/ё/gi, 'Е').toUpperCase();\n\n        if (!letters) {\n            return;\n        }\n\n        const lastLetter = letters[letters.length - 1];\n        event.currentTarget.value = lastLetter;\n\n        onChange({\n            ...letter,\n            value: lastLetter\n        });\n        if (lastLetter) {\n            onChangeActiveCell(point2d(1, 0), false, true);\n        }\n    };\n\n    const handleBeforeInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const nativeEvent = event.nativeEvent as InputEvent;\n\n        if (!nativeEvent.data || !/[абвгдеёжзийклмнопрстуфхцчшщъыьэюя]/i.test(nativeEvent.data)) {\n            event.preventDefault();\n            return;\n        }\n\n        event.currentTarget.value = '';\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === ' ' || event.code === 'Space') {\n            onChange({\n                ...letter,\n                type: getNextLetterType(letter.type)\n            });\n            return;\n        }\n\n        if (event.key === 'Backspace' || event.key === 'Delete') {\n            event.currentTarget.value = '';\n            onChange({\n                ...letter,\n                value: undefined\n            });\n\n            if (event.key === 'Backspace') {\n                onChangeActiveCell(point2d(-1, 0), false, true);\n            } else {\n                onChangeActiveCell(point2d(1, 0), true, true);\n            }\n        }\n    };\n\n    const handleContextMenu = (event: React.MouseEvent) => {\n        event.preventDefault();\n\n        onChange({\n            ...letter,\n            type: getNextLetterType(letter.type)\n        });\n    };\n\n    useEffect(() => {\n        if (active) {\n            inputRef.current?.focus();\n        }\n    }, [active]);\n\n    return (\n        <label className={styles.cellLabel} onClick={handleCellClick}>\n            <div\n                className={classNames(styles.cell, typeClassName, active && styles.cellActive)}\n                onContextMenu={handleContextMenu}\n            >\n                {letter.value?.trim() || <>&nbsp;</>}\n            </div>\n            <input\n                ref={inputRef}\n                type=\"url\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                spellCheck=\"false\"\n                unselectable=\"on\"\n                pattern=\"[АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя]\"\n                className={styles.cellInput}\n                onClick={handleCellInnerClick}\n                onBeforeInput={handleBeforeInput}\n                onInputCapture={handleInput}\n                onKeyDown={handleKeyDown}\n            />\n        </label>\n    );\n};\n\nexport default Tinkoff5BukvCell;\n","import React, { FC, useCallback } from 'react';\nimport { Point2D, T5bLetter, T5bWord } from '../types';\nimport Tinkoff5BukvCell from './Tinkoff5BukvCell';\nimport Flex from '../../../components/flex/Flex';\n\ninterface Props {\n    word: T5bWord;\n    onChange: (letters: T5bWord) => void;\n    activeLetterIndex: number | undefined;\n    onActiveLetterIndexChange: (letterIndex: number | undefined) => void;\n    onChangeActiveCell: (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => void;\n}\n\nconst Tinkoff5BukvWord: FC<Props> = ({\n    word,\n    onChange,\n    activeLetterIndex,\n    onActiveLetterIndexChange,\n    onChangeActiveCell\n}) => {\n    const handleLetterChange = useCallback(\n        (changedIndex: number) => (changedLetter: T5bLetter) => {\n            onChange({\n                ...word,\n                letters: word.letters.map((letter, index) => {\n                    if (index !== changedIndex) {\n                        return letter;\n                    }\n\n                    return changedLetter;\n                })\n            });\n        },\n        [word, onChange]\n    );\n\n    const handleLetterActivate = useCallback(\n        (index: number) => () => {\n            onActiveLetterIndexChange(index);\n        },\n        [onChange]\n    );\n\n    return (\n        <Flex gap={10} row wrap=\"nowrap\">\n            {word.letters.map((letter, index) => (\n                <Tinkoff5BukvCell\n                    key={index}\n                    letter={letter}\n                    onChange={handleLetterChange(index)}\n                    active={activeLetterIndex !== undefined && activeLetterIndex === index}\n                    onActivate={handleLetterActivate(index)}\n                    onChangeActiveCell={onChangeActiveCell}\n                />\n            ))}\n        </Flex>\n    );\n};\n\nexport default Tinkoff5BukvWord;\n","import { T5bLetter, T5bLetterType, T5bWord } from './index';\n\ninterface PositionedLetter {\n    position: number;\n    letter: string;\n}\n\nclass T5bGame {\n    readonly absentLetters: string[];\n    readonly mispositionedLetters: Record<string, Set<number>>;\n    readonly foundLetters: PositionedLetter[];\n\n    constructor(words: T5bWord[]) {\n        const normalizedWords: { letters: (T5bLetter | undefined)[] }[] = words.map((word) => {\n            return {\n                ...word,\n                letters: word.letters.map((letter) => {\n                    if (!letter.value) {\n                        return undefined;\n                    }\n\n                    return {\n                        ...letter,\n                        value: letter.value?.toLowerCase()\n                    };\n                })\n            };\n        });\n\n        this.absentLetters = normalizedWords\n            .flatMap((word) => word.letters)\n            .filter((letter) => letter?.type === T5bLetterType.ABSENT)\n            .map((letter) => letter?.value as string);\n\n        this.mispositionedLetters = {};\n        normalizedWords.forEach((word) => {\n            word.letters.forEach((letter, letterIndex) => {\n                if (letter && letter.type === T5bLetterType.MISPOSITIONED) {\n                    const letterValue = letter.value as string;\n                    if (this.mispositionedLetters[letterValue]) {\n                        this.mispositionedLetters[letterValue] = new Set([\n                            ...Array.from(this.mispositionedLetters[letterValue]),\n                            letterIndex\n                        ]);\n                    } else {\n                        this.mispositionedLetters[letterValue] = new Set([letterIndex]);\n                    }\n                }\n            });\n        });\n\n        this.foundLetters = [];\n        normalizedWords.forEach((word) => {\n            word.letters.forEach((letter, letterIndex) => {\n                if (letter && letter.type === T5bLetterType.FOUND) {\n                    this.foundLetters.push({\n                        position: letterIndex,\n                        letter: letter.value as string\n                    });\n                }\n            });\n        });\n\n        console.log({ this: this });\n    }\n}\n\nexport default T5bGame;\n","const wordsRaw = `время\nзнать\nстать\nжизнь\nслово\nместо\nничто\nчерез\nконец\nчасть\nгород\nникто\nземля\nправо\nдверь\nобраз\nзакон\nвойна\nголос\nкнига\nчисло\nнарод\nформа\nсвязь\nулица\nвечер\nмысль\nмесяц\nшкола\nтеатр\nрубль\nсмысл\nорган\nрынок\nсемья\nцентр\nответ\nавтор\nстена\nсовет\nглава\nнаука\nплечо\nточка\nпалец\nномер\nметод\nфильм\nгость\nкровь\nрайон\nармия\nкласс\nгерой\nспина\nсцена\nберег\nфирма\nзавод\nпесня\nроман\nповод\nмалый\nуспех\nвыход\nтекст\nпункт\nлиния\nсреда\nволос\nветер\nогонь\nгрудь\nстрах\nсумма\nсфера\nвчера\nплохо\nмужик\nнемец\nвыбор\nмасса\nслава\nкухня\nотдел\nтовар\nслеза\nвывод\nнорма\nрамка\nрежим\nцелое\nвирус\nпоиск\nналог\nдоход\nкарта\nсорок\nакция\nсосед\nфраза\nтолпа\nсхема\nволна\nптица\nзапах\nводка\nпоезд\nадрес\nлидер\nстиль\nвесна\nэпоха\nтайна\nзапад\nтрава\nфронт\nмузей\nкнязь\nсутки\nсудья\nкрыша\nпоток\nчесть\nеврей\nсотня\nдождь\nтруба\nосень\nпьеса\nчерта\nкусок\nбилет\nмасло\nэкран\nканал\nвагон\nдурак\nсезон\nзапас\nдлина\nокруг\nкрыло\nдоска\nпакет\nживот\nсмена\nпорог\nбуква\nлодка\nсерия\nшутка\nкулак\nнефть\nцифра\nсапог\nмешок\nотказ\nзамок\nдиван\nпокой\nдобро\nспорт\nкость\nмайор\nотдых\nручка\nмечта\nсюжет\nрубеж\nкрест\nвзрыв\nпочва\nзаказ\nштука\nсумка\nхвост\nпесок\nозеро\nстрой\nтанец\nдочка\nнабор\nгорло\nплата\nсъезд\nкошка\nпятно\nткань\nвизит\nокеан\nпауза\nствол\nтепло\nрадио\nнация\nзверь\nбанка\nметро\nобмен\nтоска\nзабор\nмороз\nмарка\nгрязь\nспрос\nмотор\nсевер\nсклад\nмотив\nарест\nотряд\nнужда\nсобор\nсалон\nкапля\nпожар\nхолод\nобида\nвклад\nгонка\nрукав\nтуман\nатака\nигрок\nтонна\nвождь\nорден\nюноша\nбабка\nвызов\nполка\nбровь\nудача\nбытие\nшапка\nложка\nбелок\nголод\nохота\nветка\nбашня\nтариф\nгений\nагент\nсахар\nблаго\nсмесь\nразум\nплита\nбрюки\nмышца\nпосол\nпачка\nшоссе\nикона\nхалат\nидеал\nлента\nштамм\nбомба\nущерб\nархив\nштаны\nпоход\nморда\nпроза\nопера\nмаска\nшляпа\nведро\nлампа\nмалыш\nоблик\nкопия\nуголь\nустав\nчашка\nсудно\nэлита\nветвь\nпочта\nпалка\nактив\nстолб\nангел\nштраф\nотель\nножка\nмышка\nстать\nсвеча\nблюдо\nгрань\nскала\nтакси\nзерно\nсосна\nфорум\nблеск\nпапка\nстепь\nпламя\nтреть\nпевец\nречка\nфинал\nнедра\nзнамя\nдевка\nрюмка\nисход\nобщее\nзвено\nгрипп\nпечка\nпилот\nплоть\nчереп\nсамец\nбочка\nгараж\nсосуд\nсклон\nпоэма\nлавка\nбокал\nкисть\nидиот\nкойка\nякорь\nдрова\nопора\nворот\nтопор\nфизик\nбарон\nбарак\nкукла\nжених\nносок\nобувь\nпринц\nпушка\nбедро\nпорыв\nсетка\nсарай\nопрос\nстарт\nтепло\nшкура\nдрака\nпроба\nмусор\nказак\nхимия\nтуфля\nморяк\nсамка\nплемя\nмадам\nкубок\nягода\nмонах\nбитва\nграмм\nдырка\nпобег\nбазар\nдрама\nотбор\nспирт\nкузов\nванна\nрыбак\nканон\nребро\nфрукт\nвдова\nбалет\nвесть\nказнь\nручей\nнавык\nпение\nвзвод\nкасса\nщенок\nвздох\nюрист\nшахта\nбукет\nшпион\nтираж\nтезис\nжилец\nструя\nзалог\nочерк\nбуфет\nжажда\nсдача\nпасть\nрояль\nнитка\nсуета\nпацан\nтайга\nнаряд\nпетля\nпласт\nобман\nшарик\nрычаг\nзлоба\nпеснь\nстадо\nглина\nзакат\nвыезд\nобзор\nвисок\nпогон\nискра\nзавет\nслуга\nвзнос\nкрыса\nсынок\nкульт\nчайка\nспуск\nдовод\nобыск\nгрунт\nкупол\nзаряд\nотзыв\nпозор\nвопль\nкатер\nцыган\nполяк\nобряд\nтупик\nалмаз\nминус\nтропа\nрельс\nферма\nсталь\nтабак\nпирог\nгорка\nтварь\nпочка\nзалив\nиспуг\nаллея\nвилка\nфокус\nпетух\nпоказ\nовраг\nгроза\nрусло\nполюс\nолень\nбудка\nрубка\nрыбка\nсалат\nбанда\nборец\nобрыв\nхохот\nмайка\nпарус\nпират\nстенд\nперец\nкомар\nислам\nхутор\nбиржа\nисток\nфасад\nтурок\nпытка\nистец\nэтика\nвиски\nобком\nвлага\nновое\nсеанс\nмэрия\nпалач\nтреск\nклоун\nбашка\nсплав\nссора\nмедик\nнасос\nшкала\nскука\nимидж\nтитул\nарена\nласка\nкиоск\nповар\nпарта\nпарад\nзатея\nпучок\nпятка\nгазон\nсиняк\nкрона\nрывок\nпорок\nштурм\nседло\nпепел\nсдвиг\nкишка\nдрожь\nкупец\nкаюта\nштора\nфюрер\nбремя\nпусто\nпафос\nмиска\nкепка\nбагаж\nместь\nманеж\nчулок\nкумир\nсадик\nдрянь\nсвист\nквота\nазарт\nгудок\nпасть\nстопа\nлимон\nбелка\nобход\nролик\nслюна\nоклад\nбетон\nкамин\nпульт\nгамма\nмерка\nгруда\nродня\nафиша\nвахта\nшорох\nштамп\nдонос\nособа\nбрюхо\nбланк\nмагия\nгруша\nдемон\nтесто\nскрип\nталия\nвышка\nсквер\nлапка\nвилла\nкучка\nпчела\nскула\nабзац\nфранк\nпасха\nбугор\nнапор\nблаго\nказна\nчервь\nбалка\nкубик\nвесло\nдосуг\nвихрь\nвенец\nнюанс\nкосяк\nшашка\nчудак\nвъезд\nшишка\nглубь\nпульс\nвылет\nакула\nприют\nотсек\nсвита\nлилия\nшланг\nфакел\nкража\nдиета\nкорка\nвенок\nарбуз\nканат\nрубин\nдуэль\nбаран\nхолст\nмафия\nрация\nколея\nизнос\nкомок\nробот\nрифма\nфланг\nглыба\nизгиб\nэскиз\nбухта\nнутро\nфиниш\nтачка\nхимик\nманер\nаборт\nвальс\nсокол\nчукча\nброня\nкаска\nсалют\nвозня\nдебют\nтолща\nдевиз\nподол\nопека\nмакет\nбаржа\nрента\nвывоз\nуклон\nшприц\nкаток\nотрыв\nвеник\nтесть\nкофта\nотбой\nжулик\nособь\nнедуг\nправо\nнавоз\nсироп\nтрест\nощупь\nбогач\nвишня\nсыщик\nсмола\nдымок\nвидео\nкапот\nдонор\nбарин\nзаход\nохота\nсопка\nвыкуп\nотвод\nзенит\nлунка\nбанан\nжитие\nустье\nпосев\nматка\nканун\nпресс\nнавес\nпарик\nжилка\nсабля\nшторм\nоткос\nаванс\nордер\nссуда\nуклад\nпешка\nшасси\nтракт\nузник\nотход\nулика\nмираж\nдробь\nэтнос\nполис\nкрупа\nметла\nгубка\nзабой\nталон\nсауна\nсенат\nлоток\nсекта\nтахта\nпрядь\nпорох\nавось\nшакал\nмачта\nшрифт\nзавал\nгорох\nраунд\nлимит\nстраж\nсукно\nфилин\nдымка\nзаезд\nпаста\nгетто\nозноб\nсинод\nтопот\nмолот\nтопик\nзагар\nхруст\nграфа\nчехол\nкабак\nгладь\nлинза\nничья\nбайка\nуксус\nвыпад\nиудей\nлеший\nнажим\nвалун\nвзмах\nбрань\nкивок\nнаезд\nмойка\nпорча\nкефир\nштрих\nвожак\nносик\nбычок\nмятеж\nвиток\nтрата\nлавра\nатлас\nсосок\nбулат\nнотка\nустой\nсозыв\nфишка\nворох\nдозор\nмякиш\nрыжик\nвычет\nшейка\nшпага\nлопух\nотчим\nразок\nяичко\nщепка\nкудри\nслива\nсмута\nловля\nполог\nпомин\nпудра\nбатон\nдубль\nфлора\nгрива\nпурга\nзапой\nакциз\nгалка\nкабан\nкамыш\nврата\nчугун\nворон\nкочка\nлакей\nвесть\nшалаш\nшаман\nширма\nнаган\nнемка\nшпана\nгайка\nтопка\nкомод\nметан\nосина\nотпор\nтенор\nсмета\nальфа\nвздор\nрезон\nшайка\nгряда\nкурок\nдосье\nрожок\nгусар\nдрево\nчрево\nтыква\nжилет\nмасть\nохват\nфанат\nвыдох\nлицей\nамбар\nмушка\nореол\nсанки\nтитан\nфауна\nвотум\nчасик\nдетка\nшайба\nбулка\nалкаш\nтанго\nберет\nлапша\nхобби\nлазер\nваряг\nконус\nсушка\nкелья\nтиран\nфлюид\nдогма\nукроп\nсотка\nбутон\nаминь\nобвал\nшлюха\nсмотр\nокрик\nзапор\nглавк\nумник\nтомик\nднище\nересь\nфужер\nтумба\nгольф\nказах\nэмаль\nпинок\nчужак\nлютик\nшпиль\nотрок\nхмель\nмания\nпаром\nиврит\nбраво\nизъян\nэгида\nтонус\nблоха\nладья\nвырез\nрулон\nуступ\nкраса\nсучок\nмамка\nнорка\nножик\nкалий\nглушь\nгорец\nвожжа\nшубка\nузбек\nпайка\nкучер\nторец\nпотоп\nобрез\nнакал\nярлык\nбуран\nгазик\nослик\nволхв\nотвар\nчешуя\nкроха\nклерк\nчесть\nпупок\nпашня\nшпала\nзасов\nобруч\nотлив\nтомат\nмасон\nрознь\nплеть\nвынос\nпосох\nсклеп\nмумия\nляжка\nмолва\nдекан\nлеска\nтулуп\nмазут\nзажим\nзазор\nколос\nполив\nтабор\nтюбик\nрвота\nпятак\nбуфер\nспазм\nдекор\nхвала\nсброс\nтелец\nвогул\nсифон\nдобро\nастра\nлямка\nбачок\nотток\nварка\nскоба\nзелье\nзайка\nареал\nметка\nделец\nнабег\nзубец\nбазис\nножны\nзавуч\nртуть\nжучок\nегерь\nдамба\nопись\nперст\nстолп\nдебри\nжердь\nотвал\nубыль\nговор\nосада\nтранс\nлотос\nспица\nдесна\nтакса\nбасня\nаршин\nюнкер\nафера\nиндус\nлиана\nказус\nокунь\nфляга\nшлейф\nангар\nшмель\nгонец\nфасон\nвираж\nтраур\nкореш\nрубец\nвалик\nтембр\nзагон\nбидон\nшельф\nкулик\nчулан\nтурне\nплеск\nхобот\nжетон\nбойня\nшквал\nпижон\nсмерч\nкаста\nщиток\nкотик\nоазис\nстужа\nбирюк\nпобои\nпицца\nвояка\nбисер\nпосад\nлатыш\nкадка\nхиппи\nпесец\nприма\nкороб\nциник\nжесть\nпанно\nгодик\nоплот\nхохол\nлевша\nлокон\nломка\nкредо\nдятел\nтазик\nродич\nсовок\nнаказ\nтушка\nаркан\nджинн\nзамер\nпонос\nлесть\nколба\nдебил\nизыск\nтапка\nплато\nплаха\nкопна\nпивко\nтерем\nпойма\nрезец\nбочок\nсудак\nшажок\nтабло\nгарем\nизгой\nранка\nладан\nтоник\nгниль\nкураж\nтягач\nпадеж\nфугас\nчурка\nкадет\nоткат\nостов\nугода\nуазик\nбубен\nгамак\nпушок\nастма\nсонет\nадепт\nнарта\nтанин\nмазок\nтабун\nвьюга\nзадор\nкварц\nлесок\nмарля\nхлыст\nкобра\nгнида\nхакер\nкушак\nкювет\nминус\nкузен\nнахал\nпочин\nрумын\nрупор\nкруиз\nмаляр\nпикет\nдавка\nсачок\nтрель\nлихва\nрокот\nабвер\nкадык\nдрозд\nсамбо\nрадар\nбрешь\nпопка\nчернь\nдзюдо\nхолуй\nдумец\nдупло\nфикус\nжираф\nкисет\nкольт\nчудик\nясень\nсопля\nснедь\nслизь\nолово\nопала\nалиби\nзапал\nкупон\nингуш\nатлет\nлепта\nпихта\nагнец\nфинка\nэстет\nкокон\nверфь\nтяжба\nзнать\nяство\nстезя\nдрема\nклише\nбалда\nтиски\nдудка\nгалоп\nвенгр\nконюх\nмерин\nтруха\nжакет\nсвояк\nбурка\nорава\nротор\nоргия\nмразь\nкожух\nутеха\nдомен\nвольт\nчасок\nудаль\nзубок\nвокал\nскарб\nферзь\nчужое\nкирка\nфренч\nловец\nфраер\nшумок\nбегун\nходок\nпекло\nзанос\nхолоп\nазиат\nботва\nнапев\nропот\nнакат\nпенис\nмошка\nмесье\nвалет\nгомон\nлепка\nлайка\nавеню\nкомик\nокрас\nизлом\nгелий\nсупер\nаорта\nмуфта\nобгон\nквант\nпенка\nрампа\nшпора\nпомои\nтипаж\nлыжня\nзадел\nрядно\nевнух\nосока\nхомут\nпяток\nампер\nкросс\nоткуп\nдужка\nоскал\nмалец\nжелчь\nнимфа\nлучик\nлирик\nпрофи\nлепет\nшуруп\nплешь\nвобла\nсидор\nпряжа\nампир\nобуза\nчалма\nпрыть\nсвора\nкалач\nшериф\nбыдло\nрэкет\nкруча\nцапля\nволок\nпомпа\nбрага\nсупер\nкочан\nнавар\nсмрад\nвуаль\nстриж\nкачка\nотжиг\nягуар\nфлирт\nжрица\nфенол\nситец\nэллин\nкакао\nблажь\nмирок\nпорез\nканва\nомлет\nштиль\nскотч\nторос\nотвес\nомега\nольха\nбирка\nбляха\nболид\nневод\nмуляж\nмочка\nмесса\nмарал\nлобби\nкулон\nтаран\nпойло\nкосмы\nпокос\nполоз\nштырь\nвылов\nтрико\nкарат\nтучка\nтюфяк\nугорь\nзебра\nунтер\nзатор\nпсина\nдрейф\nгрыжа\nранец\nрадон\nхворь\nфазан\nухват\nзаика\nчитка\nтрюмо\nствор\nпепси\nщегол\nпшено\nбадья\nфотон\nбосяк\nрожон\nблуза\nрезня\nрейка\nпосыл\nопиум\nтычок\nотара\nсоска\nдачка\nбугай\nнадел\nслайд\nбагор\nхохма\nтранш\nсилок\nосыпь\nвыдел\nгвалт\nпокер\nкукиш\nотгул\nптаха\nсленг\nцинга\nвихор\nларец\nсырок\nрысак\nлитер\nписец\nверба\nаббат\nальфа\nаскет\nбордо\nборов\nвинцо\nдебит\nжерло\nзабег\nзамах\nзатон\nкатар\nкляча\nлишек\nлобок\nмоток\nнарыв\nненец\nпенал\nпикап\nпозыв\nсброд\nсбруя\nседок\nторба\nшурин\nдушок\nсвара\nсилач\nнерпа\nбылое\nдамка\nмулла\nбурда\nхолка\nвиола\nротик\nпалас\nвафля\nшхуна\nкайма\nкиска\nкашка\nжатва\nпиала\nзамша\nспесь\nотрог\nзагул\nиндюк\nредис\nрезка\nвязка\nденди\nмалый\nбакен\nпосул\nмодус\nбизон\nморок\nпорка\nдрель\nминор\nпыжик\nмилка\nмулат\nтелок\nинтим\nструп\nманто\nзавоз\nледок\nлимфа\nгодок\nпошив\nямщик\nкулич\nсюита\nсаван\nфакир\nбронх\nгриль\nночка\nхунта\nгашиш\nюниор\nпарча\nдонец\nанонс\nдонна\nхалва\nлужок\nстроп\nханжа\nзомби\nзнать\nряска\nхерес\nплеер\nрусак\nупырь\nзарок\nпопса\nодурь\nогрех\nгонор\nоблом\nдлань\nсваха\nкулеш\nброшь\nвзлом\nнабат\nбарыш\nсноха\nшулер\nредут\nрепка\nчарка\nсопло\nшифер\nотрез\nмидия\nчечен\nабрек\nлейка\nфурор\nкварк\nаврал\nвывих\nизвив\nплева\nтриба\nхатка\nрешка\nгиена\nватка\nфавор\nгумно\nчтиво\nбитум\nглист\nбобик\nсотая\nшатун\nклеть\nнавет\nзевок\nнагар\nпышка\nотлов\nиерей\nрокер\nлабаз\nгейша\nсурок\nобжиг\nкатод\nрозга\nрахит\nтреба\nфобия\nгидра\nлитий\nтщета\nизвоз\nивняк\nсглаз\nвазон\nокись\nзагиб\nотпад\nпросо\nналим\nпуфик\nвыдра\nсодом\nровик\nхомяк\nмилок\nсофит\nсошка\nмелок\nабрис\nхорей\nпенье\nманго\nфреза\nэркер\nфрант\nлубок\nариец\nлобик\nлежак\nгогот\nцедра\nребус\nтелик\nбекон\nклюка\nшнапс\nпомол\nпакля\nфетиш\nмажор\nмазня\nстела\nландо\nкарел\nдобро\nпатио\nотжим\nфлокс\nнадой\nкумач\nвыпас\nнолик\nсилос\nтвист\nдушка\nноров\nсинус\nобвод\nкарга\nоброк\nколье\nутеря\nхитон\nкокос\nесаул\nшатен\nбожок\nтромб\nклуня\nсенцы\nклика\nпитон\nрядок\nжучка\nжинка\nигрек\nбридж\nжупел\nбурят\nикота\nоклик\nвтора\nдомна\nлогик\nжирок\nвятич\nамвон\nгуашь\nвыгон\nманна\nленок\nлемма\nспрей\nчабан\nхурма\nровня\nрачок\nмосол\nлипка\nчушка\nдебош\nлиман\nщебет\nлетун\nсазан\nакрил\nленца\nкладь\nдылда\nвешка\nкагор\nфуфло\nспора\nфиник\nмитра\nтесак\nпилка\nшавка\nколун\nдубок\nшалун\nколок\nгусли\nмураш\nлишай\nрикша\nлихач\nхалиф\nковка\nслюда\nтурка\nаргон\nхабар\nломик\nветла\nштрек\nунция\nискус\nкельт\nдебет\nстояк\nнырок\nзачин\nгаусс\nчепец\nхлябь\nгросс\nгобой\nосман\nголыш\nпомор\nолифа\nолива\nскетч\nпатлы\nпошиб\nпугач\nмысок\nпешня\nсойка\nмопед\nсатин\nсосец\nмирра\nрвань\nмизер\nспрут\nаллюр\nалыча\nаминь\nатолл\nацтек\nбагет\nлевак\nлаваш\nтамга\nкупля\nбатог\nкузня\nкошма\nсадок\nколер\nклико\nботик\nкисея\nкирха\nкашне\nкаппа\nбубна\nшкода\nтулья\nтумак\nкайло\nказан\nбурун\nинжир\nвакса\nзаумь\nутиль\nвалок\nфагот\nотсев\nжарка\nездок\nдышло\nвидик\nчуваш\nчубик\nфурия\nбутса\nжокей\nвысев\nшихта\nтунец\nбурак\nфеска\nкамея\nбрасс\nкиста\nтопаз\nборок\nполип\nбитюг\nкорча\nцацка\nгусак\nкосая\nбеляк\nкраля\nкресс\nкумыс\nкурья\nдумка\nдедок\nбасок\nбарка\nлапта\nфомка\nдерби\nбалык\nгалун\nсурик\nаспид\nаскер\nлоция\nлучок\nсакля\nлютня\nанион\nмагма\nюннат\nманси\nмахра\nселен\nабхаз\nмедяк\nметис\nрадий\nмымра\nпрель\nхаджи\nхазар\nслега\nрупия\nскаут\nомела\nвалуй\nомуль\nвалка\nзамес\nзарез\nзлато\nудерж\nвепрь\nшваль\nзадок\nпарок\nпария\nсезам\nскейт\nскирд\nсмерд\nмосье\nмолох\nмамба\nстраз\nсупер\nлевит\nтавро\nлафет\nкроль\nкрепь\nкрага\nтемка\nтипун\nкинза\nкащей\nкашпо\nтреух\nзыбка\nзипун\nзенки\nулита\nфаянс\nживец\nфорте\nдойка\nфураж\nдичок\nхарчо\nрепей\nгуляш\nгопак\nцелик\nцокот\nчадра\nвраль\nвраки\nвозок\nвидок\nверея\nшифон\nбукля\nбонза\nшпрот\nбином\nштамб\nбивак\nбахча\nбайда\nэклер\nармяк\nаргус\nэрзац\nэфиоп\nюдоль\nрохля\nпуант\nпричт\nрулет\nпончо\nполон\nплюха\nпилон\nчирей\nдруид\nволан\nдувал\nрында\nдукат\nчумак\nжерех\nопара\nфалда\nваран\nзалом\nумора\nзефир\nзубик\nшелом\nтяпка\nшибер\nизмор\nирмос\nсемит\nкалым\nрысца\nкатет\nкизяк\nтотем\nбраво\nторий\nбонна\nплебс\nкнехт\nкойот\nколли\nконка\nофорт\nкофей\nкофий\nбатут\nкубло\nкутья\nбарий\nлеток\nпалаш\nсхима\nливер\nсусек\nщипок\nсудок\nлохмы\nэкзот\nлошак\nстоик\nмаета\nманка\nалтын\nстанс\nматюг\nсплин\nмезон\nминус\nрогоз\nсолод\nразор\nразик\nсовка\nмурло\nраджа\nсмоль\nпырей\nрондо\nнавал\nпарша\nнамаз\nнищая\nпемза\nскунс\nноска\nнытик\nобмер\nситро\nсиена\nгреча\nцукат\nхряпа\nцыпка\nхорда\nхорал\nгумус\nдедка\nхинди\nдефис\nдинар\nдинго\nвыгул\nчешка\nдокер\nдраже\nчувал\nдонка\nдерма\nперси\nдрога\nдрофа\nчубук\nпузан\nпампа\nсерсо\nворог\nпижма\nсамба\nфьорд\nпанна\nструг\nдурка\nанчар\nфиорд\nжатка\nпарез\nфибра\nлюпин\nфарси\nлючок\nпетит\nушица\nлярва\nзакут\nухарь\nсатир\nзапев\nнаяда\nшафер\nземец\nсайга\nсайра\nзулус\nмакси\nмаман\nбутан\nпатер\nнечет\nпраща\nябеда\nиспод\nкагал\nалеут\nтубус\nканоэ\nаксон\nкапор\nкарда\nманок\nчибис\nямина\nматюк\nмедок\nкичка\nклуша\nоникс\nфуэте\nрумба\nкоала\nмитоз\nсомик\nбиток\nсдоба\nпирит\nрегби\nхасид\nгурия\nмохер\nхамка\nпадуб\nбатыр\nгжель\nхмарь\nтанин\nтальк\nмошна\nталес\nрезак\nлассо\nлегат\nрдест\nголец\nцезий\nхайло\nсивка\nсуфле\nмясцо\nлития\nчекан\nналив\nэвенк\nчалка\nтрапп\nфабра\nнотис\nнажиг\nофсет\nнерка\nкалиф\nсечка\nхлупь\nпещер\nвыкус\nсапер\nдомер\nжулье\nчабер\nкумык\nдубец\nокиян\nкроки\nшнека\nбитье\nершик\nсекач\nавтол\nорлец\nчабер\nкапок\nяспис\nсабур\nорарь\nдобор\nотцеп\nкадий\nкукан\nостяк\nсилур\nкознь\nкалла\nдубье\nвизаж\nбабье\nщитик\nлюнет\nстень\nфитин\nбодяк\nчинар\nагнат\nясырь\nвалец\nотдух\nметил\nшримс\nпигус\nшассе\nвыгар\nпирок\nнагон\nгумма\nтурач\nиндий\nленто\nморцо\nяруга\nвабик\nскарн\nбудяк\nженка\nярыга\nлазка\nтолай\nмелос\nсойма\nсалма\nтупей\nотчет\nпялка\nгуано\nтугун\nфимоз\nмигач\nобнос\nвежда\nгорюн\nтетка\nсапун\nшпынь\nгреза\nкопье\nжулан\nракша\nоблов\nпенни\nгофре\nпанье\nкутас\nшабат\nлещик\nотсос\nижица\nямища\nнырец\nпенек\nидиом\nнажин\nналой\nкупаж\nпещур\nцевка\nмазер\nчутье\nсорго\nчелка\nофеня\nдунит\nнонет\nлюбка\nдунст\nситце\nпсарь\nвервь\nкозон\nругня\nчомга\nтеург\nкирза\nнамол\nсупец\nслука\nсклиз\nдрема\nменка\nчирок\nхамье\nмурин\nбукле\nштраб\nпироп\nотмах\nфасет\nлайба\nтелка\nфрахт\nдосев\nнабоб\nсагиб\nмазик\nсижок\nвылом\nтромп\nухожь\nвозка\nколон\nсойот\nшатия\nмузга\nтоман\nастат\nкопун\nмазур\nходун\nкурка\nпряха\nришта\nушкуй\nбурат\nларек\nметка\nбакан\nкопал\nушник\nхмурь\nоблог\nклака\nобдир\nракия\nорала\nзадик\nпотир\nтриод\nтырло\nгавот\nзятек\nплесо\nчухна\nавгур\nобмин\nщелка\nпожня\nмимик\nтимол\nсяжок\nдухан\nбайга\nталер\nборть\nугрев\nтюрбо\nвозик\nобдел\nвзмыв\nшишак\nганза\nбожба\nапорт\nсабан\nдонце\nигрун\nпропс\nсенцо\nосмос\nмирон\nщекот\nкопач\nжупан\nцуцик\nмуаре\nщипка\nтуаль\nнасып\nшасла\nлупка\nмакао\nсаква\nюкола\nмекка\nиприт\nкопра\nтюрик\nмарго\nнамек\nгольд\nчинка\nприор\nшамот\nсарыч\nмуфти\nкюрин\nфлейц\nсивко\nпорто\nтитло\nоктет\nлбище\nполет\nоржад\nтутор\nгурда\nбонмо\nспурт\nначет\nудило\nойрот\nинвар\nфлейт\nвития\nзакол\nхряст\nлизин\nкожье\nоптик\nбалок\nкроше\nотава\nурина\nкипер\nовсец\nбобок\nдюбек\nратин\nсаржа\nтулес\nпозер\nамеба\nсомье\nтермы\nкопка\nзасев\nопока\nасцит\nновик\nотгиб\nсалоп\nиссоп\nшофер\nпесик\nсосун\nбахта\nгетра\nлбина\nгитан\nсирин\nуброд\nигиль\nнамыв\nкутум\nкаган\nнанду\nишиас\nголье\nкавун\nдутыш\nсусак\nсинап\nавгит\nобъем\nпиано\nнадир\nконек\nпанер\nинула\nжилье\nоркан\nрепье\nфетюк\nкопыл\nлазок\nопоек\nфилер\nкокор\nкатыш\nшугай\nзачес\nсадно\nфадом\nмогол\nлонжа\nглясе\nпатан\nвещун\nпогиб\nхорек\nшанец\nтатка\nсильф\nвзрез\nантре\nпарка\nгарус\nшорня\nперед\nпевун\nпалия\nносач\nромша\nбелец\nцапка\nкайра\nотбив\nактер\nотпал\nпсица\nархар\nржица\nсоляр\nмысик\nфазис\nчебак\nкурия\nшинок\nщипец\nамбре\nлепра\nпозык\nпозем\nмолвь\nсерум\nовчар\nназем\nнатес\nошкуй\nкенар\nнафта\nмалье\nремез\nобчет\nдевон\nшуйца\nполба\nдиана\nтютюн\nнизка\nсябер\nдикая\nгридь\nбатат\nфилей\nдруза\nсутаж\nщетка\nгерма\nшкерт\nэспри\nвитье\nкабил\nпарун\nшемая\nхакас\nбрада\nзарод\nзурна\nликер\nтягло\nнетяг\nненка\nремиз\nжниво\nаймак\nдрага\nнамин\nотруб\nсабеи\nламут\nанкер\nвласы\nплавь\nвзлет\nястык\nмышей\nорлан\nобруб\nдошка\nщелок\nэммер\nмуцин\nситар\nденек\nобжин\nкнель\nкамса\nмолян\nлиска\nсабза\nзажор\nхамса\nвзыск\nстека\nмезга\nсевба\nкалан\nкопир\nштифт\nнарез\nподог\nколка\nтацет\nпикша\nсемга\nкобыз\nтапир\nкорье\nнакол\nгарда\nшпуля\nзачет\nобжим\nгинея\nверес\nбекас\nегоза\nсевок\nвыдув\nвыпор\nлипси\nкокет\nподой\nуйгур\nвирша\nтенек\nнагул\nцарек\nхамит\nшабли\nшабер\nволга\nборей\nпищик\nсейша\nбудра\nалчба\nтавот\nдутье\nлысун\nрепер\nтесло\nгугня\nшнява\nфлинт\nповет\nколча\nорляк\nгрена\nтафья\nфация\nтеска\nтапер\nскало\nжменя\nгузно\nкапер\nистод\nзатек\nсайда\nмодий\nпотек\nсычуг\nускок\nолеум\nмолка\nмикст\nузина\nизлет\nзамор\nобжог\nдерть\nнудга\nповой\nобмыв\nмотет\nиония\nдудак\nдомек\nкручь\nжница\nмакса\nчижик\nкифоз\nвыкол\nмирта\nизмол\nшванк\nулыба\nбирюч\nпахви\nмохны\nшанкр\nнизок\nджига\nсапка\nцитра\nвалек\nмушар\nтерка\nкощей\nкурай\nпасюк\nложок\nмотка\nжакоб\nвалер\nшитик\nвалеж\nжевок\nпиния\nбытье\nвруша\nвымор\nнатяг\nтохар\nневер\nсурна\nконик\nгумми\nманул\nромец\nездка\nповал\nскена\nтифус\nперло\nтафта\nвнука\nдюкер\nгусит\nкайла\nвыпар\nмазар\nшепот\nмычка\nминер\nтезка\nдурра\nмюзет\nзлюка\nпнище\nбасон\nмильт\nтутти\nпенье\nсвиль\nлатук\nмытье\nоплыв\nонуча\nкамус\nдемос\nшимми\nтойон\nаэрон\nмайна\nцыбик\nсивая\nгичка\nкриль\nлилея\nостюк\nмогар\nзакуп\nкуток\nлафит\nмохна\nдойра\nтукан\nвесок\nакажу\nтрефа\nвыбой\nкукша\nзащип\nзасол\nпинта\nскорм\nраина\nпурин\nройка\nтипик\nфизия\nтриас\nбрика\nкиник\nнанос\nсолея\nмазка\nосмий\nжитье\nфузея\nкайен\nступь\nкочет\nщерба\nсырть\nбезик\nлитва\nгуцул\nтанок\nблинт\nсейид\nтючок\nаларм\nовсюг\nмурза\nцапфа\nкреол\nранет\nпокус\nсалол\nюферс\nягель\nадряс\nзатес\nпочет\nтюрбе\nштейн\nнадув\nфатум\nайван\nслуда\nпахит\nкурец\nродий\nбаска\nкамас\nерник\nбылка\nплена\nпьеза\nдутик\nрений\nвымах\nкегль\nромок\nдурро\nрыжак\nхиляк\nкожан\nскудо\nкюрий\nревун\nстепс\nшпунт\nпадог\nлетка\nозимь\nрябец\nмишка\nкойне\nтулий\nхорея\nфлешь\nналеп\nпайва\nфатюй\nмойва\nчтица\nвошка\nжакан\nкница\nполок\nвыруб\nшитье\nэпика\nзакал\nожина\nнасад\nажгон\nдофин\nпоедь\nшатер\nруина\nсамум\nколик\nтулун\nгемма\nнория\nдележ\nобвоз\nтулуз\nсупин\nмятье\nшлица\nсовик\nтарын\nлежка\nпарня\nзасос\nурема\nпараф\nзамет\nмурья\nпокат\nсилон\nлунит\nперга\nзыбун\nбрыла\nсиаль\nрастр\nнивка\nманко\nлагун\nвыпот\nсмазь\nгребь\nсуржа\nхмара\nшмоль\nизбач\nнаход\nсуаре\nковач\nшабер\nгузка\nтузик\nпасма\nсырье\nвелюр\nтырса\nбекар\nлытка\nрытье\nстега\nтаган\nошеек\nризки\nдюшес\nсилка\nобрат\nсайка\nгусек\nотчал\nагава\nбурса\nкамча\nшушун\nжеода\nполом\nначин\nшиизм\nуника\nюнкор\nроток\nкизил\nкозел\nприем\nщечка\nмалик\nобмет\nфижмы\nучеба\nперка\nостит\nзасыл\nорлик\nунион\nпапеж\nжелоб\nрудяк\nколит\nсныть\nляпис\nлемур\nумбра\nнакра\nпалея\nведун\nнилот\nсерко\nдутар\nмямля\nбасма\nверед\nгужик\nгнома\nильма\nкоряк\nхлюст\nбаснь\nртище\nкунак\nяишня\nнанка\nсором\nржище\nсепия\nусина\nкроат\nропак\nтаска\nпадеж\nпорей\nскань\nудэхе\nотлет\nчувяк\nдрена\nокоем\nавизо\nскора\nдзета\nаншеф\nвилок\nчилим\nайран\nобкос\nаттик\nпадун\nнапой\nагами\nувраж\nэпонж\nватин\nосмол\nляссе\nпалех\nбукан\nпойка\nсырец\nагама\nалтей\nсучье\nрогач\nпилат\nтриер\nкорчь\nтюник\nбадан\nпонюх\nтулук\nкобза\nбилль\nлинек\nлобан\nгюрза\nцикля\nсизяк\nзажин\nхиазм\nоткус\nфолио\nсеунч\nпикер\nпифос\nурман\nрябок\nсивер\nюгрич\nятовь\nметол\nрюшка\nгрозд\nпутик\nумище\nвзмет\nсирен\nпукля\nлитка\nбювар\nзвень\nэдикт\nсаман\nрожак\nляшка\nгитов\nгирло\nкрапп\nкосок\nвыжиг\nтрасс\nнатек\nпурка\nдонья\nотъем\nосляк\nкухва\nвекша\nцехин\nбукса\nюзист\nнукер\nотмол\nмахан\nголик\nзапон\nолеин\nэнзим\nштыка\nфиакр\nколоб\nпудик\nэгрет\nэолит\nройба\nпегаш\nолимп\nдеист\nживье\nколет\nпикан\nгнейс\nшабот\nотнос\nцанга\nхерик\nсорус\nтиара\nпрусс\nлайда\nкулан\nзаток\nшизик\nворье\nбювет\nосоед\nдубка\nпрыск\nкутеж\nвотяк\nбобер\nмеццо\nсопун\nливан\nщупик\nбагги\nрусин\nдосол\nренет\nвспых\nгиляк\nканюк\nмучка\nтлень\nселин\nемеля\nорало\nпилав\nшуряк\nдетва\nзализ\nгуран\nстарь\nдесть\nтынок\nотгон\nлузга\nфальц\nутица\nлатка\nчемер\nцадик\nчирус\nвзвар\nчирик\nбулла\nотлуп\nбылье\nмянда\nпитье\nрябик\nпахта\nганец\nномад\nгипюр\nкопер\nабака\nхадис\nехида\nбрыжи\nзалет\nкариб\nупрек\nпасмо\nведро\nриска\nилька\nмойра\nтерно\nгранд\nритор\nблизь\nталик\nабшид\nтешка\nпиток\nчерен\nвизир\nубрус\nфоска\nпутец\nлипец\nковер\nлабет\nюница\nрацея\nфарад\nтябло\nполяш\nвпуск\nнавис\nдойна\nуклея\nшалон\nланды\nобмол\nпаяло\nнойон\nкамка\nизвод\nстило\nпанья\nбармы\nсулея\nкухта\nуниат\nслань\nокрол\nбриль\nнытье\nчиряк\nкникс\nинока\nмамбо\nскуди\nлазея\nлюрик\nзаеда\nкарст\nталыш\nсабей\nкосье\nпучка\nобвес\nобдув\nсигма\nмазло\nтеизм\nхитин\nтугай\nзраза\nсбора\nвывал\nпопик\nфутор\nжурка\nзельц\nвытье\nжнива\nхедер\nпинна\nронжа\nщучка\nхинду\nобсев\nсусло\nбелек\nзазыв\nантик\nвыкат\nчечет\nонагр\nкацап\nнагиб\nчурек\nаэроб\nвыкос\nнегус\nшипок\nфелон\nганка\nтипец\nдунец\nринит\nжарок\nоблет\nмаори\nураза\nкосач\nружье\nкенаф\nщепье\nбюкса\nсыпец\nдожим\nплица\nудэге\nмагик\nрозан\nапрош\nотзол\nсинец\nпопас\nпотяг\nкрица\nободь\nторит\nсимка\nпроем\nльяло\nкабул\nоткол\nмайер\nлизун\nбарич\nбейка\nпоташ\nвзбег\nкумжа\nкотел\nварок\nпалуб\nайсор\nлизис\nтакыр\nгнусь\nчакан\nпанаш\nсырца\nвывес\nскепт\nдадан\nкомми\nкекур\nмотня\nпипка\nмлеко\nхурал\nчреда\nтупец\nхалда\nбочаг\nрафия\nверша\nциста\nскопа\nмалек\nмотто\nмание\nотлог\nвылаз\nиваси\nдщерь\nдудук\nхапун\nцапун\nхряск\nзацеп\nвыжим\nяхонт\nвзрыд\nческа\nзернь\nполой\nбарит\nжелчь\nфурма\nбулга\nпомет\nзолка\nлягва\nжелть\nелина\nблато\nначес\nивина\nпанты\nакант\nчетка\nгубан\nвсход\nпайза\nмумие\nосетр\nпясть\nсистр\nмялка\nкорда\nклект\nаграф\nкоток\nабцуг\nскреп\nсулой\nскачь\nфофан\nярица\nвятка\nкруть\nпроух\nвыгиб\nдрань\nшипун\nташка\nподий\nграве\nмираб\nшелеп\nдорка\nвязок\nратай\nмокко\nпекан\nмишук\nфуляр\nнемая\nукрюк\nклест\nванта\nусище\nдосыл\nамбра\nпапах\nчужая\nмокша\nбеляш\nмаран\nлычко\nчепан\nвыпал\nростр\nбочар\nперье\nкхмер\nтифон\nсвяза\nскрап\nэшарп\nклипс\nфильц\nтодес\nшабур\nшверт\nушкан\nпирке\nхедив\nщурка\nюрага\nтокай\nсеево\nсивуч\nшурпа\nлитье\nпоруб\nфинна\nкегля\nсогды\nчерва\nпиита\nхлест\nфукус\nсохач\nшевро\nрипус\nпикон\nпожог\nфланк\nшитво\nпунец\nханша\nзятик\nчебот\nбутуз\nирбис\nежиха\nсерна\nфавус\nгагат\nбурав\nлешак\nголяк\nкудлы\nсорит\nотвоз\nхинин\nкагат\nларго\nгазок\nлемеш\nмоляр\nстынь\nсерка\nверки\nпешец\nмокой\nтондо\nкивер\nбубон\nкулек\nрыбец\nюгурт\nрутил\nлегаш\nчуйка\nтечка\nоршад\nлюффа\nсогра\nпатуа\nдомра\nтигра\nмиома\nодежа\nмалка\nизюбр\nпсише\nштосс\nвалах\nсмуть\nдерен\nжелна\nшняка\nбакун\nарека\nнавой\nржавь\nфаска\nланка\nлерка\nдеизм\nгибка\nплаун\nмирза\nфутер\nкосец\nдежка\nмутон\nбареж\nобкат\nстыдь\nбелье\nребаб\nрясна\nбритт\nерник\nбердо\nлачка\nхашиш\nнулик\nжамка\nнамет\nцевье\nсаами\nмюрид\nналет\nлизол\nсолка\nтеист\nизвет\nредан\nвалух\nчеред\nклупп\nпахвы\nзобик\nсипай\nлюпус\nсиняя\nгорно`.trim();\n\nconst tinkoff5bukvWords = wordsRaw.split('\\n');\n\nexport default tinkoff5bukvWords;\n","import tinkoff5bukvWords from '../assets/tinkoff5bukvWords';\nimport T5bGame from '../types/T5bGame';\nimport { difference } from 'lodash';\n\nconst solveT5bGame = (game: T5bGame): string[] => {\n    const mispositionedLettersEntries = Object.entries(game.mispositionedLetters).map(\n        (entry) => [entry[0], Array.from(entry[1])] as const\n    );\n\n    const foundLettersList = game.foundLetters.map((letter) => letter.letter);\n    const absentLetters = difference(game.absentLetters, foundLettersList);\n\n    return tinkoff5bukvWords.filter((word) => {\n        if (\n            !game.foundLetters.every((letter) => {\n                return word[letter.position] === letter.letter;\n            })\n        ) {\n            return false;\n        }\n\n        if (\n            !absentLetters.every((letter) => {\n                return !word.includes(letter);\n            })\n        ) {\n            return false;\n        }\n\n        if (\n            !mispositionedLettersEntries.every(([letter, wrongPositions]) => {\n                return wrongPositions.every((wrongPosition) => {\n                    const letterIndex = word.indexOf(letter);\n                    return letterIndex !== -1 && word[wrongPosition] !== letter;\n                });\n            })\n        ) {\n            return false;\n        }\n\n        return true;\n    });\n};\n\nexport default solveT5bGame;\n","import React, { FunctionComponent, useCallback, useMemo, useState } from 'react';\nimport Flex from '../../components/flex/Flex';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './Tinkoff5BukvSolverPage.module.scss';\nimport Tinkoff5BukvWord from './components/Tinkoff5BukvWord';\nimport { Point2D, T5bLetter, T5bLetterType, T5bWord } from './types';\nimport useArrayStateMutator from '../../hooks/useArrayStateMutator';\nimport point2d from './utils/point2d';\nimport T5bGame from './types/T5bGame';\nimport solveT5bGame from './utils/solveT5bGame';\nimport { useDebouncedMemo } from '../../hooks/debouncedMemo';\nimport { Tag } from 'antd';\nimport { take } from 'lodash';\n\nconst createLetter = (): T5bLetter => ({\n    value: undefined,\n    type: T5bLetterType.ABSENT\n});\n\nconst createWord = (): T5bWord => ({\n    letters: [createLetter(), createLetter(), createLetter(), createLetter(), createLetter()]\n});\n\nconst createWords = (): T5bWord[] => [\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord(),\n    createWord()\n];\n\nconst fillWord = (t5bWord: T5bWord, word: string, previous5bWord: T5bWord | undefined): T5bWord => {\n    return {\n        ...t5bWord,\n        letters: t5bWord.letters.map((letter, index) => {\n            return {\n                ...letter,\n                type: previous5bWord\n                    ? previous5bWord.letters[index].type === T5bLetterType.FOUND\n                        ? T5bLetterType.FOUND\n                        : letter.type\n                    : letter.type,\n                value: word[index]\n            };\n        })\n    };\n};\n\nconst Tinkoff5BukvSolverPage: FunctionComponent = () => {\n    const [words, setWords] = useState<T5bWord[]>(createWords());\n    const { fpChangeByIndex: handleWordChange } = useArrayStateMutator(setWords);\n\n    const [activeCell, setActiveCell] = useState<Point2D>();\n\n    const [solutionLimit, setSolutionLimit] = useState<number>(100);\n\n    const entireSolution = useDebouncedMemo(\n        () => {\n            const game = new T5bGame(words);\n            return solveT5bGame(game);\n        },\n        [words],\n        50\n    );\n\n    const solution = useMemo(() => {\n        return (\n            entireSolution && {\n                count: entireSolution.length,\n                words: take(entireSolution, solutionLimit)\n            }\n        );\n    }, [entireSolution, solutionLimit]);\n\n    const handleActiveLetterIndexChange = useCallback(\n        (wordIndex: number | undefined) => (letterIndex: number | undefined) => {\n            if (wordIndex === undefined || letterIndex === undefined) {\n                setActiveCell(undefined);\n                return;\n            }\n\n            setActiveCell(point2d(letterIndex, wordIndex));\n        },\n        []\n    );\n\n    const handleOutsideFieldClick = useCallback(() => {\n        setActiveCell(undefined);\n    }, []);\n\n    const handleChangeActiveCell = useCallback(\n        (delta: Point2D, isHorizontalOnly?: boolean, isNoEdgesOverflow?: boolean) => {\n            if (!activeCell) {\n                return;\n            }\n\n            delta = point2d(Math.sign(delta.x), Math.sign(delta.y));\n\n            if (delta.x - delta.y === 0) {\n                return;\n            }\n\n            setActiveCell((index) => {\n                if (!index) {\n                    return index;\n                }\n\n                const indexY = index.y;\n                const indexX = index.x;\n\n                const deltaY = delta.y;\n                const deltaX = delta.x;\n\n                const currentWord = words[activeCell.y];\n\n                const maxY = words.length - 1;\n                const maxX = currentWord.letters.length - 1;\n\n                const getMovedY = (deltaY: number, isNoOverflow?: boolean) => {\n                    if (isHorizontalOnly) {\n                        return indexY;\n                    }\n\n                    if (deltaY === 1 && indexY >= maxY) {\n                        return isNoOverflow ? indexY : 0;\n                    }\n                    if (deltaY === -1 && indexY <= 0) {\n                        return isNoOverflow ? indexY : maxY;\n                    }\n                    return indexY + deltaY;\n                };\n\n                if (deltaY) {\n                    return point2d(indexX, getMovedY(deltaY));\n                }\n\n                const getMovedX = (overflowX: number, isNoOverflow: boolean) => {\n                    if (overflowX === 1) {\n                        return isNoOverflow ? indexX : 0;\n                    }\n                    if (overflowX === -1) {\n                        return isNoOverflow ? indexX : maxX;\n                    }\n                    return indexX + deltaX;\n                };\n\n                const overflowX = deltaX === -1 && indexX <= 0 ? -1 : deltaX === 1 && indexX >= maxX ? 1 : 0;\n\n                const movedY = getMovedY(overflowX, isNoEdgesOverflow);\n                const isNoOverflowY = isNoEdgesOverflow === true && movedY === indexY;\n\n                return point2d(getMovedX(overflowX, isNoOverflowY), movedY);\n            });\n        },\n        [words, activeCell]\n    );\n\n    const handleKeyDown = useCallback(\n        (event: React.KeyboardEvent<HTMLElement>) => {\n            switch (event.key) {\n                case 'ArrowUp':\n                    handleChangeActiveCell(point2d(0, -1));\n                    break;\n                case 'ArrowDown':\n                    handleChangeActiveCell(point2d(0, 1));\n                    break;\n                case 'ArrowLeft':\n                    handleChangeActiveCell(point2d(-1, 0));\n                    break;\n                case 'ArrowRight':\n                    handleChangeActiveCell(point2d(1, 0));\n                    break;\n            }\n        },\n        [handleChangeActiveCell]\n    );\n\n    const handleSolutionWordClick = (word: string) => () => {\n        const wordToFillIndex = words.findIndex((word) => word.letters.every((letter) => !letter.value));\n        if (wordToFillIndex === -1) {\n            return;\n        }\n\n        const wordToFill = words[wordToFillIndex];\n        const filledWord = fillWord(wordToFill, word.toUpperCase(), words[wordToFillIndex - 1]);\n        handleWordChange(wordToFillIndex)(filledWord);\n    };\n\n    const handleSolutionShowMore = () => {\n        setSolutionLimit((limit) => limit + 100);\n    };\n\n    return (\n        <PageContainer\n            title=\"Tinkoff 5bukv Solver\"\n            className={styles.container}\n            onClick={handleOutsideFieldClick}\n            onKeyDown={handleKeyDown}\n        >\n            <Flex col>\n                <Flex gap={10} col wrap=\"nowrap\" className={styles.field}>\n                    {words.map((word, index) => {\n                        const activeLetterIndex =\n                            activeCell === undefined ? undefined : activeCell.y === index ? activeCell.x : undefined;\n\n                        return (\n                            <Tinkoff5BukvWord\n                                key={index}\n                                word={word}\n                                onChange={handleWordChange(index)}\n                                activeLetterIndex={activeLetterIndex}\n                                onActiveLetterIndexChange={handleActiveLetterIndexChange(index)}\n                                onChangeActiveCell={handleChangeActiveCell}\n                            />\n                        );\n                    })}\n                </Flex>\n\n                {solution && (\n                    <Flex col gap={8} className={styles.solutionContainer}>\n                        <h3 className={styles.solutionCounter}>Words found: {solution.count}</h3>\n\n                        <Flex row wrap=\"wrap\" className={styles.solutionWordsContainer}>\n                            {solution.words.map((word, index) => (\n                                <Tag\n                                    key={`${word}/${index}`}\n                                    className={styles.solutionWord}\n                                    onClick={handleSolutionWordClick(word)}\n                                >\n                                    {word}\n                                </Tag>\n                            ))}\n                            {solution.count > solution.words.length && (\n                                <Tag className={styles.solutionWord} onClick={handleSolutionShowMore}>\n                                    ...\n                                </Tag>\n                            )}\n                        </Flex>\n                    </Flex>\n                )}\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default Tinkoff5BukvSolverPage;\n","import { Dispatch, SetStateAction } from 'react';\nimport produce from 'immer';\n\ntype RecipeReturnType<S> = S | void | undefined;\nexport type StateProducerRecipe<S> = (draft: S) => RecipeReturnType<S>;\n\nconst produceState = <S>(setState: Dispatch<SetStateAction<S>>, recipe: StateProducerRecipe<S>): void => {\n    setState((state) => {\n        return produce(state, recipe);\n    });\n};\n\nexport default produceState;\n","// This icon file is generated automatically.\nvar ClockCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z\" } }] }, \"name\": \"clock-circle\", \"theme\": \"outlined\" };\nexport default ClockCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClockCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/ClockCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ClockCircleOutlined = function ClockCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClockCircleOutlinedSvg\n  }));\n};\n\nClockCircleOutlined.displayName = 'ClockCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(ClockCircleOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\n\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      checked = _a.checked,\n      onChange = _a.onChange,\n      onClick = _a.onClick,\n      restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\n\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport CheckableTag from './CheckableTag';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\n\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      className = _a.className,\n      style = _a.style,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClose = _a.onClose,\n      closeIcon = _a.closeIcon,\n      _a$closable = _a.closable,\n      closable = _a$closable === void 0 ? false : _a$closable,\n      props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n\n    return null;\n  };\n\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\n\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nTag.displayName = 'Tag';\nTag.CheckableTag = CheckableTag;\nexport default Tag;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Base = _interopRequireDefault(require(\"./Base\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Paragraph = function Paragraph(props, ref) {\n  return /*#__PURE__*/React.createElement(_Base[\"default\"], (0, _extends2[\"default\"])({\n    ref: ref\n  }, props, {\n    component: \"div\"\n  }));\n};\n\nvar _default = /*#__PURE__*/React.forwardRef(Paragraph);\n\nexports[\"default\"] = _default;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"names":["isNoResult","value","noResult","isObject","createDebouncedMemoHook","debounceFn","factory","deps","wait","useState","setValue","factoryRef","useAutoRef","debounceFunction","useRef","call","actualNoResult","Object","freeze","_noResult","v4","current","useEffect","useDebouncedMemo","debounce","throttle","setState","produceState","useStateProducer","useMemo","changeByIndex","index","newItem","state","updateByIndex","oldItem","undefined","removeByIndex","splice","add","items","fpChangeByIndex","fpUpdateByIndex","fpRemoveByIndex","clear","useCallback","recipe","PageTag","getTagNodes","key","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","React","props","ref","title","description","titleExtra","tags","noPadding","noContentPadding","children","className","contentClassName","contentRef","restProps","renderedTags","map","classNames","styles","length","direction","size","Paragraph","T5bLetterType","nextTypes","ABSENT","MISPOSITIONED","FOUND","currentType","x","y","letter","onChange","active","onActivate","onChangeActiveCell","inputRef","typeClassName","type","handleCellClick","event","stopPropagation","getNextLetterType","handleCellInnerClick","focus","onClick","onContextMenu","preventDefault","trim","autoComplete","autoCorrect","spellCheck","unselectable","pattern","onBeforeInput","nativeEvent","data","test","currentTarget","onInputCapture","insertedLetter","letters","replace","toUpperCase","lastLetter","point2d","onKeyDown","code","word","activeLetterIndex","onActiveLetterIndexChange","handleLetterChange","changedIndex","changedLetter","handleLetterActivate","Flex","gap","row","wrap","T5bGame","words","absentLetters","mispositionedLetters","foundLetters","normalizedWords","toLowerCase","this","flatMap","filter","forEach","letterIndex","letterValue","Set","Array","from","push","position","console","log","split","game","mispositionedLettersEntries","entries","entry","foundLettersList","difference","tinkoff5bukvWords","every","includes","wrongPosition","indexOf","createLetter","createWord","setWords","handleWordChange","useArrayStateMutator","activeCell","setActiveCell","solutionLimit","setSolutionLimit","entireSolution","solveT5bGame","solution","count","take","handleActiveLetterIndexChange","wordIndex","handleOutsideFieldClick","handleChangeActiveCell","delta","isHorizontalOnly","isNoEdgesOverflow","Math","sign","indexY","indexX","deltaY","deltaX","currentWord","maxY","maxX","getMovedY","isNoOverflow","overflowX","movedY","getMovedX","handleKeyDown","handleSolutionWordClick","wordToFillIndex","findIndex","filledWord","t5bWord","previous5bWord","fillWord","PageContainer","col","limit","produce","AntdIcon","_objectSpread","ClockCircleOutlinedSvg","displayName","WarningOutlinedSvg","__rest","s","e","t","p","prototype","hasOwnProperty","getOwnPropertySymbols","i","propertyIsEnumerable","_a","_classNames","customizePrefixCls","prefixCls","checked","getPrefixCls","ConfigContext","cls","_defineProperty","concat","_extends","PresetColorRegex","RegExp","PresetColorTypes","PresetStatusColorRegex","PresetStatusColorTypes","InternalTag","style","onClose","closeIcon","_a$closable","closable","_React$useContext","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","isPresetColor","tagStyle","backgroundColor","presetColor","tagClassName","handleCloseClick","defaultPrevented","isNeedWave","tagProps","omit","iconNode","kids","tagNode","CloseOutlined","Wave","Tag","CheckableTag","_interopRequireDefault","require","_typeof","exports","_extends2","obj","nodeInterop","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","desc","set","_interopRequireWildcard","_Base","WeakMap","cacheBabelInterop","cacheNodeInterop","createElement","component","_default","forwardRef","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","toString","substr","arr","offset","arguments","validate","TypeError","options","buf","rnds","random","stringify"],"sourceRoot":""}