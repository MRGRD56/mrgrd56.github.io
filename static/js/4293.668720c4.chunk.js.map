{"version":3,"file":"static/js/4293.668720c4.chunk.js","mappings":"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","sources":["hooks/useChangeState.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeStateHandler.ts","hooks/useInputState.ts","hooks/useStateChangeByEventHandler.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/contentTransformer/ContentTransformer.tsx","pages/qrGeneratorPage/QrGeneratorPage.tsx","utils/serializeXmlNode.ts","components/svgImage/SvgImage.tsx","webpack://mrgrd56.github.io/./src/pages/qrGeneratorPage/QrGeneratorPage.module.scss?7b84","components/canvasImage/CanvasImage.tsx","utils/getLocalStorageKey.ts","utils/getNpmPackageLink.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport useStateChangeByEventHandler from './useStateChangeByEventHandler';\n\ntype PossiblyUndefined<S, V> = V extends undefined ? S | undefined : S;\nexport type SetStateByEventAction<S> = (event: React.ChangeEvent<{ value: S }>) => void;\n\nfunction useInputState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>, SetStateByEventAction<S>];\nfunction useInputState<S = undefined>(): [\n    S | undefined,\n    Dispatch<SetStateAction<S | undefined>>,\n    SetStateByEventAction<S | undefined>\n];\nfunction useInputState<S>(initialState?: S | (() => S)) {\n    const [value, setValue] = useState<PossiblyUndefined<S, typeof initialState>>(initialState);\n    const setValueByEvent = useStateChangeByEventHandler(setValue);\n\n    return [value, setValue, setValueByEvent];\n}\n\nexport default useInputState;\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport useAutoRef from './useAutoRef';\n\nexport const handleEventTargetValueChange =\n    <S>(callback: (value: S) => void, onChange?: React.ChangeEventHandler<{ value: S }>) =>\n    (event: React.ChangeEvent<{ value: S }>) => {\n        callback(event.target.value);\n        onChange?.(event);\n    };\n\nconst useStateChangeByEventHandler = <S>(\n    setState: Dispatch<SetStateAction<S>>,\n    onChange?: React.ChangeEventHandler<{ value: S }>\n) => {\n    const onChangeRef = useAutoRef(onChange);\n\n    return useCallback(handleEventTargetValueChange(setState, onChangeRef.current), [setState]);\n};\n\nexport default useStateChangeByEventHandler;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)}>{children}</div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useMutationObserver } from 'rooks';\n\ninterface Props {\n    transform: (element: Element) => ReactNode;\n    children?: ReactNode;\n}\n\nfunction ContentTransformer({ transform, children }: Props) {\n    const childrenWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [transformedElement, setTransformedElement] = useState<ReactNode>();\n\n    const handleChildrenMutation = useCallback(() => {\n        const { current } = childrenWrapperRef;\n\n        if (!current) {\n            return;\n        }\n\n        const transformingElement = current.children?.[0];\n\n        if (!transformingElement) {\n            return;\n        }\n\n        setTransformedElement(transform(transformingElement));\n    }, [transform]);\n\n    useEffect(handleChildrenMutation, [handleChildrenMutation]);\n    useMutationObserver(childrenWrapperRef, handleChildrenMutation);\n\n    return (\n        <>\n            {transformedElement}\n            <div ref={childrenWrapperRef} className=\"d-none\">\n                {children}\n            </div>\n        </>\n    );\n}\n\nexport default ContentTransformer;\n","import React, { FunctionComponent, useCallback, useMemo, useRef } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Col, Input, InputNumber, Switch, Tabs } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport useInputState from '../../hooks/useInputState';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport SvgImage from '../../components/svgImage/SvgImage';\nimport styles from './QrGeneratorPage.module.scss';\nimport classNames from 'classnames';\nimport Text from 'antd/lib/typography/Text';\nimport ExternalLink from '../../components/ExternalLink';\nimport getNpmPackageLink from '../../utils/getNpmPackageLink';\nimport { useLocalstorageState } from 'rooks';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport CanvasImage from '../../components/canvasImage/CanvasImage';\n\nconst titleExtra = (\n    <Text type=\"secondary\">\n        uses <ExternalLink href={getNpmPackageLink('qrcode.react')}>qrcode.react</ExternalLink>\n    </Text>\n);\n\ninterface QrOptions {\n    size: number;\n    fgColor: string;\n    bgColor: string;\n    doIncludeMargin: boolean;\n}\n\nconst qrOptionsDefault: QrOptions = {\n    size: 220,\n    fgColor: '#000000',\n    bgColor: '#ffffff',\n    doIncludeMargin: true\n};\n\nenum QrOutputFormat {\n    SVG_IMAGE = 'SVG_IMAGE',\n    PNG_IMAGE = 'PNG_IMAGE'\n}\n\nconst QrGeneratorPage: FunctionComponent = () => {\n    const qrCodeWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [text, , setTextByEvent] = useInputState<string>('');\n    const [qrOptions, setQrOptions] = useLocalstorageState<QrOptions>(\n        getLocalStorageKey('qr-generator', 'qrOptions'),\n        qrOptionsDefault\n    );\n    const [outputFormat, setOutputFormat] = useLocalstorageState<QrOutputFormat>(\n        getLocalStorageKey('qr-generator', 'outputFormat'),\n        QrOutputFormat.SVG_IMAGE\n    );\n\n    const handleQrOptionChange = useChangeStateHandler(setQrOptions);\n\n    const handleOutputFormatChange = useCallback((key: string) => {\n        setOutputFormat(key as QrOutputFormat);\n    }, []);\n\n    const qrProps = useMemo(\n        () => ({\n            value: text,\n            size: qrOptions.size,\n            fgColor: qrOptions.fgColor,\n            bgColor: qrOptions.bgColor,\n            includeMargin: qrOptions.doIncludeMargin,\n            level: undefined\n        }),\n        [text, qrOptions]\n    );\n\n    return (\n        <PageContainer title=\"QR Generator\" titleExtra={titleExtra}>\n            <Col xs={24} lg={12}>\n                <TextArea value={text} onChange={setTextByEvent} placeholder=\"Input text\" rows={3} allowClear />\n                <label className={classNames(styles.formItem, 'mt-2')}>\n                    <div>Size</div>\n                    <InputNumber\n                        value={qrOptions.size}\n                        onChange={handleQrOptionChange('size')}\n                        className={styles.numericInput}\n                    />\n                </label>\n                <label className={styles.formItem}>\n                    <div>Foreground</div>\n                    <Input\n                        value={qrOptions.fgColor}\n                        onChange={handleQrOptionChange('fgColor')}\n                        className=\"font-monospace\"\n                    />\n                </label>\n                <label className={styles.formItem}>\n                    <div>Background</div>\n                    <Input\n                        value={qrOptions.bgColor}\n                        onChange={handleQrOptionChange('bgColor')}\n                        className=\"font-monospace\"\n                    />\n                </label>\n                <label className={classNames(styles.formItem, styles.switchFormItem)}>\n                    <Switch checked={qrOptions.doIncludeMargin} onChange={handleQrOptionChange('doIncludeMargin')} />\n                    <div>Margin</div>\n                </label>\n                <div ref={qrCodeWrapperRef} className={styles.qrCodeWrapper}>\n                    <Tabs activeKey={outputFormat} onChange={handleOutputFormatChange}>\n                        <Tabs.TabPane tab=\"SVG\" key={QrOutputFormat.SVG_IMAGE}>\n                            <SvgImage>\n                                <QRCodeSVG {...qrProps} />\n                            </SvgImage>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"PNG\" key={QrOutputFormat.PNG_IMAGE}>\n                            <CanvasImage>\n                                <QRCodeCanvas {...qrProps} />\n                            </CanvasImage>\n                        </Tabs.TabPane>\n                    </Tabs>\n                </div>\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default QrGeneratorPage;\n","const xmlSerializer = new XMLSerializer();\n\nconst serializeXmlNode = (node: Node): string => {\n    return xmlSerializer.serializeToString(node);\n};\n\nexport default serializeXmlNode;\n","import React, { FunctionComponent } from 'react';\nimport ContentTransformer from '../contentTransformer/ContentTransformer';\nimport serializeXmlNode from '../../utils/serializeXmlNode';\n\nconst transform = (element: Element) => {\n    const svgString = serializeXmlNode(element);\n    const svgBase64 = window.btoa(svgString);\n    const src = 'data:image/svg+xml;base64,' + svgBase64;\n\n    return <img src={src} />;\n};\n\nconst SvgImage: FunctionComponent = ({ children }) => {\n    return <ContentTransformer transform={transform}>{children}</ContentTransformer>;\n};\n\nexport default SvgImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"formItem\":\"QrGeneratorPage_formItem__dvSqT\",\"switchFormItem\":\"QrGeneratorPage_switchFormItem__gVH69\",\"numericInput\":\"QrGeneratorPage_numericInput__SKJth\",\"qrCodeWrapper\":\"QrGeneratorPage_qrCodeWrapper__mHtGM\"};","import React, { FunctionComponent, ReactNode } from 'react';\nimport ContentTransformer from '../contentTransformer/ContentTransformer';\n\nconst transform = (element: Element): ReactNode => {\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('element is not a canvas');\n    }\n\n    const { width, height } = window.getComputedStyle(element);\n\n    return <img src={element.toDataURL()} width={Number.parseInt(width)} height={Number.parseInt(height)} />;\n};\n\nconst CanvasImage: FunctionComponent = ({ children }) => {\n    return <ContentTransformer transform={transform}>{children}</ContentTransformer>;\n};\n\nexport default CanvasImage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","const getNpmPackageLink = (packageName: string): string => `https://www.npmjs.com/package/${packageName}`;\n\nexport default getNpmPackageLink;\n"],"names":["setState","useCallback","key","value","state","isChangeEvent","isObject","property","changeState","useChangeState","actualValue","call","target","initialState","useState","setValue","useStateChangeByEventHandler","onChange","onChangeRef","useAutoRef","callback","event","handleEventTargetValueChange","current","PageTag","getTagNodes","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","props","ref","title","description","titleExtra","tags","noPadding","noContentPadding","children","className","contentClassName","restProps","renderedTags","useMemo","map","classNames","styles","length","direction","size","Paragraph","QrOutputFormat","transform","childrenWrapperRef","useRef","transformedElement","setTransformedElement","handleChildrenMutation","transformingElement","useEffect","useMutationObserver","xmlSerializer","XMLSerializer","node","serializeToString","element","svgString","serializeXmlNode","src","window","btoa","HTMLCanvasElement","Error","getComputedStyle","width","height","toDataURL","Number","parseInt","Text","type","ExternalLink","href","getNpmPackageLink","qrOptionsDefault","fgColor","bgColor","doIncludeMargin","qrCodeWrapperRef","useInputState","text","setTextByEvent","useLocalstorageState","getLocalStorageKey","qrOptions","setQrOptions","SVG_IMAGE","outputFormat","setOutputFormat","handleQrOptionChange","useChangeStateHandler","handleOutputFormatChange","qrProps","includeMargin","level","undefined","PageContainer","xs","lg","TextArea","placeholder","rows","allowClear","checked","activeKey","tab","PNG_IMAGE","scope","name","NULL_LOCALSTORAGE_KEY","packageName"],"sourceRoot":""}