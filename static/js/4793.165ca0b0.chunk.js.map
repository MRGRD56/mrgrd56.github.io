{"version":3,"file":"static/js/4793.165ca0b0.chunk.js","mappings":"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","sources":["components/NpmLink.tsx","components/appEditor/AppEditor.tsx","utils/copyText.ts","utils/copyBlob.ts","components/copyButton/CopyButton.tsx","hooks/useInputState.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","pages/jsEvaluatorPage/types/OutputMode.ts","webpack://mrgrd56.github.io/./src/pages/jsEvaluatorPage/JsEvaluatorPage.module.scss?7728","utils/monaco/monacoExtraLibs.ts","webpack://mrgrd56.github.io/./src/components/labeledSwitch/LabeledSwitch.module.scss?3774","components/labeledSwitch/LabeledSwitch.tsx","components/jsObjectViewer/JsObjectViewer.tsx","pages/jsEvaluatorPage/JsEvaluatorPage.tsx","utils/getErrorMessage.ts","utils/getLocalStorageKey.ts","utils/getNpmPackageLink.ts","utils/scopedEval.ts"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\nimport ExternalLink from './ExternalLink';\nimport getNpmPackageLink from '../utils/getNpmPackageLink';\n\ninterface Props {\n    packageName: string;\n    plain?: boolean;\n    children?: ReactNode;\n}\n\nconst NpmLink: FunctionComponent<Props> = ({ packageName, plain, children }) => {\n    const link = getNpmPackageLink(packageName);\n\n    const text = children || packageName;\n\n    return <ExternalLink href={link}>{plain ? text : <code>{text}</code>}</ExternalLink>;\n};\n\nexport default React.memo(NpmLink);\n","import React, { FunctionComponent, useCallback } from 'react';\r\nimport Editor, { EditorProps, OnChange } from '@monaco-editor/react';\r\nimport useAppTheme from '../../hooks/useAppTheme';\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames';\r\nimport * as monaco from 'monaco-editor';\r\nimport MonacoLanguage from '../../types/MonacoLanguage';\r\n\r\nconst loadingNode = <Spin size=\"large\" />;\r\n\r\nexport type AppOnChange = (value: string, ev: monaco.editor.IModelContentChangedEvent) => void;\r\n\r\ninterface Props extends Omit<EditorProps, 'onChange'> {\r\n    onChange?: AppOnChange;\r\n    language?: MonacoLanguage;\r\n}\r\n\r\nconst AppEditor: FunctionComponent<Props> = ({ className, loading, theme, onChange, ...props }) => {\r\n    const { isDarkMode } = useAppTheme();\r\n\r\n    const handleChange = useCallback<OnChange>(\r\n        (value, ev) => {\r\n            onChange?.(value ?? '', ev);\r\n        },\r\n        [onChange]\r\n    );\r\n\r\n    return (\r\n        <Editor\r\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\r\n            className={classNames('app-monaco-editor', className)}\r\n            loading={loading ?? loadingNode}\r\n            onChange={handleChange}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AppEditor;\r\n","const copyText = (text: string | undefined) => {\n    if (!text) {\n        return;\n    }\n\n    return navigator.clipboard.writeText(text);\n};\n\nexport default copyText;\n","const copyBlob = (blob: Blob) => {\n    return navigator.clipboard.write([\n        new ClipboardItem({\n            [blob.type]: blob\n        })\n    ]);\n};\n\nexport default copyBlob;\n","import React, { MouseEvent, MouseEventHandler, useRef, useState } from 'react';\nimport copyText from '../../utils/copyText';\nimport { Button, ButtonProps } from 'antd';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { isNil, isString } from 'lodash';\nimport copyBlob from '../../utils/copyBlob';\n\ntype ContentType = string | Blob | null | undefined;\n\ninterface Props<T extends ContentType> extends Omit<ButtonProps, 'value'> {\n    value: T;\n    copyEmpty?: boolean;\n    onClick?: (event: MouseEvent<HTMLButtonElement>) => T;\n}\n\nfunction CopyButton<T extends ContentType>({ value, copyEmpty, children, onClick, icon, ...props }: Props<T>) {\n    const [isCopied, setIsCopied] = useState<boolean>(false);\n\n    const copiedTimeoutRef = useRef<NodeJS.Timeout>();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = async (event) => {\n        const replacedValue = onClick?.(event);\n\n        const actualValue = replacedValue ?? value;\n\n        if (!actualValue && !copyEmpty) {\n            return;\n        }\n\n        if (copiedTimeoutRef.current) {\n            clearTimeout(copiedTimeoutRef.current);\n        }\n\n        if (isNil(actualValue) || isString(actualValue)) {\n            await copyText(actualValue ?? '');\n        }\n        if (actualValue instanceof Blob) {\n            await copyBlob(actualValue);\n        }\n\n        setIsCopied(true);\n        copiedTimeoutRef.current = setTimeout(() => {\n            setIsCopied(false);\n        }, 1000);\n    };\n\n    return (\n        <Button onClick={handleClick} icon={icon ?? (isCopied ? <CheckOutlined /> : <CopyOutlined />)} {...props}>\n            {children ?? 'Copy'}\n        </Button>\n    );\n}\n\nexport default CopyButton;\n","import React, { Dispatch, SetStateAction, useCallback, useState } from 'react';\n\nconst handleEventTargetValueChange =\n    <S>(callback: (value: S) => void) =>\n    (event: React.ChangeEvent<{ value: S }>) => {\n        callback(event.target.value);\n    };\n\ntype PossiblyUndefined<S, V> = V extends undefined ? S | undefined : S;\nexport type SetStateByEventAction<S> = (event: React.ChangeEvent<{ value: S }>) => void;\n\nfunction useInputState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>, SetStateByEventAction<S>];\nfunction useInputState<S = undefined>(): [\n    S | undefined,\n    Dispatch<SetStateAction<S | undefined>>,\n    SetStateByEventAction<S | undefined>\n];\nfunction useInputState<S>(initialState?: S | (() => S)) {\n    const [value, setValue] = useState<PossiblyUndefined<S, typeof initialState>>(initialState);\n    const setValueByEvent = useCallback(handleEventTargetValueChange(setValue), [setValue]);\n\n    return [value, setValue, setValueByEvent];\n}\n\nexport default useInputState;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)}>{children}</div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","enum OutputMode {\n    VIEW = 'VIEW',\n    TEXT = 'TEXT',\n    HTML = 'HTML',\n    TABLE = 'TABLE',\n    CONSOLE = 'CONSOLE'\n}\n\nexport default OutputMode;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"JsEvaluatorPage_antd-text-primary__Sv4cd\",\"container\":\"JsEvaluatorPage_container__uj24J\",\"outputModeComboBox\":\"JsEvaluatorPage_outputModeComboBox__YHsN+\",\"textarea\":\"JsEvaluatorPage_textarea__YDFfH\",\"valueContainer\":\"JsEvaluatorPage_valueContainer__ND2pL\",\"codeContainer\":\"JsEvaluatorPage_codeContainer__bHlmZ\",\"codeEditorContainer\":\"JsEvaluatorPage_codeEditorContainer__IxTia\",\"codeEditor\":\"JsEvaluatorPage_codeEditor__i7eEW\",\"resultContainerWrapper\":\"JsEvaluatorPage_resultContainerWrapper__sphP8\",\"resultContainer\":\"JsEvaluatorPage_resultContainer__-1ajm\"};","import { Monaco } from '@monaco-editor/react';\n\ntype AddLibrary = (monaco: Monaco) => Promise<void>;\n\nconst createAddTypes = (monaco: Monaco) => {\n    const add = (contents: string, typesLocation?: string): void => {\n        monaco.languages.typescript.javascriptDefaults.addExtraLib(contents, typesLocation);\n    };\n\n    const addLibrary = async (importedTypes: Promise<RawLoaded>, typesLocation: string): Promise<void> => {\n        add((await importedTypes).default, typesLocation);\n    };\n\n    addLibrary.custom = add;\n\n    return addLibrary;\n};\n\nclass MonacoExtraLibs {\n    lodash: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        await addTypes(import('!raw-loader!@types/lodash/index.d.ts'), '@types/lodash/index.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/common.d.ts'), '@types/lodash/common/common.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/array.d.ts'), '@types/lodash/common/array.d.ts');\n        await addTypes(\n            import('!raw-loader!@types/lodash/common/collection.d.ts'),\n            '@types/lodash/common/collection.d.ts'\n        );\n        await addTypes(import('!raw-loader!@types/lodash/common/date.d.ts'), '@types/lodash/common/date.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/function.d.ts'), '@types/lodash/common/function.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/lang.d.ts'), '@types/lodash/common/lang.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/math.d.ts'), '@types/lodash/common/math.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/number.d.ts'), '@types/lodash/common/number.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/object.d.ts'), '@types/lodash/common/object.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/seq.d.ts'), '@types/lodash/common/seq.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/string.d.ts'), '@types/lodash/common/string.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/util.d.ts'), '@types/lodash/common/util.d.ts');\n    };\n    axios: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        // await addTypes(import('!raw-loader!axios/index.d.ts'), 'axios/index.d.ts');\n        // TODO\n        addTypes.custom(`\n        declare const axios: any;\n        `);\n    };\n    pluralize: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        await addTypes(import('!raw-loader!@types/pluralize/index.d.ts'), '@types/pluralize/index.d.ts');\n    };\n\n    moment: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        // await addTypes(import('!raw-loader!moment/moment.d.ts'), 'moment/moment.d.ts');\n        addTypes.custom(`\n        declare const moment: any;\n        `);\n    };\n}\n\nconst monacoExtraLibs = new MonacoExtraLibs();\n\nexport default monacoExtraLibs;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabeledSwitch_label__MlNG1\"};","import React, { CSSProperties, FunctionComponent, HTMLProps, ReactChild, ReactNode, useMemo } from 'react';\nimport { Switch, SwitchProps } from 'antd';\nimport { omit, pick } from 'lodash';\nimport styles from './LabeledSwitch.module.scss';\nimport classNames from 'classnames';\n\ninterface Props\n    extends Omit<HTMLProps<HTMLLabelElement>, 'onChange' | 'onClick' | 'size' | 'label'>,\n        Omit<SwitchProps, 'className' | 'style'> {\n    switchClassName?: string;\n    switchStyle?: CSSProperties;\n}\n\nconst realSwitchPropsNames = [\n    'prefixCls',\n    'size',\n    'checked',\n    'defaultChecked',\n    'onChange',\n    'onClick',\n    'checkedChildren',\n    'unCheckedChildren',\n    'disabled',\n    'loading',\n    'autoFocus',\n    'title',\n    'tabIndex',\n    'id'\n] as const;\n\nconst switchPropNames = [...realSwitchPropsNames, 'switchClassName', 'switchStyle'] as const;\n\nconst LabeledSwitch: FunctionComponent<Props> = ({ children, ...props }) => {\n    const { switchProps, labelProps } = useMemo(() => {\n        return {\n            switchProps: {\n                ...pick(props, realSwitchPropsNames),\n                className: classNames(styles.switch, props.switchClassName),\n                style: props.switchStyle\n            },\n            labelProps: {\n                ...omit(props, switchPropNames),\n                className: classNames(styles.label, props.className)\n            }\n        };\n    }, [props]);\n\n    return (\n        <label {...labelProps}>\n            <Switch {...switchProps} />\n            {children}\n        </label>\n    );\n};\n\nexport default LabeledSwitch;\n","import React, { HTMLProps, ReactElement, useEffect, useRef } from 'react';\nimport { useDidMount } from 'rooks';\nimport LunaObjectViewer from 'luna-object-viewer';\nimport useAppTheme from '../../hooks/useAppTheme';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'value' | 'children'> {\n    value: unknown;\n}\n\nconst JsObjectViewer = ({ value, ...props }: Props): ReactElement => {\n    const { isDarkMode } = useAppTheme();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const objectViewerRef = useRef<LunaObjectViewer>();\n\n    useDidMount(() => {\n        const container = containerRef.current;\n        if (!container) {\n            throw new Error('Cannot initialize JsObjectViewer: No container');\n        }\n\n        objectViewerRef.current = new LunaObjectViewer(container, {\n            theme: isDarkMode ? 'dark' : 'light',\n            accessGetter: true,\n            unenumerable: true\n        });\n    });\n\n    useEffect(() => {\n        const objectViewer = objectViewerRef.current;\n        if (!objectViewer) {\n            return;\n        }\n\n        objectViewer.set(value);\n        console.log({ objectViewer });\n    }, [value]);\n\n    useEffect(() => {\n        const objectViewer = objectViewerRef.current;\n        if (!objectViewer) {\n            return;\n        }\n\n        objectViewer.setOption('theme', isDarkMode ? 'dark' : 'light');\n    }, [isDarkMode]);\n\n    return <div ref={containerRef} {...props} />;\n};\n\nexport default JsObjectViewer;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, notification, Row, Select, Spin, Tooltip } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport useInputState from '../../hooks/useInputState';\nimport pluralize from 'pluralize';\nimport scopedEval from '../../utils/scopedEval';\nimport getErrorMessage from '../../utils/getErrorMessage';\nimport _, { isObjectLike } from 'lodash';\nimport axios from 'axios';\nimport Text from 'antd/lib/typography/Text';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport styles from './JsEvaluatorPage.module.scss';\nimport OutputMode from './types/OutputMode';\nimport CopyButton from '../../components/copyButton/CopyButton';\nimport { BeforeMount } from '@monaco-editor/react';\nimport { editor } from 'monaco-editor';\nimport classNames from 'classnames';\nimport AppEditor from '../../components/appEditor/AppEditor';\nimport monacoExtraLibs from '../../utils/monaco/monacoExtraLibs';\nimport moment from 'moment';\nimport NpmLink from '../../components/NpmLink';\nimport Flex from '../../components/flex/Flex';\nimport LabeledSwitch from '../../components/labeledSwitch/LabeledSwitch';\nimport { useDebounce, useLocalstorageState } from 'rooks';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport JsObjectViewer from '../../components/jsObjectViewer/JsObjectViewer';\n\ninterface ShowCountProps {\n    formatter: (args: { count: number; maxLength?: number }) => string;\n}\n\nconst textAreaShowCount: ShowCountProps = {\n    formatter: ({ count }) => pluralize('character', count, true)\n};\n\nconst codeEditorOptions: editor.IStandaloneEditorConstructionOptions = {\n    fontFamily: 'JetBrains Mono',\n    minimap: { enabled: false }\n};\n\nconst handleCodeEditorBeforeMount: BeforeMount = (monaco) => {\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(`\ndeclare const $value: string;`);\n    monacoExtraLibs.lodash(monaco);\n    monacoExtraLibs.axios(monaco);\n    monacoExtraLibs.pluralize(monaco);\n    monacoExtraLibs.moment(monaco);\n};\n\nconst JsEvaluatorPage = () => {\n    const [$value, , set$ValueByEvent] = useInputState<string>('');\n    const [evalValue, setEvalValue] = useState<string>('');\n    const [evaluatedJs, setEvaluatedJs] = useState<unknown>(undefined);\n    const [evaluatedJsString, setEvaluatedJsString] = useState<string>('');\n    const [isAutoEval, setIsAutoEval] = useLocalstorageState<boolean>(\n        getLocalStorageKey('javascript-eval', 'isAutoEval'),\n        true\n    );\n\n    const [outputMode, setOutputMode] = useLocalstorageState<OutputMode>(\n        getLocalStorageKey('javascript-eval', 'outputMode'),\n        OutputMode.TEXT\n    );\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const evaluateJsDangerous = useCallback(async (evalValue: string, $value: string) => {\n        if (!evalValue) {\n            setEvaluatedJs(undefined);\n            setEvaluatedJsString('');\n            return;\n        }\n\n        setIsLoading(true);\n\n        const evalResult = await scopedEval(evalValue, {\n            $value,\n            _,\n            axios,\n            pluralize,\n            moment,\n            $easterEgg: '🥚'\n        });\n\n        if (outputMode === OutputMode.CONSOLE) {\n            console.log(evalResult);\n        }\n\n        setEvaluatedJs(evalResult);\n\n        const evalResultString = isObjectLike(evalResult)\n            ? JSON.stringify(evalResult, undefined, 2)\n            : String(evalResult);\n\n        setEvaluatedJsString(evalResultString);\n    }, []);\n\n    const handleJsError = useCallback((error) => {\n        notification.error({\n            message: error?.constructor.name ?? 'Error',\n            description: getErrorMessage(error)\n        });\n\n        if (outputMode === OutputMode.CONSOLE) {\n            console.error(error);\n        }\n    }, []);\n\n    const evaluateJs = useCallback(async () => {\n        try {\n            await evaluateJsDangerous(evalValue, $value);\n        } catch (error) {\n            handleJsError(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [evaluateJsDangerous, handleJsError, evalValue, $value]);\n\n    const handleEveryEvalValueChange = useCallback(async (evalValue: string, $value: string) => {\n        try {\n            await evaluateJsDangerous(evalValue, $value);\n        } catch (error) {\n            if (!(error instanceof ReferenceError || error instanceof SyntaxError || error instanceof TypeError)) {\n                handleJsError(error);\n            }\n\n            // ignored\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    const handleEvalValueChange = useDebounce(handleEveryEvalValueChange, 300);\n\n    useEffect(() => {\n        if (!isAutoEval) {\n            return;\n        }\n\n        handleEvalValueChange(evalValue, $value);\n    }, [isAutoEval, evalValue, $value]);\n\n    return (\n        <PageContainer title=\"JavaScript Evaluator\" className={styles.container}>\n            <Flex column gap={8} minHeight=\"100%\" maxHeight=\"100%\">\n                <Col className={styles.valueContainer}>\n                    <TextArea\n                        rows={6}\n                        allowClear\n                        showCount={textAreaShowCount}\n                        value={$value}\n                        onChange={set$ValueByEvent}\n                        className={classNames('mb-3', styles.textarea)}\n                        placeholder=\"$value\"\n                        id=\"$value-textarea\"\n                    />\n                </Col>\n                <Flex column className={styles.codeContainer}>\n                    <Flex column flex={1} className={styles.codeEditorContainer}>\n                        <Text>\n                            <Paragraph className=\"mb-1\">Evaluate JavaScript</Paragraph>\n                            <Paragraph className=\"mb-2\">\n                                Available variables:{' '}\n                                <Tooltip title=\"The string above\">\n                                    <label htmlFor=\"$value-textarea\">\n                                        <code>$value</code>\n                                    </label>\n                                </Tooltip>\n                                {', '}\n                                <NpmLink packageName=\"lodash\">_</NpmLink>\n                                {', '}\n                                <NpmLink packageName=\"axios\" />\n                                {', '}\n                                <NpmLink packageName=\"pluralize\" />\n                                {', '}\n                                <NpmLink packageName=\"moment\" />\n                            </Paragraph>\n                        </Text>\n\n                        {/*<TextArea className=\"font-monospace mt-1\" $value={evalValue} onChange={setEvalValueByEvent} />*/}\n                        <AppEditor\n                            defaultLanguage=\"javascript\"\n                            className={classNames('mt-1', styles.codeEditor)}\n                            value={evalValue}\n                            onChange={setEvalValue}\n                            options={codeEditorOptions}\n                            beforeMount={handleCodeEditorBeforeMount}\n                        />\n                    </Flex>\n                    <Row className=\"mt-1 mb-2 d-flex justify-content-between\">\n                        <Flex row gap={10} align=\"center\">\n                            <Button type=\"primary\" onClick={evaluateJs}>\n                                Evaluate\n                            </Button>\n                            <LabeledSwitch checked={isAutoEval} onChange={setIsAutoEval}>\n                                Auto\n                            </LabeledSwitch>\n                        </Flex>\n                        <Select className={styles.outputModeComboBox} value={outputMode} onChange={setOutputMode}>\n                            <Select.Option key={OutputMode.VIEW}>View</Select.Option>\n                            <Select.Option key={OutputMode.TEXT}>Text</Select.Option>\n                            <Select.Option key={OutputMode.HTML}>HTML</Select.Option>\n                            <Select.Option key={OutputMode.TABLE}>Table</Select.Option>\n                            <Select.Option key={OutputMode.CONSOLE}>Console</Select.Option>\n                        </Select>\n                    </Row>\n                </Flex>\n                <Flex column className={styles.resultContainerWrapper}>\n                    <Spin spinning={isLoading} delay={10} className={styles.resultContainer}>\n                        {outputMode === OutputMode.VIEW && <JsObjectViewer value={evaluatedJs} />}\n                        {outputMode === OutputMode.TEXT && (\n                            <Col>\n                                <TextArea\n                                    className={classNames('font-monospace mb-2', styles.textarea)}\n                                    readOnly\n                                    value={evaluatedJsString}\n                                    rows={6}\n                                />\n                                <CopyButton value={evaluatedJsString} />\n                            </Col>\n                        )}\n                        {outputMode === OutputMode.HTML && (\n                            <div dangerouslySetInnerHTML={{ __html: evaluatedJsString }} />\n                        )}\n                        {outputMode === OutputMode.TABLE && <Text type=\"secondary\">Coming Soon</Text>}\n                        {outputMode === OutputMode.CONSOLE && <div>The output is in your browser console</div>}\n                    </Spin>\n                </Flex>\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default JsEvaluatorPage;\n","const getErrorMessage = (error: any) => {\n    return error instanceof Error ? error.message : String(error);\n};\n\nexport default getErrorMessage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport default getLocalStorageKey;\n","const getNpmPackageLink = (packageName: string): string => `https://www.npmjs.com/package/${packageName}`;\n\nexport default getNpmPackageLink;\n","const scopedEval = (expression: string, context: object = {}) => {\n    const evaluator = Function.apply(null, [\n        ...Object.keys(context),\n        'expression',\n        'return eval(\"expression = undefined;\" + expression)'\n    ]);\n    return evaluator.apply(null, [...Object.values(context), expression]);\n};\n\nexport default scopedEval;\n"],"names":["NpmLink","packageName","plain","children","link","getNpmPackageLink","text","href","React","loadingNode","size","className","loading","theme","onChange","props","isDarkMode","useAppTheme","handleChange","useCallback","value","ev","classNames","navigator","clipboard","writeText","blob","write","ClipboardItem","type","copyEmpty","onClick","icon","useState","isCopied","setIsCopied","copiedTimeoutRef","useRef","handleClick","event","replacedValue","actualValue","current","clearTimeout","isNil","isString","copyText","Blob","copyBlob","setTimeout","CheckOutlined","CopyOutlined","initialState","callback","setValue","target","PageTag","getTagNodes","key","WIP","color","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","ref","title","description","titleExtra","tags","noPadding","noContentPadding","contentClassName","restProps","renderedTags","useMemo","map","styles","length","direction","Paragraph","OutputMode","createAddTypes","monaco","add","contents","typesLocation","languages","typescript","javascriptDefaults","addExtraLib","addLibrary","importedTypes","default","custom","MonacoExtraLibs","lodash","addTypes","axios","pluralize","moment","realSwitchPropsNames","switchPropNames","switchProps","pick","switchClassName","style","switchStyle","labelProps","omit","containerRef","objectViewerRef","useDidMount","container","Error","LunaObjectViewer","accessGetter","unenumerable","useEffect","objectViewer","set","console","log","setOption","textAreaShowCount","formatter","count","codeEditorOptions","fontFamily","minimap","enabled","handleCodeEditorBeforeMount","monacoExtraLibs","useInputState","$value","set$ValueByEvent","evalValue","setEvalValue","undefined","evaluatedJs","setEvaluatedJs","evaluatedJsString","setEvaluatedJsString","useLocalstorageState","getLocalStorageKey","isAutoEval","setIsAutoEval","outputMode","setOutputMode","isLoading","setIsLoading","evaluateJsDangerous","scopedEval","_","$easterEgg","evalResult","evalResultString","isObjectLike","JSON","stringify","String","handleJsError","error","notification","message","constructor","name","getErrorMessage","evaluateJs","handleEveryEvalValueChange","ReferenceError","SyntaxError","TypeError","handleEvalValueChange","useDebounce","PageContainer","Flex","column","gap","minHeight","maxHeight","TextArea","rows","allowClear","showCount","placeholder","id","flex","Text","htmlFor","AppEditor","defaultLanguage","options","beforeMount","row","align","checked","spinning","delay","readOnly","CopyButton","dangerouslySetInnerHTML","__html","scope","expression","context","evaluator","Function","apply","Object","keys","values"],"sourceRoot":""}