{"version":3,"file":"static/js/4631.e04c3fe2.chunk.js","mappings":"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","sources":["webpack://mrgrd56.github.io/./src/components/pageCol/PageCol.module.scss?75ed","components/pageCol/PageCol.tsx","hooks/useChangeState.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeStateHandler.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","webpack://mrgrd56.github.io/./src/pages/settingsPage/SettingsPage.module.scss?c28e","pages/settingsPage/SettingsPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageCol_container__kQfmh\"};","import React, { FunctionComponent, useMemo } from 'react';\nimport { Col, ColProps } from 'antd';\nimport styles from './PageCol.module.scss';\nimport classNames from 'classnames';\nimport TupleToUnion from '../../types/common/TupleToUnion';\nimport { defaults, pick } from 'lodash';\n\ntype Props = ColProps;\n\nconst sizePropNames = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'] as const;\n\ntype SizeProps = Pick<ColProps, TupleToUnion<typeof sizePropNames>>;\n\nconst sizePropsDefaults: Record<'default', SizeProps> = {\n    default: {\n        xs: 24,\n        md: 18,\n        lg: 14,\n        xl: 10,\n        xxl: 8\n    }\n};\n\nconst PageCol: FunctionComponent<Props> = ({ className, children, ...props }) => {\n    const restProps = useMemo(() => {\n        const overriddenSizeProps = pick(props, sizePropNames);\n\n        return {\n            ...props,\n            ...defaults(overriddenSizeProps, sizePropsDefaults.default)\n        };\n    }, [props]);\n\n    return (\n        <Col className={classNames(styles.container)} {...restProps}>\n            {children}\n        </Col>\n    );\n};\n\nexport default PageCol;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)}>{children}</div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","// extracted by mini-css-extract-plugin\nexport default {\"formItem\":\"SettingsPage_formItem__zcES0\",\"label\":\"SettingsPage_label__2afMZ\",\"input\":\"SettingsPage_input__TfsRh\"};","import React, { FunctionComponent, useCallback, useMemo } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Modal, Select, Switch } from 'antd';\nimport { useAppSettingsState } from '../../hooks/useAppSettings';\nimport ExternalLink from '../../components/ExternalLink';\nimport AppTheme, { SpecialAppTheme } from '../../types/AppTheme';\nimport styles from './SettingsPage.module.scss';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport PageCol from '../../components/pageCol/PageCol';\n\nconst SettingsPage: FunctionComponent = () => {\n    const { appSettings, setAppSettings, resetAppSettings } = useAppSettingsState();\n\n    const handleAppSettingChange = useChangeStateHandler(setAppSettings);\n\n    const handleResetClick = useCallback(() => {\n        Modal.confirm({\n            title: 'Are you sure you want to reset the settings?',\n            icon: <ExclamationCircleOutlined />,\n            onOk() {\n                resetAppSettings();\n            }\n        });\n    }, [resetAppSettings]);\n\n    const titleExtra = useMemo(() => <Button onClick={handleResetClick}>Reset</Button>, [handleResetClick]);\n\n    return (\n        <PageContainer title=\"Settings\" titleExtra={titleExtra}>\n            <PageCol className={styles.formContainer}>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>App theme</span>\n                    <Select\n                        className={styles.input}\n                        value={appSettings.theme}\n                        onChange={handleAppSettingChange('theme')}\n                    >\n                        <Select.Option key={SpecialAppTheme.AUTO}>Auto</Select.Option>\n                        <Select.Option key={AppTheme.LIGHT}>Light</Select.Option>\n                        <Select.Option key={AppTheme.DARK}>Dark</Select.Option>\n                    </Select>\n                </label>\n                <label>\n                    <Switch checked={appSettings.isErudaEnabled} onChange={handleAppSettingChange('isErudaEnabled')} />\n                    <span className=\"ms-3\">\n                        Enable <ExternalLink href=\"https://github.com/liriliri/eruda\">Eruda</ExternalLink>\n                    </span>\n                </label>\n                <label>\n                    <Switch\n                        checked={appSettings.doShowHiddenMenuItems}\n                        onChange={handleAppSettingChange('doShowHiddenMenuItems')}\n                    />\n                    <span className=\"ms-3\">Show hidden menu items</span>\n                </label>\n                <label>\n                    <Switch checked={appSettings.isFooterHidden} onChange={handleAppSettingChange('isFooterHidden')} />\n                    <span className=\"ms-3\">Hide the footer</span>\n                </label>\n            </PageCol>\n        </PageContainer>\n    );\n};\n\nexport default SettingsPage;\n"],"names":["sizePropNames","sizePropsDefaults","xs","md","lg","xl","xxl","className","children","props","restProps","useMemo","overriddenSizeProps","pick","defaults","classNames","styles","setState","useCallback","key","value","state","isChangeEvent","isObject","property","changeState","useChangeState","actualValue","call","target","PageTag","getTagNodes","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","ref","title","description","titleExtra","tags","noPadding","noContentPadding","contentClassName","renderedTags","map","length","direction","size","Paragraph","useAppSettingsState","appSettings","setAppSettings","resetAppSettings","handleAppSettingChange","useChangeStateHandler","handleResetClick","Modal","ExclamationCircleOutlined","onOk","onClick","PageContainer","PageCol","theme","onChange","SpecialAppTheme","AppTheme","checked","isErudaEnabled","ExternalLink","href","doShowHiddenMenuItems","isFooterHidden"],"sourceRoot":""}