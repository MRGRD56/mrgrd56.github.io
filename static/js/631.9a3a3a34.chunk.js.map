{"version":3,"file":"static/js/631.9a3a3a34.chunk.js","mappings":"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","sources":["components/appEditor/AppEditor.tsx","hooks/debouncedMemo.ts","pages/htmlEditorPage/HtmlEditorPage.tsx","webpack://mrgrd56.github.io/./src/pages/htmlEditorPage/HtmlEditorPage.module.scss?0b88","hooks/useChangeValueStateHandler.ts","utils/mergeEnums.ts"],"sourcesContent":["import React, { FunctionComponent, useCallback } from 'react';\r\nimport Editor, { EditorProps, OnChange } from '@monaco-editor/react';\r\nimport useAppTheme from '../../hooks/useAppTheme';\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames';\r\nimport * as monaco from 'monaco-editor';\r\nimport MonacoLanguage from '../../types/MonacoLanguage';\r\n\r\nconst loadingNode = <Spin size=\"large\" />;\r\n\r\nexport type AppOnChange = (value: string, ev: monaco.editor.IModelContentChangedEvent) => void;\r\n\r\ninterface Props extends Omit<EditorProps, 'onChange'> {\r\n    onChange?: AppOnChange;\r\n    language?: MonacoLanguage;\r\n}\r\n\r\nconst AppEditor: FunctionComponent<Props> = ({ className, loading, theme, onChange, ...props }) => {\r\n    const { isDarkMode } = useAppTheme();\r\n\r\n    const handleChange = useCallback<OnChange>(\r\n        (value, ev) => {\r\n            onChange?.(value ?? '', ev);\r\n        },\r\n        [onChange]\r\n    );\r\n\r\n    return (\r\n        <Editor\r\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\r\n            className={classNames('app-monaco-editor', className)}\r\n            loading={loading ?? loadingNode}\r\n            onChange={handleChange}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AppEditor;\r\n","import { DependencyList, useEffect, useRef, useState } from 'react';\nimport { debounce, isObject, throttle } from 'lodash';\nimport { v4 } from 'uuid';\nimport call from '../utils/call';\nimport useAutoRef from './useAutoRef';\n\ninterface NoResult {\n    readonly _noResult: string;\n}\n\nconst isNoResult = <T>(value: T | NoResult, noResult: NoResult): value is NoResult => {\n    return isObject(value) && '_noResult' in value && value === noResult; //TODO just value === noResult ?\n};\n\ntype MemoFactory<R> = (noResult: NoResult) => R | NoResult;\n\nconst createDebouncedMemoHook =\n    (debounceFn: typeof debounce) =>\n    <R>(factory: MemoFactory<R>, deps: DependencyList | undefined, wait?: number) => {\n        const [value, setValue] = useState<R>();\n        const factoryRef = useAutoRef(factory);\n\n        const debounceFunction = useRef(\n            call(() => {\n                const actualNoResult: NoResult = Object.freeze({\n                    _noResult: v4()\n                });\n\n                return debounceFn(() => {\n                    const value = factoryRef.current(actualNoResult);\n\n                    if (!isNoResult(value, actualNoResult)) {\n                        setValue(value);\n                    }\n                }, wait);\n            })\n        ).current;\n\n        useEffect(() => {\n            debounceFunction();\n        }, deps);\n\n        return value;\n    };\n\nexport const useDebouncedMemo = createDebouncedMemoHook(debounce);\nexport const useThrottledMemo = createDebouncedMemoHook(throttle);\n\n// const useDebouncedMemo = <T>(factory: () => T, deps: DependencyList | undefined, wait?: number) => {\n//     const [value, setValue] = useState<T>();\n//\n//     const timeoutRef = useRef<NodeJS.Timeout>();\n//\n//\n// };\n","import React, { CSSProperties, FunctionComponent, useCallback } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './HtmlEditorPage.module.scss';\nimport { Button, Col, Row, Tabs } from 'antd';\nimport { useLocalstorageState } from 'rooks';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport AppEditor from '../../components/appEditor/AppEditor';\nimport classNames from 'classnames';\nimport { useDebouncedMemo } from '../../hooks/debouncedMemo';\nimport Html from '@mui/icons-material/Html';\nimport Css from '@mui/icons-material/Css';\nimport Javascript from '@mui/icons-material/Javascript';\nimport { OnMount } from '@monaco-editor/react';\nimport { emmetCSS, emmetHTML, emmetJSX } from 'emmet-monaco-es';\nimport { editor } from 'monaco-editor';\nimport ButtonGroup from 'antd/lib/button/button-group';\nimport { Code, VerticalSplit, ViewHeadline } from '@mui/icons-material';\nimport useChangeValueStateHandler from '../../hooks/useChangeValueStateHandler';\nimport Split from 'react-split';\nimport './HtmlEditorPage.scss';\nimport mergeEnums, { MergeEnums } from '../../utils/mergeEnums';\n\nenum EditorInTab {\n    HTML = 'html',\n    CSS = 'css',\n    JS = 'js'\n}\n\nenum EditorOutTab {\n    VIEW = 'VIEW'\n}\n\nconst EditorTab = mergeEnums(EditorInTab, EditorOutTab);\ntype EditorTab = MergeEnums<EditorInTab, EditorOutTab>;\n\ntype EditorSources = Record<EditorInTab, string>;\n\nconst sourcesInitial: EditorSources = {\n    html: `\n<div class=\"example\">\n    <p>\n        Follow me on GitHub\n        <a href=\"https://github.com/MRGRD56\" target=\"_blank\" rel=\"noopener noreferrer\">\n            https://github.com/MRGRD56</a> ;)\n    </p>\n    <button class=\"button1\">Click me</button>\n</div>`.trimStart(),\n    css: `\nhtml {\n    font-family: Arial, sans-serif;\n}\n\n.example, .example a {\n    color: #039be5;\n}`.trimStart(),\n    js: `\ndocument.querySelector('button.button1')\n    .addEventListener('click', () => {\n        alert('Hello world!')\n    });`.trimStart()\n};\n\nconst tabBarStyle: CSSProperties = {\n    margin: 0,\n    paddingLeft: 15,\n    paddingRight: 15\n};\n\nconst editorOptions: editor.IStandaloneEditorConstructionOptions = {\n    minimap: { enabled: false }\n};\n\nconst resultEditorOptions: editor.IStandaloneEditorConstructionOptions = {\n    ...editorOptions,\n    readOnly: true\n};\n\nenum ViewMode {\n    EDITOR = 'EDITOR',\n    SPLIT = 'SPLIT',\n    VIEW = 'VIEW'\n}\n\n// const viewModes: CheckboxOptionType[] = [\n//     {\n//         value: ViewMode.EDITOR,\n//         label: <ViewHeadline/>\n//     },\n//     {\n//         value: ViewMode.SPLIT,\n//         label: <VerticalSplit/>\n//     }\n// ];\n\nconst HtmlEditorPage: FunctionComponent = () => {\n    const [sources, setSources] = useLocalstorageState<EditorSources>(\n        getLocalStorageKey('html-editor', 'sources'),\n        sourcesInitial\n    );\n\n    const [editorTab, setEditorTab] = useLocalstorageState<EditorTab>(\n        getLocalStorageKey('html-editor', 'editorTab'),\n        EditorTab.HTML\n    );\n\n    const [viewMode, setViewMode] = useLocalstorageState<ViewMode>(\n        getLocalStorageKey('html-editor', 'viewMode'),\n        ViewMode.SPLIT\n    );\n\n    const handleSourceChange = useChangeStateHandler(setSources);\n\n    const handleEditorTabChange = useCallback((tab: string) => {\n        setEditorTab(tab as EditorTab);\n    }, []);\n\n    const handleViewModeChange = useChangeValueStateHandler(setViewMode);\n\n    const resultSource = useDebouncedMemo(\n        () => {\n            return `\n<style>\n${sources.css}\n</style>\n\n${sources.html}\n\n<script>\n${sources.js}\n</script>`.trim();\n        },\n        [sources],\n        50\n    ) as string;\n\n    const handleEditorMount = useCallback<OnMount>((editor, monaco) => {\n        emmetHTML(monaco);\n        emmetCSS(monaco);\n        emmetJSX(monaco);\n    }, []);\n\n    // const leftColSpan = {\n    //     [ViewMode.EDITOR]: 24,\n    //     [ViewMode.SPLIT]: 12,\n    //     [ViewMode.VIEW]: 0\n    // }[viewMode];\n    //\n    // const rightColSpan = {\n    //     [ViewMode.EDITOR]: 0,\n    //     [ViewMode.SPLIT]: 12,\n    //     [ViewMode.VIEW]: 24\n    // }[viewMode];\n\n    const leftCol = (\n        <Col className={classNames(styles.col, styles.leftCol, { 'd-none': viewMode === ViewMode.VIEW })}>\n            <Tabs\n                activeKey={editorTab}\n                onChange={handleEditorTabChange}\n                tabBarStyle={tabBarStyle}\n                className={styles.editorTabs}\n                tabBarGutter={10}\n                tabBarExtraContent={\n                    <ButtonGroup>\n                        <Button\n                            type=\"text\"\n                            icon={<ViewHeadline />}\n                            className={classNames({ 'antd-text-primary': viewMode === ViewMode.EDITOR })}\n                            onClick={handleViewModeChange(ViewMode.EDITOR)}\n                        />\n                        <Button\n                            type=\"text\"\n                            icon={<VerticalSplit />}\n                            className={classNames({ 'antd-text-primary': viewMode === ViewMode.SPLIT })}\n                            onClick={handleViewModeChange(ViewMode.SPLIT)}\n                        />\n                    </ButtonGroup>\n                }\n            >\n                <Tabs.TabPane\n                    tab={\n                        <div className={styles.tabTitleWrapper}>\n                            <Html className={styles.tabTitle} />\n                        </div>\n                    }\n                    key={EditorTab.HTML}\n                    className={styles.editorTab}\n                >\n                    <AppEditor\n                        value={sources.html}\n                        onChange={handleSourceChange(EditorTab.HTML)}\n                        className={styles.editor}\n                        language=\"html\"\n                        onMount={handleEditorMount}\n                        options={editorOptions}\n                    />\n                </Tabs.TabPane>\n                <Tabs.TabPane\n                    tab={\n                        <div className={styles.tabTitleWrapper}>\n                            <Css className={styles.tabTitle} />\n                        </div>\n                    }\n                    key={EditorTab.CSS}\n                    className={styles.editorTab}\n                >\n                    <AppEditor\n                        value={sources.css}\n                        onChange={handleSourceChange(EditorTab.CSS)}\n                        className={styles.editor}\n                        language=\"css\"\n                        onMount={handleEditorMount}\n                        options={editorOptions}\n                    />\n                </Tabs.TabPane>\n                <Tabs.TabPane\n                    tab={\n                        <div className={styles.tabTitleWrapper}>\n                            <Javascript className={styles.tabTitle} />\n                        </div>\n                    }\n                    key={EditorTab.JS}\n                    className={styles.editorTab}\n                >\n                    <AppEditor\n                        value={sources.js}\n                        onChange={handleSourceChange(EditorTab.JS)}\n                        className={styles.editor}\n                        language=\"javascript\"\n                        onMount={handleEditorMount}\n                        options={editorOptions}\n                    />\n                </Tabs.TabPane>\n                <Tabs.TabPane\n                    tab={\n                        <div className={styles.tabTitleWrapper}>\n                            <Code className={styles.resultTabTitle} />\n                        </div>\n                    }\n                    key={EditorTab.VIEW}\n                    className={styles.editorTab}\n                >\n                    <AppEditor\n                        value={resultSource}\n                        className={styles.editor}\n                        language=\"html\"\n                        options={resultEditorOptions}\n                    />\n                </Tabs.TabPane>\n            </Tabs>\n        </Col>\n    );\n\n    const rightCol = (\n        <Col\n            className={classNames('yui3-cssreset', styles.col, styles.rightCol, {\n                'd-none': viewMode === ViewMode.EDITOR\n            })}\n        >\n            <iframe srcDoc={resultSource} className={classNames(styles.resultFrame, 'view-iframe')} />\n        </Col>\n    );\n\n    return (\n        <PageContainer noPadding className={styles.container}>\n            {viewMode === ViewMode.SPLIT ? (\n                <Split className={styles.containerRow} direction=\"horizontal\" minSize={0} snapOffset={25}>\n                    {leftCol}\n                    {rightCol}\n                </Split>\n            ) : (\n                <Row className={styles.containerRow}>\n                    {viewMode === ViewMode.EDITOR && leftCol}\n                    {viewMode === ViewMode.VIEW && rightCol}\n                </Row>\n            )}\n        </PageContainer>\n    );\n};\n\nexport default HtmlEditorPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"HtmlEditorPage_antd-text-primary__pGYfB\",\"container\":\"HtmlEditorPage_container__CtG1f\",\"containerRow\":\"HtmlEditorPage_containerRow__ld+VV\",\"col\":\"HtmlEditorPage_col__Q9-il\",\"leftCol\":\"HtmlEditorPage_leftCol__DYqVq\",\"editorTabs\":\"HtmlEditorPage_editorTabs__XwzW+\",\"editorTab\":\"HtmlEditorPage_editorTab__ktwZt\",\"editor\":\"HtmlEditorPage_editor__NVelS\",\"tabTitleWrapper\":\"HtmlEditorPage_tabTitleWrapper__Rky1D\",\"tabTitle\":\"HtmlEditorPage_tabTitle__ppoas\",\"resultTabTitle\":\"HtmlEditorPage_resultTabTitle__2Se-j\",\"rightCol\":\"HtmlEditorPage_rightCol__vaQTF\"};","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeValueStateHandler = <S>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(\n        (value: S) => {\n            return () => {\n                setState(value);\n            };\n        },\n        [setState]\n    );\n};\n\nexport default useChangeValueStateHandler;\n","const mergeEnums = <T1, T2>(e1: T1, e2: T2) => {\n    return { ...e1, ...e2 };\n};\n\nexport type MergeEnums<T1, T2> = T1 | T2;\n\nexport default mergeEnums;\n"],"names":["loadingNode","size","className","loading","theme","onChange","props","isDarkMode","useAppTheme","handleChange","useCallback","value","ev","classNames","createDebouncedMemoHook","debounceFn","factory","deps","wait","useState","setValue","factoryRef","useAutoRef","debounceFunction","useRef","call","actualNoResult","Object","freeze","_noResult","v4","current","noResult","isObject","isNoResult","useEffect","useDebouncedMemo","debounce","throttle","EditorInTab","EditorOutTab","setState","e1","e2","ViewMode","EditorTab","mergeEnums","sourcesInitial","html","trimStart","css","js","tabBarStyle","margin","paddingLeft","paddingRight","editorOptions","minimap","enabled","resultEditorOptions","readOnly","useLocalstorageState","getLocalStorageKey","sources","setSources","HTML","editorTab","setEditorTab","SPLIT","viewMode","setViewMode","handleSourceChange","useChangeStateHandler","handleEditorTabChange","tab","handleViewModeChange","useChangeValueStateHandler","resultSource","trim","handleEditorMount","editor","monaco","emmetHTML","emmetCSS","emmetJSX","leftCol","styles","VIEW","activeKey","tabBarGutter","tabBarExtraContent","type","icon","ViewHeadline","EDITOR","onClick","VerticalSplit","Html","AppEditor","language","onMount","options","Css","CSS","Javascript","JS","Code","rightCol","srcDoc","PageContainer","noPadding","direction","minSize","snapOffset"],"sourceRoot":""}