{"version":3,"file":"static/js/5998.9fe69b0f.chunk.js","mappings":"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","sources":["hooks/useInputState.ts","hooks/useStateChangeByEventHandler.ts","webpack://mrgrd56.github.io/./src/pages/templateTextGenerator/TemplateTextGeneratorPage.module.scss?6398","pages/templateTextGenerator/types/VariableValues.ts","pages/templateTextGenerator/components/variablesValuesList/VariableValuesList.tsx","pages/templateTextGenerator/components/variablesValuesList/VariablesValuesList.tsx","pages/templateTextGenerator/TemplateTextGeneratorPage.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from 'react';\nimport useStateChangeByEventHandler from './useStateChangeByEventHandler';\n\ntype PossiblyUndefined<S, V> = V extends undefined ? S | undefined : S;\nexport type SetStateByEventAction<S> = (event: React.ChangeEvent<{ value: S }>) => void;\n\nfunction useInputState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>, SetStateByEventAction<S>];\nfunction useInputState<S = undefined>(): [\n    S | undefined,\n    Dispatch<SetStateAction<S | undefined>>,\n    SetStateByEventAction<S | undefined>\n];\nfunction useInputState<S>(initialState?: S | (() => S)) {\n    const [value, setValue] = useState<PossiblyUndefined<S, typeof initialState>>(initialState);\n    const setValueByEvent = useStateChangeByEventHandler(setValue);\n\n    return [value, setValue, setValueByEvent];\n}\n\nexport default useInputState;\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\n\nexport const handleEventTargetValueChange =\n    <S>(callback: (value: S) => void) =>\n    (event: React.ChangeEvent<{ value: S }>) => {\n        callback(event.target.value);\n    };\n\nconst useStateChangeByEventHandler = <S>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(handleEventTargetValueChange(setState), [setState]);\n};\n\nexport default useStateChangeByEventHandler;\n","// extracted by mini-css-extract-plugin\nexport default {\"code\":\"TemplateTextGeneratorPage_code__IdyjI\"};","import { isArray } from 'lodash';\n\nexport interface VariableValuesRaw {\n    name: string;\n    valuesJson: string;\n}\n\nexport interface VariableValues {\n    name: string;\n    values: string[];\n}\n\nexport const getVariableValues = ({ name, valuesJson }: VariableValuesRaw): VariableValues => {\n    const valuesParsed = JSON.parse(valuesJson);\n    const values = isArray(valuesParsed) ? valuesParsed : [valuesParsed];\n    return { name, values };\n};\n","import React, { ChangeEventHandler, FunctionComponent } from 'react';\nimport { VariableValuesRaw } from '../../types/VariableValues';\nimport { Col, Input, Row } from 'antd';\nimport useInputState from '../../../../hooks/useInputState';\n\ninterface Props {\n    value: VariableValuesRaw;\n    onChange: (value: VariableValuesRaw) => void;\n}\n\n/** @deprecated */\nconst VariableValuesList: FunctionComponent<Props> = ({ value, onChange }) => {\n    const [valuesJson, , setValuesJsonByEvent] = useInputState<string>(JSON.stringify(value.valuesJson));\n\n    const handleNameChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n        onChange({\n            ...value,\n            name: event.target.value\n        });\n    };\n\n    const handleValuesChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n        onChange({\n            ...value,\n            valuesJson: event.target.value\n        });\n    };\n\n    // useEffect(() => {\n    //     try {\n    //         const values = JSON.parse(valuesJson) as string[];\n    //         handleValuesChange(values);\n    //     } catch (error) {\n    //         //console.error(error);\n    //     }\n    // }, [valuesJson, handleValuesChange]);\n\n    return (\n        <Col span={24}>\n            <Row gutter={4}>\n                <Col span={8}>\n                    <Input placeholder=\"Name\" value={value.name} onChange={handleNameChange} />\n                </Col>\n                <Col span={16}>\n                    <Input placeholder=\"Values JSON array\" value={value.valuesJson} onChange={handleValuesChange} />\n                </Col>\n                {/*<TagsInput values={value.values} onChange={handleValuesChange} />*/}\n            </Row>\n        </Col>\n    );\n};\n\nexport default VariableValuesList;\n","import React, { FunctionComponent, useCallback } from 'react';\nimport { VariableValuesRaw } from '../../types/VariableValues';\nimport { Button, Row, Space } from 'antd';\nimport VariableValuesList from './VariableValuesList';\n\ninterface Props {\n    values: VariableValuesRaw[];\n    onChange: (values: VariableValuesRaw[]) => void;\n}\n\nconst VariablesValuesList: FunctionComponent<Props> = ({ values, onChange }) => {\n    const handleAddClick = () => {\n        onChange([\n            ...values,\n            {\n                name: '',\n                valuesJson: '[]'\n            }\n        ]);\n    };\n\n    const handleChange = useCallback(\n        (index: number) => (value: VariableValuesRaw) => {\n            onChange(values.map((v, i) => (i === index ? value : v)));\n        },\n        [onChange, values]\n    );\n\n    return (\n        <Space direction=\"vertical\" className=\"w-100\">\n            {values.map((value, index) => (\n                <Row key={index}>\n                    <VariableValuesList value={value} onChange={handleChange(index)} />\n                </Row>\n            ))}\n            <Button type=\"dashed\" onClick={handleAddClick}>\n                Add\n            </Button>\n        </Space>\n    );\n};\n\nexport default VariablesValuesList;\n","import React, { FunctionComponent, useState } from 'react';\nimport PageContainer, { PageTag } from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, Row, Space } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport styles from './TemplateTextGeneratorPage.module.scss';\nimport { getVariableValues, VariableValuesRaw } from './types/VariableValues';\nimport VariablesValuesList from './components/variablesValuesList/VariablesValuesList';\nimport useInputState from '../../hooks/useInputState';\n\nconst TemplateTextGeneratorPage: FunctionComponent = () => {\n    const [template, , setTemplateByEvent] = useInputState<string>('');\n    const [resultSeparator, , setResultSeparatorByEvent] = useInputState<string>('\\n');\n    const [variablesValuesRaw, setVariablesValuesRaw] = useState<VariableValuesRaw[]>([]);\n    const [result, setResult] = useState<string>('');\n\n    const handleLogState = () => {\n        console.log({ template, resultSeparator, variablesValuesRaw });\n    };\n\n    const handleGenerate = () => {\n        const result = '';\n\n        const variablesValues = variablesValuesRaw.map(getVariableValues);\n        const resultsCount = variablesValues.reduce((result, value) => {\n            const count = value.values.length;\n            if (!count) {\n                return result;\n            }\n\n            return result ? result * count : result;\n        }, 0);\n\n        for (let i = 0; i < resultsCount; i++) {\n            for (const variable of variablesValues) {\n                const { name, values } = variable;\n\n                for (const value of values) {\n                    console.log({ name, value });\n                }\n            }\n        }\n\n        setResult(result);\n    };\n\n    return (\n        <PageContainer\n            title=\"Text by Template Generator\"\n            description={<>Generates text (including source code) from a template</>}\n            tags={[PageTag.WIP, PageTag.NOT_WORKING]}\n        >\n            <Col xs={24} lg={18} xl={12}>\n                <Row>\n                    <label className=\"w-100\">\n                        <h4>Template:</h4>\n                        <TextArea rows={6} className={styles.code} value={template} onChange={setTemplateByEvent} />\n                    </label>\n                </Row>\n                <Col className=\"mt-2\" span={24}>\n                    <Row>\n                        <h4>Variables:</h4>\n                    </Row>\n                    <Row>\n                        <VariablesValuesList values={variablesValuesRaw} onChange={setVariablesValuesRaw} />\n                    </Row>\n                </Col>\n                <Space className=\"mt-3\" direction=\"horizontal\">\n                    <Button type=\"primary\" onClick={handleGenerate}>\n                        Generate\n                    </Button>\n                    <Button type=\"default\" onClick={handleLogState}>\n                        Log state\n                    </Button>\n                </Space>\n                <TextArea className=\"mt-3\" readOnly rows={6} value={result} placeholder=\"Result\" />\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default TemplateTextGeneratorPage;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["initialState","useState","value","setValue","useStateChangeByEventHandler","setState","useCallback","callback","event","target","getVariableValues","name","valuesJson","valuesParsed","JSON","parse","values","isArray","onChange","useInputState","stringify","span","gutter","placeholder","handleChange","index","map","v","i","direction","className","type","onClick","template","setTemplateByEvent","resultSeparator","variablesValuesRaw","setVariablesValuesRaw","result","setResult","PageContainer","title","description","tags","PageTag","xs","lg","xl","TextArea","rows","styles","variablesValues","resultsCount","reduce","count","length","variable","console","log","readOnly","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2"],"sourceRoot":""}