{"version":3,"file":"static/js/9635.8b825f69.chunk.js","mappings":"8TAwBA,EAV2E,SAAC,GAA4B,IAA1BA,EAAyB,EAAzBA,SAAaC,GAAY,YAC3FC,GAAeC,EAAAA,EAAAA,KAAfD,WAER,OACI,SAAC,KAAD,kBAAWD,GAAX,IAAkBG,MAAOF,EAAaG,EAAAA,EAAUC,EAAAA,EAAhD,SACKN,M,WCnBb,WAAgBO,GAA+F,IAAD,uBAAjCC,EAAiC,iCAAjCA,EAAiC,kBAC1G,OAAOC,OAAOC,IAAP,MAAAD,OAAM,CAAKF,GAAL,OAAkBC,IAAeG,Q,WCqJlD,EA/IkD,WAC9C,OACI,SAACC,EAAA,EAAD,CAAeC,MAAM,uBAAuBC,aAAa,yEAAzD,UACI,UAACC,EAAA,EAAD,CAAMC,KAAG,EAACC,SAAS,QAAnB,WACI,eAAIC,UAAU,OAAOC,GAAG,OAAxB,UACI,mCAEJ,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,sKAQZ,eAAIH,UAAU,OAAOC,GAAG,SAAxB,UACI,qCAEJ,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,sKAQZ,eAAIH,UAAU,OAAOC,GAAG,gBAAxB,UACI,4CAEJ,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,wJAOZ,eAAIH,UAAU,OAAOC,GAAG,YAAxB,UACI,wCAEJ,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,qJAKZ,eAAIH,UAAU,OAAOC,GAAG,YAAxB,UACI,2CAEJ,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,mHAC1B,IAA0C,QAI5B,eAAIH,UAAU,OAAOC,GAAG,aAAxB,UACI,6BACI,SAACG,EAAA,EAAD,CAAMC,KAAK,UAAX,kBADJ,KACqC,SAACD,EAAA,EAAD,CAAMC,KAAK,UAAX,mBADrC,YAIJ,SAAC,EAAD,CACIH,SAAS,WACTpB,SAAUqB,EAAF,iYAC1B,MAGqB,IAEgC,IAErD,MAEA,MAGA,UAMc,eAAIH,UAAU,OAAOC,GAAG,WAAxB,uBAGA,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,uKAeZ,eAAIH,UAAU,OAAOC,GAAG,WAAxB,oBAGA,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,oFAIZ,eAAIH,UAAU,OAAOC,GAAG,WAAxB,mBAGA,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF,iGAIZ,eAAIH,UAAU,OAAOC,GAAG,WAAxB,sBAGA,SAAC,EAAD,CACIC,SAAS,WACTpB,SAAUqB,EAAF","sources":["components/appSyntaxHighlighter/AppSyntaxHighlighter.tsx","utils/r.ts","pages/markdownCheatSheetPage/MarkdownCheatSheetPage.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Prism, SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport useAppTheme from '../../hooks/useAppTheme';\n// @ts-ignore\nimport oneDark from 'react-syntax-highlighter/dist/esm/styles/prism/one-dark';\n// @ts-ignore\nimport oneLight from 'react-syntax-highlighter/dist/esm/styles/prism/one-light';\nimport PrismLanguage from './types/PrismLanguage';\n\nexport interface AppSyntaxHighlighterProps extends Omit<SyntaxHighlighterProps, 'style'> {\n    language?: PrismLanguage;\n    children: string | string[];\n}\n\nconst AppSyntaxHighlighter: FunctionComponent<AppSyntaxHighlighterProps> = ({ children, ...props }) => {\n    const { isDarkMode } = useAppTheme();\n\n    return (\n        <Prism {...props} style={isDarkMode ? oneDark : oneLight}>\n            {children}\n        </Prism>\n    );\n};\n\nexport default AppSyntaxHighlighter;\n","export default (template: { raw: readonly string[] | ArrayLike<string> }, ...substitutions: any[]): string => {\n    return String.raw(template, ...substitutions).trim();\n};\n","import React, { FunctionComponent } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport AppSyntaxHighlighter from '../../components/appSyntaxHighlighter/AppSyntaxHighlighter';\nimport Flex from '../../components/flex/Flex';\nimport r from '../../utils/r';\nimport Text from 'antd/lib/typography/Text';\n\nconst MarkdownCheatSheetPage: FunctionComponent = () => {\n    return (\n        <PageContainer title=\"Markdown Cheat Sheet\" description={<>A cheat sheet on basic markdown syntax</>}>\n            <Flex col maxWidth=\"800px\">\n                <h3 className=\"mt-1\" id=\"bold\">\n                    <b>Bold</b>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n**this is a bold text**\n__this is a bold text as well__  \n\n<b>this is a bold text too</b>  \n<strong>even this is a bold text</strong>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"italic\">\n                    <i>Italic</i>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n_this is an italic text_\n*this is an italic text as well*  \n\n<i>this is an italic text too</i>  \n<em>even this is an italic text</em>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"strikethrough\">\n                    <s>Strikethrough</s>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n~~this is a strikethrough text~~\n\n<s>this is a strikethrough text too</s>  \n<del>even this is a strikethrough text</del>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"underline\">\n                    <u>Underline</u>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n<u>It seems Markdown doesn't have its own syntax for underlined text</u>\n<ins>However, we can use these HTML tags</ins>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"monospace\">\n                    <code>Monospace</code>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n${'`'}this is a single line monospace text${'`'}\n<code>you can use this HTML tag as well</code>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"code-block\">\n                    <code>\n                        <Text type=\"success\">Code</Text>.<Text type=\"warning\">block</Text>();\n                    </code>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n${'```'}ts\nconst foo = () => {\n    const bar = 'You can write a code block this way';\n    console.log(bar, ${'`'}\nit is not necessary to specify the programming language, \nthough, it can highlight your code if it is supported${'`'});\n};\n${'```'}\n\n${'```'}\nA code block\nwithout syntax highlighting\n${'```'}\n\n    Also, you can put 4 spaces\n    at the beginning of the lines\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Headings\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n# Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n\nHeading 1 as well\n==\n\nAlso heading 2\n--\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Image\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n![Alt text](./path/to/image.png \"Title (not required)\")\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Link\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n[Link text](https://github.com/MRGRD56 \"Title (still not required)\")\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Spoiler\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n<details>\n    <summary>Do not open</summary>\n    Lorem ipsum dolor sit amet\n</details>\n`}\n                />\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default MarkdownCheatSheetPage;\n"],"names":["children","props","isDarkMode","useAppTheme","style","oneDark","oneLight","template","substitutions","String","raw","trim","PageContainer","title","description","Flex","col","maxWidth","className","id","language","r","Text","type"],"sourceRoot":""}