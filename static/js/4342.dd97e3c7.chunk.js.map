{"version":3,"file":"static/js/4342.dd97e3c7.chunk.js","mappings":"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","sources":["layouts/pages/pageContainer/PageContainer.tsx","layouts/pages/pageContainer/PageContainer.module.scss","components/disqusThread/DisqusThread.tsx","components/appSyntaxHighlighter/AppSyntaxHighlighter.tsx","utils/r.ts","pages/markdownCheatSheetPage/MarkdownCheatSheetPage.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__0XdUl\",\"noPadding\":\"PageContainer_noPadding__8qKdC\",\"noContentPadding\":\"PageContainer_noContentPadding__e8KpM\",\"headingContainer\":\"PageContainer_headingContainer__oss+6\",\"contentContainer\":\"PageContainer_contentContainer__1pGdM\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","import React, { FunctionComponent } from 'react';\nimport { Prism, SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport useAppTheme from '../../hooks/useAppTheme';\n// @ts-ignore\nimport oneDark from 'react-syntax-highlighter/dist/esm/styles/prism/one-dark';\n// @ts-ignore\nimport oneLight from 'react-syntax-highlighter/dist/esm/styles/prism/one-light';\nimport PrismLanguage from './types/PrismLanguage';\n\nexport interface AppSyntaxHighlighterProps extends Omit<SyntaxHighlighterProps, 'style'> {\n    language?: PrismLanguage;\n    children: string | string[];\n}\n\nconst AppSyntaxHighlighter: FunctionComponent<AppSyntaxHighlighterProps> = ({ children, ...props }) => {\n    const { isDarkMode } = useAppTheme();\n\n    return (\n        <Prism {...props} style={isDarkMode ? oneDark : oneLight}>\n            {children}\n        </Prism>\n    );\n};\n\nexport default AppSyntaxHighlighter;\n","export default (template: { raw: readonly string[] | ArrayLike<string> }, ...substitutions: any[]): string => {\n    return String.raw(template, ...substitutions).trim();\n};\n","import React, { FunctionComponent } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport AppSyntaxHighlighter from '../../components/appSyntaxHighlighter/AppSyntaxHighlighter';\nimport Flex from '../../components/flex/Flex';\nimport r from '../../utils/r';\nimport Text from 'antd/lib/typography/Text';\n\nconst MarkdownCheatSheetPage: FunctionComponent = () => {\n    return (\n        <PageContainer\n            title=\"Markdown Cheat Sheet\"\n            description={<>A cheat sheet on basic markdown syntax</>}\n            withComments\n        >\n            <Flex col maxWidth=\"800px\">\n                <h3 className=\"mt-1\" id=\"bold\">\n                    <b>Bold</b>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n**this is a bold text**\n__this is a bold text as well__  \n\n<b>this is a bold text too</b>  \n<strong>even this is a bold text</strong>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"italic\">\n                    <i>Italic</i>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n_this is an italic text_\n*this is an italic text as well*  \n\n<i>this is an italic text too</i>  \n<em>even this is an italic text</em>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"strikethrough\">\n                    <s>Strikethrough</s>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n~~this is a strikethrough text~~\n\n<s>this is a strikethrough text too</s>  \n<del>even this is a strikethrough text</del>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"underline\">\n                    <u>Underline</u>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n<u>It seems Markdown doesn't have its own syntax for underlined text</u>\n<ins>However, we can use these HTML tags</ins>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"monospace\">\n                    <code>Monospace</code>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n${'`'}this is a single line monospace text${'`'}\n<code>you can use this HTML tag as well</code>\n`}\n                />\n                <h3 className=\"mt-2\" id=\"code-block\">\n                    <code>\n                        <Text type=\"success\">Code</Text>.<Text type=\"warning\">block</Text>();\n                    </code>\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n${'```'}ts\nconst foo = () => {\n    const bar = 'You can write a code block this way';\n    console.log(bar, ${'`'}\nit is not necessary to specify the programming language, \nthough, it can highlight your code if it is supported${'`'});\n};\n${'```'}\n\n${'```'}\nA code block\nwithout syntax highlighting\n${'```'}\n\n    Also, you can put 4 spaces\n    at the beginning of the lines\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Headings\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n# Heading 1\n## Heading 2\n### Heading 3\n#### Heading 4\n##### Heading 5\n###### Heading 6\n\nHeading 1 as well\n==\n\nAlso heading 2\n--\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Image\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n![Alt text](./path/to/image.png \"Title (not required)\")\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Link\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n[Link text](https://github.com/MRGRD56 \"Title (still not required)\")\n`}\n                />\n                <h3 className=\"mt-2\" id=\"headings\">\n                    Spoiler\n                </h3>\n                <AppSyntaxHighlighter\n                    language=\"markdown\"\n                    children={r`\n<details>\n    <summary>Do not open</summary>\n    Lorem ipsum dolor sit amet\n</details>\n`}\n                />\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default MarkdownCheatSheetPage;\n"],"names":["PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","useRef","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","renderTag","tag","index","key","WIP","color","icon","NOT_WORKING","getTagNodes","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","isDarkMode","useAppTheme","style","oneDark","oneLight","template","substitutions","String","raw","trim","col","maxWidth","id","r","type"],"sourceRoot":""}