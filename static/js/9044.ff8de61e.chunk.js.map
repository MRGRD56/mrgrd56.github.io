{"version":3,"file":"static/js/9044.ff8de61e.chunk.js","mappings":"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","sources":["components/appEditor/AppEditor.tsx","webpack://mrgrd56.github.io/./src/pages/notificationsTestPage/NotificationsTestPage.module.scss?b157","pages/notificationsTestPage/NotificationsTestPage.tsx","utils/scopedEval.ts","../node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","../node_modules/@ant-design/icons/es/icons/ReloadOutlined.js"],"sourcesContent":["import React, { FunctionComponent, useCallback } from 'react';\r\nimport Editor, { EditorProps, OnChange } from '@monaco-editor/react';\r\nimport useAppTheme from '../../hooks/useAppTheme';\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames';\r\nimport * as monaco from 'monaco-editor';\r\nimport MonacoLanguage from '../../types/MonacoLanguage';\r\n\r\nconst loadingNode = <Spin size=\"large\" />;\r\n\r\nexport type AppOnChange = (value: string, ev: monaco.editor.IModelContentChangedEvent) => void;\r\n\r\ninterface Props extends Omit<EditorProps, 'onChange'> {\r\n    onChange?: AppOnChange;\r\n    language?: MonacoLanguage;\r\n}\r\n\r\nconst AppEditor: FunctionComponent<Props> = ({ className, loading, theme, onChange, ...props }) => {\r\n    const { isDarkMode } = useAppTheme();\r\n\r\n    const handleChange = useCallback<OnChange>(\r\n        (value, ev) => {\r\n            onChange?.(value ?? '', ev);\r\n        },\r\n        [onChange]\r\n    );\r\n\r\n    return (\r\n        <Editor\r\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\r\n            className={classNames('app-monaco-editor', className)}\r\n            loading={loading ?? loadingNode}\r\n            onChange={handleChange}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AppEditor;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NotificationsTestPage_container__5mEAp\"};","import React, { FunctionComponent, useCallback, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, notification, Tooltip } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport styles from './NotificationsTestPage.module.scss';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport AppEditor from '../../components/appEditor/AppEditor';\nimport { editor } from 'monaco-editor';\nimport scopedEval from '../../utils/scopedEval';\nimport { BaseType } from 'antd/lib/typography/Base';\n\nconst editorOptions: editor.IStandaloneEditorConstructionOptions = {\n    minimap: { enabled: false },\n    fontFamily: 'JetBrains Mono'\n};\n\nconst permissionColors: Readonly<Record<NotificationPermission, BaseType | undefined>> = {\n    default: undefined,\n    denied: 'danger',\n    granted: 'success'\n};\n\nconst NotificationsTestPage: FunctionComponent = () => {\n    const [permission, setPermission] = useState<NotificationPermission>(Notification.permission);\n    const [notificationCreationJs, setNotificationCreationJs] = useState<string>(\"new Notification('Hello world')\");\n\n    const permissionColor = permissionColors[permission];\n\n    const updateNotificationPermission = useCallback(() => {\n        setPermission(Notification.permission);\n    }, []);\n\n    const handleRequestPermission = useCallback(async () => {\n        const givenPermission = await Notification.requestPermission();\n        notification.info({\n            message: `Given permission: ${givenPermission}`\n        });\n        setPermission(givenPermission);\n    }, []);\n\n    const createNotification = useCallback(async () => {\n        const createdNotification = scopedEval(notificationCreationJs);\n        if (!(createdNotification instanceof Notification)) {\n            notification.error({\n                message: `Created object is not an instance of Notification, got ${\n                    createdNotification?.constructor?.name ?? typeof notification\n                }`\n            });\n            return;\n        }\n\n        console.log(createdNotification);\n    }, [notificationCreationJs]);\n\n    return (\n        <PageContainer title=\"JS Notifications Test\">\n            <Col xs={23} md={20} lg={18} className={styles.container}>\n                <Text>\n                    <Tooltip title=\"Notification.permission\" placement=\"bottom\">\n                        <Text strong>Permission:</Text>\n                        <Text className=\"ms-1\" type={permissionColor}>\n                            {permission}\n                        </Text>\n                    </Tooltip>\n                    <Button\n                        icon={<ReloadOutlined />}\n                        size=\"small\"\n                        type=\"text\"\n                        className=\"ms-1\"\n                        onClick={updateNotificationPermission}\n                    />\n                </Text>\n                <Tooltip title=\"Notification.requestPermission\" placement=\"bottom\">\n                    <Button onClick={handleRequestPermission}>Request permission</Button>\n                </Tooltip>\n                <AppEditor\n                    language=\"javascript\"\n                    width=\"100%\"\n                    height={160}\n                    value={notificationCreationJs}\n                    onChange={setNotificationCreationJs}\n                    options={editorOptions}\n                />\n                <Button type=\"primary\" onClick={createNotification}>\n                    Send notification\n                </Button>\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default NotificationsTestPage;\n","const scopedEval = (expression: string, context: object = {}) => {\n    const evaluator = Function.apply(null, [\n        ...Object.keys(context),\n        'expression',\n        'return eval(\"expression = undefined;\" + expression)'\n    ]);\n    return evaluator.apply(null, [...Object.values(context), expression]);\n};\n\nexport default scopedEval;\n","// This icon file is generated automatically.\nvar ReloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\" } }] }, \"name\": \"reload\", \"theme\": \"outlined\" };\nexport default ReloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\n\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);"],"names":["loadingNode","size","className","loading","theme","onChange","props","isDarkMode","useAppTheme","handleChange","useCallback","value","ev","classNames","editorOptions","minimap","enabled","fontFamily","permissionColors","default","undefined","denied","granted","useState","Notification","permission","setPermission","notificationCreationJs","setNotificationCreationJs","permissionColor","updateNotificationPermission","handleRequestPermission","requestPermission","givenPermission","notification","message","createNotification","createdNotification","scopedEval","constructor","name","console","log","PageContainer","title","xs","md","lg","styles","Text","placement","strong","type","icon","ReloadOutlined","onClick","AppEditor","language","width","height","options","expression","context","evaluator","Function","apply","Object","keys","values","ref","React","AntdIcon","_objectSpread","ReloadOutlinedSvg","displayName"],"sourceRoot":""}