{"version":3,"file":"static/js/1537.9f04f2b9.chunk.js","mappings":"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","sources":["layouts/pages/pageContainer/PageContainer.tsx","layouts/pages/pageContainer/PageContainer.module.scss","components/disqusThread/DisqusThread.tsx","pages/dateUtilsPage/components/differenceTab/DateUtilsDifferenceTab.tsx","pages/dateUtilsPage/DateUtilsPage.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__0XdUl\",\"noPadding\":\"PageContainer_noPadding__8qKdC\",\"noContentPadding\":\"PageContainer_noContentPadding__e8KpM\",\"headingContainer\":\"PageContainer_headingContainer__oss+6\",\"contentContainer\":\"PageContainer_contentContainer__1pGdM\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","import React, { FunctionComponent, useMemo, useState } from 'react';\nimport { Checkbox, Col, DatePicker, Space } from 'antd';\nimport moment, { duration, Duration, Moment } from 'moment';\nimport { RangeValue } from 'rc-picker/lib/interface';\nimport Text from 'antd/lib/typography/Text';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst DateUtilsDifferenceTab: FunctionComponent = () => {\n    const [range, setRange] = useState<RangeValue<Moment>>([moment(), moment()]);\n\n    const [isTotalDifference, setIsTotalDifference] = useState<boolean>(false);\n    const [isTimeShown, setIsTimeShown] = useState<boolean>(false);\n\n    const handleIsTotalDifferenceChange = (event: CheckboxChangeEvent) => {\n        const { checked } = event.target;\n        setIsTotalDifference(checked);\n    };\n\n    const handleIsTimeShownChange = (event: CheckboxChangeEvent) => {\n        const { checked } = event.target;\n        setIsTimeShown(checked);\n    };\n\n    const difference = useMemo<Duration | undefined>(() => {\n        if (!range) {\n            return undefined;\n        }\n\n        const [date1, date2] = range;\n\n        if (!date1 || !date2) {\n            return undefined;\n        }\n\n        return duration(date2.diff(date1));\n    }, [range]);\n\n    const differenceMethod = isTotalDifference ? 'as' : 'get';\n\n    return (\n        <Col xs={24} md={18} lg={14} xl={10} xxl={8}>\n            <DatePicker.RangePicker showTime={isTimeShown} value={range as any} onChange={setRange} />\n            {difference && (\n                <Col className=\"mt-2\">\n                    <Space direction=\"vertical\">\n                        <Checkbox checked={isTimeShown} onChange={handleIsTimeShownChange}>\n                            Show time\n                        </Checkbox>\n                        <Checkbox checked={isTotalDifference} onChange={handleIsTotalDifferenceChange}>\n                            Total\n                        </Checkbox>\n                        <Text>Years: {difference[differenceMethod]('years')}</Text>\n                        <Text>Months: {difference[differenceMethod]('months')}</Text>\n                        <Text>Days: {difference[differenceMethod]('days')}</Text>\n                        <Text>Hours: {difference[differenceMethod]('hours')}</Text>\n                        <Text>Minutes: {difference[differenceMethod]('minutes')}</Text>\n                        <Text>Seconds: {difference[differenceMethod]('seconds')}</Text>\n                    </Space>\n                </Col>\n            )}\n        </Col>\n    );\n};\n\nexport default DateUtilsDifferenceTab;\n","import React, { FunctionComponent } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Tabs } from 'antd';\n\nimport DateUtilsDifferenceTab from './components/differenceTab/DateUtilsDifferenceTab';\n\nconst DateUtilsPage: FunctionComponent = () => {\n    return (\n        <PageContainer title=\"Date utils\">\n            <Tabs>\n                <Tabs.TabPane tab=\"Difference\">\n                    <DateUtilsDifferenceTab />\n                </Tabs.TabPane>\n            </Tabs>\n        </PageContainer>\n    );\n};\n\nexport default DateUtilsPage;\n"],"names":["PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","useRef","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","renderTag","tag","index","key","WIP","color","icon","NOT_WORKING","getTagNodes","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","useState","moment","range","setRange","isTotalDifference","setIsTotalDifference","isTimeShown","setIsTimeShown","difference","date1","date2","duration","diff","differenceMethod","xs","md","lg","xl","xxl","showTime","value","onChange","checked","event","target","tab"],"sourceRoot":""}