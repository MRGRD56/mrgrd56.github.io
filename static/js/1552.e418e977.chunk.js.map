{"version":3,"file":"static/js/1552.e418e977.chunk.js","mappings":"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","sources":["layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/disqusThread/DisqusThread.tsx","hooks/useAppSider.ts","pages/threeDGraphicsTestPage/ThreeDGraphicsTestPage.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { FC, HTMLProps, useMemo } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","import { useMemo } from 'react';\nimport { SIDER_WIDTH } from '../constants/layout';\n\nconst useAppSider = () => {\n    return useMemo(() => {\n        const isSiderShown = window.innerWidth >= 992;\n\n        return {\n            isSiderShown,\n            siderWidth: isSiderShown ? SIDER_WIDTH : 0\n        };\n    }, []);\n};\n\nexport default useAppSider;\n","import React, { FunctionComponent, useRef } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { useDidMount } from 'rooks';\nimport * as Three from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport colorfulBackground from '../../assets/img/background/colorful-background-q50.jpg';\nimport glassNormal from './assets/glass.jpg';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport Text from 'antd/lib/typography/Text';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport useAppSider from '../../hooks/useAppSider';\nimport { PAGE_PADDING } from '../../constants/layout';\nimport dialogGh from './assets/dialog-gh.png';\nimport { Group, Vector3 } from 'three';\nimport DisqusThread from '../../components/disqusThread/DisqusThread';\n\nconst textureLoader = new Three.TextureLoader();\nconst gltfLoader = new GLTFLoader();\n\nconst ThreeDGraphicsTestPage: FunctionComponent = () => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const { siderWidth } = useAppSider();\n\n    useDidMount(() => {\n        const container = containerRef.current;\n        if (!container) {\n            return;\n        }\n\n        Array.from(container.children).forEach((child) => {\n            child.remove();\n        });\n\n        const width = Math.min(\n            Math.min(window.innerWidth - siderWidth - PAGE_PADDING * 2, window.innerHeight - 50),\n            1000\n        );\n        const height = width;\n\n        const glassNormalTexture = textureLoader.load(glassNormal);\n        glassNormalTexture.repeat.set(0.9, 0.9);\n        const glassNormalScale = new Three.Vector2(2, 2);\n\n        const scene = new Three.Scene();\n        const camera = new Three.PerspectiveCamera();\n\n        const renderer = new Three.WebGLRenderer({ antialias: true });\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(width, height);\n        renderer.setClearColor('#1976d2');\n        container.appendChild(renderer.domElement);\n\n        const composer = new EffectComposer(renderer);\n        composer.addPass(new RenderPass(scene, camera));\n        composer.addPass(new UnrealBloomPass(new Three.Vector2(width, height), 0.2, 0.5, 0.33));\n\n        const effectFXAA = new ShaderPass(FXAAShader);\n        effectFXAA.uniforms.resolution.value.x = 1 / (width * window.devicePixelRatio);\n        effectFXAA.uniforms.resolution.value.y = 1 / (height * window.devicePixelRatio);\n        composer.addPass(effectFXAA);\n\n        const hdrEquirect = new RGBELoader().load('/assets/empty_warehouse_01_1k.hdr', () => {\n            hdrEquirect.mapping = Three.EquirectangularReflectionMapping;\n        });\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.enabled = true;\n\n        const backgroundSize = 7;\n        const background = new Three.Mesh(\n            new Three.PlaneGeometry((backgroundSize * 16) / 9, backgroundSize),\n            new Three.MeshBasicMaterial({\n                map: textureLoader.load(colorfulBackground)\n            })\n        );\n        background.position.z = -1;\n        scene.add(background);\n\n        const mainObjectGeometry = new Three.IcosahedronGeometry(0.8);\n        const mainObjectMaterial = new Three.MeshPhysicalMaterial({\n            roughness: 0.15,\n            transmission: 1,\n            // @ts-ignore\n            thickness: 1,\n            color: new Three.Color('#80deea'),\n            envMap: hdrEquirect,\n            envMapIntensity: 1.3,\n            clearcoat: 1,\n            clearcoatRoughness: 0.3,\n            normalMap: glassNormalTexture,\n            clearcoatNormalMap: glassNormalTexture,\n            normalScale: glassNormalScale,\n            clearcoatNormalScale: glassNormalScale\n        });\n        const mainObject = new Three.Mesh(mainObjectGeometry, mainObjectMaterial);\n        mainObject.position.x = -0.85;\n        mainObject.rotation.x = 0.3;\n        mainObject.rotation.y = 0.33;\n\n        scene.add(mainObject);\n\n        const light = new Three.DirectionalLight(0xfff0dd, 1);\n        light.position.set(0, 5, 5);\n        light.rotation.y = -0.5;\n        scene.add(light);\n\n        camera.position.z = 5;\n\n        const animeGirlGroup = new Group();\n        animeGirlGroup.position.set(0, 0, 0);\n\n        let animeGirl: GLTF | undefined;\n\n        // const dialog = new Three.Mesh(\n        //     new Three.PlaneGeometry(),\n        //     new Three.MeshBasicMaterial({\n        //         map: textureLoader.load(dialogGh)\n        //     })\n        // );\n        // dialog.position.y = 2;\n        // dialog.position.x = 1;\n\n        gltfLoader.load('/assets/madoka_machida/scene.gltf', (gltf) => {\n            animeGirl = gltf;\n            animeGirl.scene.scale.set(0.1, 0.1, 0.1);\n            // animeGirl.scene.position.x = 1.1;\n            // animeGirl.scene.position.y = -0.95;\n\n            new Three.Box3().setFromObject(animeGirlGroup).getCenter(animeGirl.scene.position).multiplyScalar(-1);\n\n            animeGirlGroup.add(animeGirl.scene);\n            // animeGirlGroup.add(dialog);\n            animeGirlGroup.position.x = 1.1;\n            animeGirlGroup.position.y = -0.95;\n\n            scene.add(animeGirlGroup);\n        });\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n\n            mainObject.rotation.x += 0.002;\n            mainObject.rotation.y += 0.002;\n\n            if (animeGirl) {\n                animeGirlGroup.rotation.y += 0.01;\n            }\n\n            // renderer.render(scene, camera);\n            composer.render();\n        };\n\n        animate();\n    });\n\n    return (\n        <PageContainer title=\"3D Graphics Test\" withComments>\n            <div ref={containerRef} />\n            <Text type=\"secondary\" className=\"d-flex mt-1 text-break\">\n                This work is based on \"Madoka Machida\"\n                (https://sketchfab.com/3d-models/madoka-machida-4a23132e4cf0482bbe55131745bee27c) by halloween\n                (https://sketchfab.com/yellow09) licensed under CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\n            </Text>\n        </PageContainer>\n    );\n};\n\nexport default ThreeDGraphicsTestPage;\n"],"names":["PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","shortname","getTagNodes","key","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","ref","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","Paragraph","isSiderShown","innerWidth","siderWidth","SIDER_WIDTH","textureLoader","Three","gltfLoader","GLTFLoader","containerRef","useRef","useAppSider","useDidMount","container","current","Array","from","forEach","child","remove","width","Math","min","PAGE_PADDING","innerHeight","height","glassNormalTexture","load","glassNormal","repeat","set","glassNormalScale","scene","camera","renderer","antialias","setPixelRatio","devicePixelRatio","setSize","setClearColor","appendChild","domElement","composer","EffectComposer","addPass","RenderPass","UnrealBloomPass","effectFXAA","ShaderPass","FXAAShader","uniforms","resolution","value","x","y","hdrEquirect","RGBELoader","mapping","OrbitControls","enabled","background","backgroundSize","colorfulBackground","position","z","add","mainObjectGeometry","mainObjectMaterial","roughness","transmission","thickness","envMap","envMapIntensity","clearcoat","clearcoatRoughness","normalMap","clearcoatNormalMap","normalScale","clearcoatNormalScale","mainObject","rotation","light","animeGirl","animeGirlGroup","Group","gltf","scale","setFromObject","getCenter","multiplyScalar","animate","requestAnimationFrame","render","PageContainer","Text","type"],"sourceRoot":""}