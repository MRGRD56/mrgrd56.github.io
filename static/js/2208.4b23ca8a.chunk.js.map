{"version":3,"file":"static/js/2208.4b23ca8a.chunk.js","mappings":"sLAAaA,G,SAAkB,CAC3B,OACA,MACA,OACA,QACA,MACA,QACA,IACA,WACA,UACA,eACA,MACA,SACA,MACA,MACA,OACA,aACA,MACA,SACA,QACA,cACA,8CACA,6CACA,6CACA,4CACA,gDACA,+CACA,SACA,KACA,UACA,aACA,MACA,OACA,MACA,OACA,aACA,OACA,QACA,SACA,OACA,QACA,SACA,MACA,KACA,WACA,OACA,QACA,QACA,cACA,SACA,YACA,OACA,QACA,MACA,MACA,YACA,WACA,aACA,aACA,QACA,MACA,SACA,SACA,IACA,QACA,QACA,WACA,mBACA,OACA,OACA,KACA,QACA,SACA,OACA,QACA,MACA,SACA,MACA,KACA,QACA,gBACA,MACA,OACA,aACA,KACA,UACA,MACA,S,qCCtEJ,EAXuD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,GAAY,YAC/E,OACI,UAAC,KAAD,kBAAYA,GAAZ,cACKF,EAAgBG,KAAI,SAACC,GAAD,OACjB,SAAC,WAAD,UAA+BA,GAAXA,MAEvBH,Q,oNCNPI,GAAc,SAAC,IAAD,CAAMC,KAAK,UAiB/B,EAbgD,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAUP,GAAY,YACjFQ,GAAeC,EAAAA,EAAAA,KAAfD,WAER,OACI,SAAC,MAAD,QACID,MAAK,OAAEA,QAAF,IAAEA,EAAAA,EAAUC,EAAa,UAAY,QAC1CH,UAAWK,GAAAA,CAAW,oBAAqBL,GAC3CC,QAAO,OAAEA,QAAF,IAAEA,EAAAA,EAAWH,GAChBH,K,kECjBhB,EAA4G,oDAA5G,EAA4K,gDAA5K,EAA6O,qDAA7O,EAA0S,4CAA1S,EAAgW,8C,4DC2BhW,EApB+D,SAACA,GAC5D,IAAQW,EAAoEX,EAApEW,MAAOC,EAA6DZ,EAA7DY,WAAYb,EAAiDC,EAAjDD,SAAUM,EAAuCL,EAAvCK,UAAWQ,EAA4Bb,EAA5Ba,UAAcC,GAA9D,OAA4Ed,EAA5E,GAEA,OACI,SAACe,EAAA,GAAD,gBACIF,UAAS,OAAEA,QAAF,IAAEA,GAAAA,EACXR,UAAWK,GAAAA,CAAWM,EAAsBX,IACxCS,GAHR,cAKI,UAAC,IAAD,CAAKT,UAAWW,EAAhB,WACI,UAAC,IAAD,CAAKX,UAAWK,GAAAA,CAAWM,GAA3B,UACKL,IAAS,eAAIN,UAAWW,EAAf,SAA8BL,IACvCC,MAEL,SAAC,IAAD,CAAKP,UAAWK,GAAAA,CAAWM,GAA3B,SAA6CjB,WCrB7D,EAAiC,uCCS3BkB,EAAiD,CACnDC,kBAAkB,GAqBtB,EAlBuB,WACnB,OAAgCC,EAAAA,EAAAA,IAC5BC,EAAAA,EAAAA,GAAmB,cAAe,YAClC,aAFJ,eAAOlB,EAAP,KAAiBmB,EAAjB,KAKA,OACI,SAAC,EAAD,CACIV,MAAM,cACNC,YACI,SAACU,EAAA,EAAD,CAAsBC,MAAOrB,EAAUsB,SAAUH,EAAahB,UAAWW,IAHjF,UAMI,SAAC,EAAD,CAAeC,QAASA,EAASf,SAAUA","sources":["types/MonacoLanguage.ts","components/MonacoLanguageSelect.tsx","components/appDiffEditor/AppDiffEditor.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/singleConverterPageContainer/SingleConverterPageContainer.module.scss?55ba","layouts/pages/singleConverterPageContainer/SingleConverterPageContainer.tsx","webpack://mrgrd56.github.io/./src/pages/diffEditorPage/DiffEditorPage.module.scss?9459","pages/diffEditorPage/DiffEditorPage.tsx"],"sourcesContent":["export const monacoLanguages = [\n    'abap',\n    'aes',\n    'apex',\n    'azcli',\n    'bat',\n    'bicep',\n    'c',\n    'cameligo',\n    'clojure',\n    'coffeescript',\n    'cpp',\n    'csharp',\n    'csp',\n    'css',\n    'dart',\n    'dockerfile',\n    'ecl',\n    'elixir',\n    'flow9',\n    'freemarker2',\n    'freemarker2.tag-angle.interpolation-bracket',\n    'freemarker2.tag-angle.interpolation-dollar',\n    'freemarker2.tag-auto.interpolation-bracket',\n    'freemarker2.tag-auto.interpolation-dollar',\n    'freemarker2.tag-bracket.interpolation-bracket',\n    'freemarker2.tag-bracket.interpolation-dollar',\n    'fsharp',\n    'go',\n    'graphql',\n    'handlebars',\n    'hcl',\n    'html',\n    'ini',\n    'java',\n    'javascript',\n    'json',\n    'julia',\n    'kotlin',\n    'less',\n    'lexon',\n    'liquid',\n    'lua',\n    'm3',\n    'markdown',\n    'mips',\n    'msdax',\n    'mysql',\n    'objective-c',\n    'pascal',\n    'pascaligo',\n    'perl',\n    'pgsql',\n    'php',\n    'pla',\n    'plaintext',\n    'postiats',\n    'powerquery',\n    'powershell',\n    'proto',\n    'pug',\n    'python',\n    'qsharp',\n    'r',\n    'razor',\n    'redis',\n    'redshift',\n    'restructuredtext',\n    'ruby',\n    'rust',\n    'sb',\n    'scala',\n    'scheme',\n    'scss',\n    'shell',\n    'sol',\n    'sparql',\n    'sql',\n    'st',\n    'swift',\n    'systemverilog',\n    'tcl',\n    'twig',\n    'typescript',\n    'vb',\n    'verilog',\n    'xml',\n    'yaml'\n] as const;\n\ntype MonacoLanguage = typeof monacoLanguages[number];\n\nexport default MonacoLanguage;\n","import React, { FunctionComponent } from 'react';\nimport { monacoLanguages } from '../types/MonacoLanguage';\nimport { Select, SelectProps } from 'antd';\n\ntype Props = SelectProps;\n\nconst MonacoLanguageSelect: FunctionComponent<Props> = ({ children, ...props }) => {\n    return (\n        <Select {...props}>\n            {monacoLanguages.map((language) => (\n                <Select.Option key={language}>{language}</Select.Option>\n            ))}\n            {children}\n        </Select>\n    );\n};\n\nexport default MonacoLanguageSelect;\n","import React, { FunctionComponent } from 'react';\nimport { DiffEditor, DiffEditorProps } from '@monaco-editor/react';\nimport classNames from 'classnames';\nimport useAppTheme from '../../hooks/useAppTheme';\nimport { Spin } from 'antd';\n\nconst loadingNode = <Spin size=\"large\" />;\n\ntype Props = DiffEditorProps;\n\nconst AppDiffEditor: FunctionComponent<Props> = ({ className, loading, theme, ...props }) => {\n    const { isDarkMode } = useAppTheme();\n\n    return (\n        <DiffEditor\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\n            className={classNames('app-monaco-editor', className)}\n            loading={loading ?? loadingNode}\n            {...props}\n        />\n    );\n};\n\nexport default AppDiffEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"SingleConverterPageContainer_antd-text-primary__ItTvQ\",\"pageContainer\":\"SingleConverterPageContainer_pageContainer__Yp47r\",\"container\":\"SingleConverterPageContainer_container__QK0op\",\"titleContainer\":\"SingleConverterPageContainer_titleContainer__eO7sI\",\"title\":\"SingleConverterPageContainer_title__DUFLz\",\"content\":\"SingleConverterPageContainer_content__iVGb+\"};","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport { Col, Row } from 'antd';\nimport PageContainer, { PageContainerProps } from '../pageContainer/PageContainer';\nimport styles from './SingleConverterPageContainer.module.scss';\n\ntype Props = PageContainerProps;\n\nconst SingleConverterPageContainer: FunctionComponent<Props> = (props) => {\n    const { title, titleExtra, children, className, noPadding, ...pageProps } = props;\n\n    return (\n        <PageContainer\n            noPadding={noPadding ?? true}\n            className={classNames(styles.pageContainer, className)}\n            {...pageProps}\n        >\n            <Col className={styles.container}>\n                <Row className={classNames(styles.titleContainer)}>\n                    {title && <h3 className={styles.title}>{title}</h3>}\n                    {titleExtra}\n                </Row>\n                <Row className={classNames(styles.content)}>{children}</Row>\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default SingleConverterPageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"languageSelect\":\"DiffEditorPage_languageSelect__nWZ6b\"};","import React from 'react';\nimport { editor } from 'monaco-editor';\nimport AppDiffEditor from '../../components/appDiffEditor/AppDiffEditor';\nimport MonacoLanguageSelect from '../../components/MonacoLanguageSelect';\nimport MonacoLanguage from '../../types/MonacoLanguage';\nimport { useLocalstorageState } from 'rooks';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport SingleConverterPageContainer from '../../layouts/pages/singleConverterPageContainer/SingleConverterPageContainer';\nimport styles from './DiffEditorPage.module.scss';\n\nconst options: editor.IDiffEditorConstructionOptions = {\n    originalEditable: true\n};\n\nconst DiffEditorPage = () => {\n    const [language, setLanguage] = useLocalstorageState<MonacoLanguage>(\n        getLocalStorageKey('diff-editor', 'language'),\n        'plaintext'\n    );\n\n    return (\n        <SingleConverterPageContainer\n            title=\"Diff Editor\"\n            titleExtra={\n                <MonacoLanguageSelect value={language} onChange={setLanguage} className={styles.languageSelect} />\n            }\n        >\n            <AppDiffEditor options={options} language={language} />\n        </SingleConverterPageContainer>\n    );\n};\n\nexport default DiffEditorPage;\n"],"names":["monacoLanguages","children","props","map","language","loadingNode","size","className","loading","theme","isDarkMode","useAppTheme","classNames","title","titleExtra","noPadding","pageProps","PageContainer","styles","options","originalEditable","useLocalstorageState","getLocalStorageKey","setLanguage","MonacoLanguageSelect","value","onChange"],"sourceRoot":""}