{"version":3,"file":"static/js/9249.62dee1c2.chunk.js","mappings":"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","sources":["components/NpmLink.tsx","components/appEditor/AppEditor.tsx","utils/copyText.ts","utils/copyBlob.ts","utils/computeValue.ts","components/copyButton/CopyButton.tsx","webpack://mrgrd56.github.io/./src/components/labeledSwitch/LabeledSwitch.module.scss?3774","components/labeledSwitch/LabeledSwitch.tsx","hooks/useStateChangeByEventHandler.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/disqusThread/DisqusThread.tsx","pages/jsEvaluatorPage/types/OutputMode.ts","webpack://mrgrd56.github.io/./src/pages/jsEvaluatorPage/JsEvaluatorPage.module.scss?7728","utils/monaco/monacoExtraLibs.ts","components/jsObjectViewer/JsObjectViewer.tsx","pages/jsEvaluatorPage/JsEvaluatorPage.tsx","utils/getErrorMessage.ts","utils/getLocalStorageKey.ts","utils/getNpmPackageLink.ts","utils/processRef.ts","utils/scopedEval.ts"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\nimport ExternalLink from './ExternalLink';\nimport getNpmPackageLink from '../utils/getNpmPackageLink';\n\ninterface Props {\n    packageName: string;\n    plain?: boolean;\n    children?: ReactNode;\n}\n\nconst NpmLink: FunctionComponent<Props> = ({ packageName, plain, children }) => {\n    const link = getNpmPackageLink(packageName);\n\n    const text = children || packageName;\n\n    return <ExternalLink href={link}>{plain ? text : <code>{text}</code>}</ExternalLink>;\n};\n\nexport default React.memo(NpmLink);\n","import React, { FunctionComponent, useCallback, useMemo } from 'react';\nimport Editor, { EditorProps, OnChange } from '@monaco-editor/react';\nimport useAppTheme from '../../hooks/useAppTheme';\nimport { Spin } from 'antd';\nimport classNames from 'classnames';\nimport * as monaco from 'monaco-editor';\nimport MonacoLanguage from '../../types/MonacoLanguage';\nimport { editor } from 'monaco-editor';\n\nconst loadingNode = <Spin size=\"large\" />;\n\nexport type AppOnChange = (value: string, ev: monaco.editor.IModelContentChangedEvent) => void;\n\nconst defaultOptions: Readonly<editor.IStandaloneEditorConstructionOptions> = {\n    minimap: { enabled: false }\n};\n\nexport interface AppEditorProps extends Omit<EditorProps, 'onChange'> {\n    onChange?: AppOnChange;\n    language?: MonacoLanguage;\n}\n\nconst AppEditor: FunctionComponent<AppEditorProps> = ({ className, loading, theme, onChange, options, ...props }) => {\n    const { isDarkMode } = useAppTheme();\n\n    const editorOptions = useMemo(\n        () => ({\n            ...defaultOptions,\n            ...options\n        }),\n        [options]\n    );\n\n    const handleChange = useCallback<OnChange>(\n        (value, ev) => {\n            onChange?.(value ?? '', ev);\n        },\n        [onChange]\n    );\n\n    return (\n        <Editor\n            theme={theme ?? (isDarkMode ? 'vs-dark' : 'light')}\n            className={classNames('app-monaco-editor', className)}\n            loading={loading ?? loadingNode}\n            onChange={handleChange}\n            options={editorOptions}\n            {...props}\n        />\n    );\n};\n\nexport default AppEditor;\n","const copyText = (text: string | undefined) => {\n    if (!text) {\n        return;\n    }\n\n    return navigator.clipboard.writeText(text);\n};\n\nexport default copyText;\n","const copyBlob = (blob: Blob) => {\n    return navigator.clipboard.write([\n        new ClipboardItem({\n            [blob.type]: blob\n        })\n    ]);\n};\n\nexport default copyBlob;\n","import { isFunction } from 'lodash';\n\nconst computeValue = <T>(value: T | (() => T)): T => {\n    return isFunction(value) ? value() : value;\n};\n\nexport default computeValue;\n","import React, { MouseEvent, MouseEventHandler, useRef, useState } from 'react';\nimport copyText from '../../utils/copyText';\nimport { Button, ButtonProps } from 'antd';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { isNil, isString } from 'lodash';\nimport copyBlob from '../../utils/copyBlob';\nimport computeValue from '../../utils/computeValue';\n\ntype ContentType = string | Blob | null | undefined;\n\ninterface Props<T extends ContentType> extends Omit<ButtonProps, 'value'> {\n    value: T | (() => T);\n    copyEmpty?: boolean;\n    onClick?: (event: MouseEvent<HTMLButtonElement>) => T;\n}\n\nfunction CopyButton<T extends ContentType>({ value, copyEmpty, children, onClick, icon, ...props }: Props<T>) {\n    const [isCopied, setIsCopied] = useState<boolean>(false);\n\n    const copiedTimeoutRef = useRef<NodeJS.Timeout>();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = async (event) => {\n        const replacedValue = onClick?.(event);\n\n        const actualValue = replacedValue ?? computeValue(value);\n\n        if (!actualValue && !copyEmpty) {\n            return;\n        }\n\n        if (copiedTimeoutRef.current) {\n            clearTimeout(copiedTimeoutRef.current);\n        }\n\n        if (isNil(actualValue) || isString(actualValue)) {\n            await copyText(actualValue ?? '');\n        }\n        if (actualValue instanceof Blob) {\n            await copyBlob(actualValue);\n        }\n\n        setIsCopied(true);\n        copiedTimeoutRef.current = setTimeout(() => {\n            setIsCopied(false);\n        }, 1000);\n    };\n\n    return (\n        <Button onClick={handleClick} icon={icon ?? (isCopied ? <CheckOutlined /> : <CopyOutlined />)} {...props}>\n            {children ?? 'Copy'}\n        </Button>\n    );\n}\n\nexport default CopyButton;\n// export default React.memo(CopyButton, (prevProps, nextProps) => {\n//     return isEqual(omit(prevProps, 'value'), omit(nextProps, 'value')) && isEqualFunctions(prevProps.value, nextProps.value);\n// });\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"LabeledSwitch_label__MlNG1\"};","import React, { CSSProperties, FunctionComponent, HTMLProps, useMemo } from 'react';\nimport { Switch, SwitchProps } from 'antd';\nimport { omit, pick } from 'lodash';\nimport styles from './LabeledSwitch.module.scss';\nimport classNames from 'classnames';\n\ninterface Props\n    extends Omit<HTMLProps<HTMLLabelElement>, 'onChange' | 'onClick' | 'size' | 'label'>,\n        Omit<SwitchProps, 'className' | 'style'> {\n    switchClassName?: string;\n    switchStyle?: CSSProperties;\n}\n\nconst realSwitchPropsNames = [\n    'prefixCls',\n    'size',\n    'checked',\n    'defaultChecked',\n    'onChange',\n    'onClick',\n    'checkedChildren',\n    'unCheckedChildren',\n    'disabled',\n    'loading',\n    'autoFocus',\n    'title',\n    'tabIndex',\n    'id'\n] as const;\n\nconst switchPropNames = [...realSwitchPropsNames, 'switchClassName', 'switchStyle'] as const;\n\nconst LabeledSwitch: FunctionComponent<Props> = ({ children, ...props }) => {\n    const { switchProps, labelProps } = useMemo(() => {\n        return {\n            switchProps: {\n                ...pick(props, realSwitchPropsNames),\n                className: classNames(styles.switch, props.switchClassName),\n                style: props.switchStyle\n            },\n            labelProps: {\n                ...omit(props, switchPropNames),\n                className: classNames(styles.label, props.className)\n            }\n        };\n    }, [props]);\n\n    return (\n        <label {...labelProps}>\n            <Switch {...switchProps} />\n            {children}\n        </label>\n    );\n};\n\nexport default LabeledSwitch;\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport useAutoRef from './useAutoRef';\n\nexport const handleEventTargetValueChange =\n    <S>(callback: (value: S) => void, onChange?: React.ChangeEventHandler<{ value: S }>) =>\n    (event: React.ChangeEvent<{ value: S }>) => {\n        callback(event.target.value);\n        onChange?.(event);\n    };\n\nconst useStateChangeByEventHandler = <S>(\n    setState: Dispatch<SetStateAction<S>>,\n    onChange?: React.ChangeEventHandler<{ value: S }>\n) => {\n    const onChangeRef = useAutoRef(onChange);\n\n    return useCallback(handleEventTargetValueChange(setState, onChangeRef.current), [setState]);\n};\n\nexport default useStateChangeByEventHandler;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","enum OutputMode {\n    VIEW = 'VIEW',\n    TEXT = 'TEXT',\n    HTML = 'HTML',\n    TABLE = 'TABLE',\n    CONSOLE = 'CONSOLE'\n}\n\nexport default OutputMode;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"JsEvaluatorPage_antd-text-primary__Sv4cd\",\"ant-tabs-first-tab-indent\":\"JsEvaluatorPage_ant-tabs-first-tab-indent__s2n-h\",\"ant-tabs-tab\":\"JsEvaluatorPage_ant-tabs-tab__qUh8i\",\"ant-tabs-no-w100-but-max\":\"JsEvaluatorPage_ant-tabs-no-w100-but-max__l87IC\",\"ant-tabs-tabpane\":\"JsEvaluatorPage_ant-tabs-tabpane__klzap\",\"container\":\"JsEvaluatorPage_container__uj24J\",\"outputModeComboBox\":\"JsEvaluatorPage_outputModeComboBox__YHsN+\",\"textarea\":\"JsEvaluatorPage_textarea__YDFfH\",\"valueContainer\":\"JsEvaluatorPage_valueContainer__ND2pL\",\"codeContainer\":\"JsEvaluatorPage_codeContainer__bHlmZ\",\"codeEditorContainer\":\"JsEvaluatorPage_codeEditorContainer__IxTia\",\"codeEditor\":\"JsEvaluatorPage_codeEditor__i7eEW\",\"resultContainerWrapper\":\"JsEvaluatorPage_resultContainerWrapper__sphP8\",\"resultContainer\":\"JsEvaluatorPage_resultContainer__-1ajm\"};","import { Monaco } from '@monaco-editor/react';\n\ntype AddLibrary = (monaco: Monaco) => Promise<void>;\n\nconst createAddTypes = (monaco: Monaco) => {\n    const add = (contents: string, typesLocation?: string): void => {\n        monaco.languages.typescript.javascriptDefaults.addExtraLib(contents, typesLocation);\n    };\n\n    const addLibrary = async (importedTypes: Promise<RawLoaded>, typesLocation: string): Promise<void> => {\n        add((await importedTypes).default, typesLocation);\n    };\n\n    addLibrary.custom = add;\n\n    return addLibrary;\n};\n\nclass MonacoExtraLibs {\n    lodash: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        await addTypes(import('!raw-loader!@types/lodash/index.d.ts'), '@types/lodash/index.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/common.d.ts'), '@types/lodash/common/common.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/array.d.ts'), '@types/lodash/common/array.d.ts');\n        await addTypes(\n            import('!raw-loader!@types/lodash/common/collection.d.ts'),\n            '@types/lodash/common/collection.d.ts'\n        );\n        await addTypes(import('!raw-loader!@types/lodash/common/date.d.ts'), '@types/lodash/common/date.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/function.d.ts'), '@types/lodash/common/function.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/lang.d.ts'), '@types/lodash/common/lang.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/math.d.ts'), '@types/lodash/common/math.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/number.d.ts'), '@types/lodash/common/number.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/object.d.ts'), '@types/lodash/common/object.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/seq.d.ts'), '@types/lodash/common/seq.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/string.d.ts'), '@types/lodash/common/string.d.ts');\n        await addTypes(import('!raw-loader!@types/lodash/common/util.d.ts'), '@types/lodash/common/util.d.ts');\n    };\n    axios: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        // await addTypes(import('!raw-loader!axios/index.d.ts'), 'axios/index.d.ts');\n        // TODO\n        addTypes.custom(`\n        declare const axios: any;\n        `);\n    };\n    pluralize: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        await addTypes(import('!raw-loader!@types/pluralize/index.d.ts'), '@types/pluralize/index.d.ts');\n    };\n\n    moment: AddLibrary = async (monaco) => {\n        const addTypes = createAddTypes(monaco);\n        // await addTypes(import('!raw-loader!moment/moment.d.ts'), 'moment/moment.d.ts');\n        addTypes.custom(`\n        declare const moment: any;\n        `);\n    };\n}\n\nconst monacoExtraLibs = new MonacoExtraLibs();\n\nexport default monacoExtraLibs;\n","import React, { HTMLProps, ReactElement, useEffect, useRef } from 'react';\nimport { useDidMount } from 'rooks';\nimport LunaObjectViewer from 'luna-object-viewer';\nimport useAppTheme from '../../hooks/useAppTheme';\nimport processRef from '../../utils/processRef';\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, 'value' | 'children'> {\n    value: unknown;\n}\n\nconst JsObjectViewer = ({ value, ...props }: Props): ReactElement => {\n    const { isDarkMode } = useAppTheme();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const objectViewerRef = useRef<LunaObjectViewer>();\n\n    useDidMount(() => {\n        const container = containerRef.current;\n        if (!container) {\n            throw new Error('Cannot initialize JsObjectViewer: No container');\n        }\n\n        objectViewerRef.current = new LunaObjectViewer(container, {\n            theme: isDarkMode ? 'dark' : 'light',\n            accessGetter: true,\n            unenumerable: true\n        });\n    });\n\n    useEffect(() => {\n        processRef(objectViewerRef, (objectViewer) => {\n            objectViewer.set(value);\n        });\n    }, [value]);\n\n    useEffect(() => {\n        processRef(objectViewerRef, (objectViewer) => {\n            objectViewer.setOption('theme', isDarkMode ? 'dark' : 'light');\n        });\n    }, [isDarkMode]);\n\n    return <div ref={containerRef} {...props} />;\n};\n\nexport default JsObjectViewer;\n","import React, { MutableRefObject, useCallback, useEffect, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Col, notification, Row, Select, Spin, Tooltip } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport pluralize from 'pluralize';\nimport scopedEval from '../../utils/scopedEval';\nimport getErrorMessage from '../../utils/getErrorMessage';\nimport _, { isObjectLike } from 'lodash';\nimport axios from 'axios';\nimport Text from 'antd/lib/typography/Text';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport styles from './JsEvaluatorPage.module.scss';\nimport OutputMode from './types/OutputMode';\nimport CopyButton from '../../components/copyButton/CopyButton';\nimport { BeforeMount } from '@monaco-editor/react';\nimport { editor } from 'monaco-editor';\nimport classNames from 'classnames';\nimport AppEditor from '../../components/appEditor/AppEditor';\nimport monacoExtraLibs from '../../utils/monaco/monacoExtraLibs';\nimport moment from 'moment';\nimport NpmLink from '../../components/NpmLink';\nimport Flex from '../../components/flex/Flex';\nimport LabeledSwitch from '../../components/labeledSwitch/LabeledSwitch';\nimport { useDebounce, useLocalstorageState } from 'rooks';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport JsObjectViewer from '../../components/jsObjectViewer/JsObjectViewer';\nimport useStateChangeByEventHandler from '../../hooks/useStateChangeByEventHandler';\n\ninterface ShowCountProps {\n    formatter: (args: { count: number; maxLength?: number }) => string;\n}\n\nconst textAreaShowCount: ShowCountProps = {\n    formatter: ({ count }) => pluralize('character', count, true)\n};\n\nconst codeEditorOptions: editor.IStandaloneEditorConstructionOptions = {\n    fontFamily: 'JetBrains Mono',\n    minimap: { enabled: false }\n};\n\nconst handleCodeEditorBeforeMount: BeforeMount = (monaco) => {\n    monaco.languages.typescript.javascriptDefaults.addExtraLib(`\ndeclare const $value: string;`);\n    monacoExtraLibs.lodash(monaco);\n    monacoExtraLibs.axios(monaco);\n    monacoExtraLibs.pluralize(monaco);\n    monacoExtraLibs.moment(monaco);\n};\n\nconst JsEvaluatorPage = () => {\n    const [$value, set$Value] = useLocalstorageState<string>(getLocalStorageKey('javascript-eval', '$value'), '');\n    const set$ValueByEvent = useStateChangeByEventHandler(set$Value);\n    const [jsSource, setJsSource] = useLocalstorageState<string>(getLocalStorageKey('javascript-eval', 'jsSource'), '');\n    const [evaluatedJs, setEvaluatedJs] = useState<MutableRefObject<unknown>>();\n    const [evaluatedJsString, setEvaluatedJsString] = useState<string>('');\n    const [isAutoEval, setIsAutoEval] = useLocalstorageState<boolean>(\n        getLocalStorageKey('javascript-eval', 'isAutoEval'),\n        true\n    );\n\n    const [outputMode, setOutputMode] = useLocalstorageState<OutputMode>(\n        getLocalStorageKey('javascript-eval', 'outputMode'),\n        OutputMode.TEXT\n    );\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n\n    const evaluateJsDangerous = useCallback(async (evalValue: string, $value: string) => {\n        if (!evalValue) {\n            setEvaluatedJs(undefined);\n            setEvaluatedJsString('');\n            return;\n        }\n\n        setIsLoading(true);\n\n        const evalResult = await scopedEval(evalValue, {\n            $value,\n            _,\n            axios,\n            pluralize,\n            moment,\n            $easterEgg: '🥚'\n        });\n\n        if (outputMode === OutputMode.CONSOLE) {\n            console.log(evalResult);\n        }\n\n        setEvaluatedJs({ current: evalResult });\n\n        const evalResultString = isObjectLike(evalResult)\n            ? JSON.stringify(evalResult, undefined, 2)\n            : String(evalResult);\n\n        setEvaluatedJsString(evalResultString);\n    }, []);\n\n    const handleJsError = useCallback((error) => {\n        notification.error({\n            message: error?.constructor.name ?? 'Error',\n            description: getErrorMessage(error)\n        });\n\n        if (outputMode === OutputMode.CONSOLE) {\n            console.error(error);\n        }\n    }, []);\n\n    const evaluateJs = useCallback(async () => {\n        try {\n            await evaluateJsDangerous(jsSource, $value);\n        } catch (error) {\n            handleJsError(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [evaluateJsDangerous, handleJsError, jsSource, $value]);\n\n    const handleEveryEvalValueChange = useCallback(async (evalValue: string, $value: string) => {\n        try {\n            await evaluateJsDangerous(evalValue, $value);\n        } catch (error) {\n            if (!(error instanceof ReferenceError || error instanceof SyntaxError || error instanceof TypeError)) {\n                handleJsError(error);\n            }\n\n            // ignored\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    const handleEvalValueChange = useDebounce(handleEveryEvalValueChange, 300);\n\n    useEffect(() => {\n        if (!isAutoEval) {\n            return;\n        }\n\n        handleEvalValueChange(jsSource, $value);\n    }, [isAutoEval, jsSource, $value]);\n\n    return (\n        <PageContainer title=\"JavaScript Evaluator\" className={styles.container}>\n            <Flex col gap={8} minHeight=\"100%\" maxHeight=\"100%\">\n                <Col className={styles.valueContainer}>\n                    <TextArea\n                        rows={6}\n                        allowClear\n                        showCount={textAreaShowCount}\n                        value={$value}\n                        onChange={set$ValueByEvent}\n                        className={classNames('mb-3', styles.textarea)}\n                        placeholder=\"$value\"\n                        id=\"$value-textarea\"\n                    />\n                </Col>\n                <Flex col className={styles.codeContainer}>\n                    <Flex col flex={1} className={styles.codeEditorContainer}>\n                        <Text>\n                            <Paragraph className=\"mb-1\">Evaluate JavaScript</Paragraph>\n                            <Paragraph className=\"mb-2\">\n                                Available variables:{' '}\n                                <Tooltip title=\"The string above\">\n                                    <label htmlFor=\"$value-textarea\">\n                                        <code>$value</code>\n                                    </label>\n                                </Tooltip>\n                                {', '}\n                                <NpmLink packageName=\"lodash\">_</NpmLink>\n                                {', '}\n                                <NpmLink packageName=\"axios\" />\n                                {', '}\n                                <NpmLink packageName=\"pluralize\" />\n                                {', '}\n                                <NpmLink packageName=\"moment\" />\n                            </Paragraph>\n                        </Text>\n\n                        {/*<TextArea className=\"font-monospace mt-1\" $value={jsSource} onChange={setEvalValueByEvent} />*/}\n                        <AppEditor\n                            defaultLanguage=\"javascript\"\n                            className={classNames('mt-1', styles.codeEditor)}\n                            value={jsSource}\n                            onChange={setJsSource}\n                            options={codeEditorOptions}\n                            beforeMount={handleCodeEditorBeforeMount}\n                        />\n                    </Flex>\n                    <Row className=\"mt-1 mb-2 d-flex justify-content-between\">\n                        <Flex row gap={10} align=\"center\">\n                            <Button type=\"primary\" onClick={evaluateJs}>\n                                Evaluate\n                            </Button>\n                            <LabeledSwitch checked={isAutoEval} onChange={setIsAutoEval}>\n                                Auto\n                            </LabeledSwitch>\n                        </Flex>\n                        <Select className={styles.outputModeComboBox} value={outputMode} onChange={setOutputMode}>\n                            <Select.Option key={OutputMode.VIEW}>View</Select.Option>\n                            <Select.Option key={OutputMode.TEXT}>Text</Select.Option>\n                            <Select.Option key={OutputMode.HTML}>HTML</Select.Option>\n                            <Select.Option key={OutputMode.TABLE}>Table</Select.Option>\n                            <Select.Option key={OutputMode.CONSOLE}>Console</Select.Option>\n                        </Select>\n                    </Row>\n                </Flex>\n                <Flex col className={styles.resultContainerWrapper}>\n                    <Spin spinning={isLoading} delay={10} className={styles.resultContainer}>\n                        {outputMode === OutputMode.VIEW && evaluatedJs !== undefined && (\n                            <JsObjectViewer value={evaluatedJs.current} />\n                        )}\n                        {outputMode === OutputMode.TEXT && (\n                            <Col>\n                                <TextArea\n                                    className={classNames('font-monospace mb-2', styles.textarea)}\n                                    readOnly\n                                    value={evaluatedJsString}\n                                    rows={6}\n                                />\n                                <CopyButton value={evaluatedJsString} />\n                            </Col>\n                        )}\n                        {outputMode === OutputMode.HTML && (\n                            <div dangerouslySetInnerHTML={{ __html: evaluatedJsString }} />\n                        )}\n                        {outputMode === OutputMode.TABLE && <Text type=\"secondary\">Coming Soon</Text>}\n                        {outputMode === OutputMode.CONSOLE && <div>The output is in your browser console</div>}\n                    </Spin>\n                </Flex>\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default JsEvaluatorPage;\n","const getErrorMessage = (error: any) => {\n    return error instanceof Error ? error.message : String(error);\n};\n\nexport default getErrorMessage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","const getNpmPackageLink = (packageName: string): string => `https://www.npmjs.com/package/${packageName}`;\n\nexport default getNpmPackageLink;\n","import { MutableRefObject, RefObject } from 'react';\nimport { isNil } from 'lodash';\nimport NonNil from '../types/common/NonNil';\nimport Nil from '../types/common/Nil';\n\ntype AnyRefObject<T> = RefObject<T> | MutableRefObject<T>;\n\ntype ExtractRefType<R extends AnyRefObject<unknown>> = R extends AnyRefObject<infer T> ? T : never;\n\nfunction processRef<R extends MutableRefObject<unknown>, V1>(\n    ref: R,\n    handler: (value: NonNil<ExtractRefType<R>>) => V1\n): V1 | undefined;\nfunction processRef<R extends MutableRefObject<unknown>, V1, V2>(\n    ref: R,\n    handler: (value: NonNil<ExtractRefType<R>>) => V1,\n    nilHandler: (value: Extract<ExtractRefType<R>, Nil>) => V2\n): V1 | V2;\nfunction processRef<R extends MutableRefObject<unknown>, V1, V2>(\n    ref: R,\n    handler: (value: NonNil<ExtractRefType<R>>) => V1,\n    nilHandler?: (value: Extract<ExtractRefType<R>, Nil>) => V2\n): V1 | V2 | undefined {\n    if (isNil(ref.current)) {\n        if (!nilHandler) {\n            return undefined;\n        }\n\n        return nilHandler(ref.current as Extract<ExtractRefType<R>, Nil>);\n    }\n\n    return handler(ref.current as NonNil<ExtractRefType<R>>);\n}\n\nexport default processRef;\n\n// TRASH\n\n// type RefsToValues<Refs extends Array<MutableRefObject<any>>> =\n//     Refs extends [infer RefType, ...infer RestRefTypes]\n//         ? RefType extends MutableRefObject<infer Type>\n//             ? RestRefTypes extends Array<MutableRefObject<any>>\n//                 ? [NotNil<Type>, ...RefsToValues<RestRefTypes>]\n//                 : [1]\n//             : [2]\n//         : [];\n\n// type TestA = RefsToValues<[MutableRefObject<number | undefined>]>;\n\n// const handleRefs = <Refs extends Array<MutableRefObject<any>>>(refs: Refs, handler: (values: RefsToValues<Refs>) => void): void => {\n//     const values = [];\n//     for (const ref of refs) {\n//         if (isNil(ref.current)) {\n//             return;\n//         }\n//\n//         values.push(ref.current);\n//     }\n//\n//     handler(values as RefsToValues<Refs>);\n// };\n\n// type UndefinedLike = undefined | void | never;\n\n// type Voidy<T extends unknown | UndefinedLike> =\n//     Extract<T, UndefinedLike> extends never\n//         ? never\n//         : T;\n// T extends infer V | UndefinedLike\n//     ? V extends UndefinedLike\n//         ? never\n//         : T\n//     : never;\n\n// type Simplify<T> =\n//     T extends infer T1 | void | undefined\n//         ? T1 extends never\n//             ? T\n//             : Exclude<T, void> | undefined\n//         : T;\n// T extends undefined\n//     ? T extends void\n//         ? T extends void & undefined\n//             ? Exclude<T, void> | undefined\n//         : 2\n//     : 3\n// : 4;\n// T extends infer R | undefined | void\n//     ? R | undefined\n//     : T extends infer R | undefined\n//         ? R extends never\n//             ? void\n//         : T\n//     : T;\n","const scopedEval = (expression: string, context: object = {}) => {\n    const evaluator = Function.apply(null, [\n        ...Object.keys(context),\n        'expression',\n        'return eval(\"expression = undefined;\" + expression)'\n    ]);\n    return evaluator.apply(null, [...Object.values(context), expression]);\n};\n\nexport default scopedEval;\n"],"names":["NpmLink","packageName","plain","children","link","getNpmPackageLink","text","href","React","loadingNode","size","defaultOptions","minimap","enabled","className","loading","theme","onChange","options","props","isDarkMode","useAppTheme","editorOptions","useMemo","handleChange","useCallback","value","ev","classNames","navigator","clipboard","writeText","blob","write","ClipboardItem","type","isFunction","copyEmpty","onClick","icon","useState","isCopied","setIsCopied","copiedTimeoutRef","useRef","handleClick","event","replacedValue","actualValue","computeValue","current","clearTimeout","isNil","isString","copyText","Blob","copyBlob","setTimeout","CheckOutlined","CopyOutlined","realSwitchPropsNames","switchPropNames","switchProps","pick","styles","switchClassName","style","switchStyle","labelProps","omit","setState","onChangeRef","useAutoRef","callback","target","handleEventTargetValueChange","PageTag","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","config","url","URL","path","window","location","origin","toString","identifier","language","ref","shortname","getTagNodes","key","WIP","color","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","title","description","titleExtra","tags","noPadding","noContentPadding","contentClassName","contentRef","withComments","restProps","renderedTags","map","length","direction","Paragraph","OutputMode","createAddTypes","monaco","add","contents","typesLocation","languages","typescript","javascriptDefaults","addExtraLib","addLibrary","importedTypes","default","custom","MonacoExtraLibs","lodash","addTypes","axios","pluralize","moment","containerRef","objectViewerRef","useDidMount","container","Error","LunaObjectViewer","accessGetter","unenumerable","useEffect","processRef","objectViewer","set","setOption","textAreaShowCount","formatter","count","codeEditorOptions","fontFamily","handleCodeEditorBeforeMount","monacoExtraLibs","useLocalstorageState","getLocalStorageKey","$value","set$Value","set$ValueByEvent","useStateChangeByEventHandler","jsSource","setJsSource","evaluatedJs","setEvaluatedJs","evaluatedJsString","setEvaluatedJsString","isAutoEval","setIsAutoEval","outputMode","setOutputMode","isLoading","setIsLoading","evaluateJsDangerous","evalValue","undefined","scopedEval","_","$easterEgg","evalResult","console","log","evalResultString","isObjectLike","JSON","stringify","String","handleJsError","error","notification","message","constructor","name","getErrorMessage","evaluateJs","handleEveryEvalValueChange","ReferenceError","SyntaxError","TypeError","handleEvalValueChange","useDebounce","PageContainer","Flex","col","gap","minHeight","maxHeight","TextArea","rows","allowClear","showCount","placeholder","id","flex","Text","htmlFor","AppEditor","defaultLanguage","beforeMount","row","align","LabeledSwitch","checked","spinning","delay","readOnly","CopyButton","dangerouslySetInnerHTML","__html","scope","NULL_LOCALSTORAGE_KEY","handler","nilHandler","expression","context","evaluator","Function","apply","Object","keys","values"],"sourceRoot":""}