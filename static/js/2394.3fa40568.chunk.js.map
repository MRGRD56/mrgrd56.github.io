{"version":3,"file":"static/js/2394.3fa40568.chunk.js","mappings":"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","sources":["components/flex/Flex.tsx","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","utils/joinObjects.ts","pages/jsEventTesterPage/JsEventTesterPage.tsx"],"sourcesContent":["import React, { CSSProperties, FunctionComponent, HTMLProps, useMemo } from 'react';\nimport { defaults } from 'lodash';\n\ntype CSS = CSSProperties;\n\ninterface BaseProps extends HTMLProps<HTMLDivElement> {\n    justify?: CSS['justifyContent'];\n    align?: CSS['alignItems'];\n    alignContent?: CSS['alignContent'];\n    flex?: CSS['flex'];\n    gap?: CSS['gap'];\n    maxWidth?: CSS['maxWidth'];\n    maxHeight?: CSS['maxHeight'];\n}\n\ninterface PropsWithDirection extends BaseProps {\n    direction?: CSS['flexDirection'];\n    row?: never;\n    column?: never;\n}\n\ninterface PropsWithRow extends BaseProps {\n    direction?: never;\n    row: true;\n    column?: never;\n}\n\ninterface PropsWithColumn extends BaseProps {\n    direction?: never;\n    row?: never;\n    column: true;\n}\n\ntype Props = PropsWithDirection | PropsWithRow | PropsWithColumn;\n\n// type Props<T extends BaseProps> =\n//     T extends PropsWithDirection ? Exclude<PropsWithDirection, 'row' | 'column'> :\n//         T extends PropsWithRow ? PropsWithRow :\n//             T extends PropsWithColumn ? PropsWithColumn\n//                 : BaseProps;\n\nconst Flex: FunctionComponent<Props> = (props) => {\n    const {\n        row,\n        column,\n        direction,\n        justify,\n        align,\n        alignContent,\n        flex,\n        gap,\n        style,\n        maxWidth,\n        maxHeight,\n        children,\n        ...restProps\n    } = props;\n\n    const divStyle: CSS = useMemo(() => {\n        return defaults(\n            {\n                display: 'flex',\n                flexDirection: (() => {\n                    switch (true) {\n                        case row:\n                            return 'row';\n                        case column:\n                            return 'column';\n                        default:\n                            return direction;\n                    }\n                })(),\n                justifyContent: justify,\n                alignItems: align,\n                alignContent,\n                flex,\n                gap,\n                maxWidth,\n                maxHeight\n            },\n            style\n        );\n    }, [row, column, direction, justify, align, alignContent, flex, gap, style, maxWidth, maxHeight]);\n\n    return (\n        <div {...restProps} style={divStyle}>\n            {children}\n        </div>\n    );\n};\n\nexport default Flex;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)}>{children}</div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","const joinObjects = <T, S>(items: T[], separator: S): Array<T | S> => {\n    return items.reduce<Array<T | S>>((result, value, index) => {\n        if (index !== 0) {\n            result.push(separator);\n        }\n\n        result.push(value);\n        return result;\n    }, []);\n};\n\nexport default joinObjects;\n","import React, { FunctionComponent, ReactNode, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport Flex from '../../components/flex/Flex';\nimport { Tabs } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport joinObjects from '../../utils/joinObjects';\n\nconst JsEventTesterPage: FunctionComponent = () => {\n    const [lastKeyDownEvent, setLastKeyDownEvent] = useState<KeyboardEvent>();\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const pressedModifiers = useMemo<ReactNode[]>(() => {\n        if (!lastKeyDownEvent) {\n            return [];\n        }\n\n        return [\n            lastKeyDownEvent.ctrlKey && (\n                <Text keyboard key=\"modifier-ctrl\">\n                    Ctrl\n                </Text>\n            ),\n            lastKeyDownEvent.altKey && (\n                <Text keyboard key=\"modifier-alt\">\n                    Alt\n                </Text>\n            ),\n            lastKeyDownEvent.shiftKey && (\n                <Text keyboard key=\"modifier-shift\">\n                    Shift\n                </Text>\n            ),\n            lastKeyDownEvent.metaKey && (\n                <Text keyboard key=\"modifier-meta\">\n                    Win\n                </Text>\n            )\n        ].filter(Boolean);\n    }, [lastKeyDownEvent]);\n\n    const pressedShortcut = useMemo<ReactNode[]>(() => {\n        if (!lastKeyDownEvent) {\n            return [];\n        }\n\n        return [\n            ...pressedModifiers,\n            lastKeyDownEvent.location !== 1 && lastKeyDownEvent.location !== 2 && (\n                <Text keyboard key=\"pressed-key\">\n                    {lastKeyDownEvent.key.toUpperCase()}\n                </Text>\n            )\n        ].filter(Boolean);\n    }, [pressedModifiers, lastKeyDownEvent]);\n\n    const handleKeyDown = useCallback((event: KeyboardEvent) => {\n        event.stopImmediatePropagation();\n\n        console.log('keydown', event);\n        setLastKeyDownEvent(event);\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown]);\n\n    return (\n        <PageContainer ref={containerRef} title=\"JavaScript Event Tester\" tabIndex={-1}>\n            <Flex column maxWidth=\"800px\">\n                <Tabs>\n                    <Tabs.TabPane tab=\"keydown\">\n                        <Flex column>\n                            {lastKeyDownEvent ? (\n                                <Text className=\"fs-6\">\n                                    <Flex column gap={5}>\n                                        <Text strong className=\"fs-5\">\n                                            {joinObjects(pressedShortcut, <>+</>)}\n                                        </Text>\n                                        <div>\n                                            <Text code>event.key</Text>: <Text keyboard>{lastKeyDownEvent.key}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>event.code</Text>: <Text keyboard>{lastKeyDownEvent.code}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>event.which</Text>:{' '}\n                                            <Text keyboard>{lastKeyDownEvent.which}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>modifiers</Text>: {pressedModifiers}\n                                        </div>\n                                    </Flex>\n                                </Text>\n                            ) : (\n                                <Flex column gap={8}>\n                                    <Text strong>Press any key</Text>\n                                </Flex>\n                            )}\n                        </Flex>\n                    </Tabs.TabPane>\n                </Tabs>\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default JsEventTesterPage;\n"],"names":["props","row","column","direction","justify","align","alignContent","flex","gap","style","maxWidth","maxHeight","children","restProps","divStyle","useMemo","defaults","display","flexDirection","justifyContent","alignItems","PageTag","getTagNodes","key","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","ref","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","renderedTags","map","classNames","styles","length","size","Paragraph","items","separator","reduce","result","value","push","useState","lastKeyDownEvent","setLastKeyDownEvent","containerRef","useRef","pressedModifiers","ctrlKey","Text","keyboard","altKey","shiftKey","metaKey","filter","Boolean","pressedShortcut","location","toUpperCase","handleKeyDown","useCallback","event","stopImmediatePropagation","console","log","useEffect","window","addEventListener","removeEventListener","PageContainer","tabIndex","Flex","tab","strong","joinObjects","code","which"],"sourceRoot":""}