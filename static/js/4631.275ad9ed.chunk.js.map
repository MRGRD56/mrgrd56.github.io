{"version":3,"file":"static/js/4631.275ad9ed.chunk.js","mappings":"4MACA,EAA4B,2B,mECQtBA,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OAI/CC,EACO,CACLC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAK,GAqBb,EAjB0C,SAAC,GAAsC,EAApCC,UAAqC,IAA1BC,EAAyB,EAAzBA,SAAaC,GAAY,YACvEC,GAAYC,EAAAA,EAAAA,UAAQ,WACtB,IAAMC,GAAsBC,EAAAA,EAAAA,MAAKJ,EAAOT,GAExC,OAAO,kBACAS,IACAK,EAAAA,EAAAA,UAASF,EAAqBX,MAEtC,CAACQ,IAEJ,OACI,SAAC,KAAD,gBAAKF,UAAWQ,GAAAA,CAAWC,IAAuBN,GAAlD,aACKF,O,mGCxBb,EATuB,SAAmBS,GACtC,OAAOC,EAAAA,EAAAA,cAAY,SAAoBC,EAAQC,GAC3CH,GAAS,SAACI,GAAD,eAAC,UACHA,GADE,cAEJF,EAAMC,SAEZ,K,SCGME,EAAgB,SAACF,GAC1B,OAAOG,EAAAA,EAAAA,UAASH,IAAU,WAAYA,GCmB1C,EAzB8B,SAC1BH,GAEE,IADFO,EACC,uDADa,QAERC,EAAcC,EAAeT,GAEnC,OAAOC,EAAAA,EAAAA,cACH,SAAoCC,GAChC,OAAO,SAACC,GACJ,IAAMO,GAAcC,EAAAA,EAAAA,IAAK,WACrB,OAAIN,EAAcF,GACAA,EACDS,OAAOL,GAGjBJ,KAGXK,EAAYN,EAAKQ,MAGzB,CAACF,M,wKC1BT,GAAgB,SAAW,+BAA+B,MAAQ,4BAA4B,MAAQ,6B,4CCgEtG,EAtDwC,WACpC,OAA0DK,EAAAA,EAAAA,KAAlDC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAAgBC,EAArC,EAAqCA,iBAE/BC,GAAyBC,EAAAA,EAAAA,GAAsBH,GAE/CI,GAAmBlB,EAAAA,EAAAA,cAAY,WACjCmB,EAAAA,EAAAA,QAAc,CACVC,MAAO,+CACPC,MAAM,SAACC,EAAA,EAAD,IACNC,KAHU,WAINR,SAGT,CAACA,IAEES,GAAa/B,EAAAA,EAAAA,UAAQ,kBAAM,SAAC,IAAD,CAAQgC,QAASP,EAAjB,qBAAmD,CAACA,IAErF,OACI,SAACQ,EAAA,EAAD,CAAeN,MAAM,WAAWI,WAAYA,EAA5C,UACI,UAACG,EAAA,EAAD,CAAStC,UAAWS,EAAAA,cAApB,WACI,mBAAOT,UAAWS,EAAAA,SAAlB,WACI,iBAAMT,UAAWS,EAAAA,MAAjB,wBACA,UAAC,IAAD,CACIT,UAAWS,EAAAA,MACXI,MAAOW,EAAYe,MACnBC,SAAUb,EAAuB,SAHrC,WAKI,SAAC,WAAD,kBAAoBc,EAAAA,EAAAA,OACpB,SAAC,WAAD,mBAAoBC,EAAAA,EAAAA,QACpB,SAAC,WAAD,kBAAoBA,EAAAA,EAAAA,aAG5B,8BACI,SAAC,IAAD,CAAQC,QAASnB,EAAYoB,eAAgBJ,SAAUb,EAAuB,qBAC9E,kBAAM3B,UAAU,OAAhB,qBACW,SAAC6C,EAAA,EAAD,CAAcC,KAAK,oCAAnB,0BAGf,8BACI,SAAC,IAAD,CACIH,QAASnB,EAAYuB,sBACrBP,SAAUb,EAAuB,4BAErC,iBAAM3B,UAAU,OAAhB,wCAEJ,8BACI,SAAC,IAAD,CAAQ2C,QAASnB,EAAYwB,eAAgBR,SAAUb,EAAuB,qBAC9E,iBAAM3B,UAAU,OAAhB","sources":["webpack://mrgrd56.github.io/./src/components/pageCol/PageCol.module.scss?75ed","components/pageCol/PageCol.tsx","hooks/useChangeState.ts","hooks/useChangeAnyStateHandler.ts","hooks/useChangeStateHandler.ts","webpack://mrgrd56.github.io/./src/pages/settingsPage/SettingsPage.module.scss?c28e","pages/settingsPage/SettingsPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageCol_container__kQfmh\"};","import React, { FunctionComponent, useMemo } from 'react';\nimport { Col, ColProps } from 'antd';\nimport styles from './PageCol.module.scss';\nimport classNames from 'classnames';\nimport TupleToUnion from '../../types/common/TupleToUnion';\nimport { defaults, pick } from 'lodash';\n\ntype Props = ColProps;\n\nconst sizePropNames = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'] as const;\n\ntype SizeProps = Pick<ColProps, TupleToUnion<typeof sizePropNames>>;\n\nconst sizePropsDefaults: Record<'default', SizeProps> = {\n    default: {\n        xs: 24,\n        md: 18,\n        lg: 14,\n        xl: 10,\n        xxl: 8\n    }\n};\n\nconst PageCol: FunctionComponent<Props> = ({ className, children, ...props }) => {\n    const restProps = useMemo(() => {\n        const overriddenSizeProps = pick(props, sizePropNames);\n\n        return {\n            ...props,\n            ...defaults(overriddenSizeProps, sizePropsDefaults.default)\n        };\n    }, [props]);\n\n    return (\n        <Col className={classNames(styles.container)} {...restProps}>\n            {children}\n        </Col>\n    );\n};\n\nexport default PageCol;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n","// extracted by mini-css-extract-plugin\nexport default {\"formItem\":\"SettingsPage_formItem__zcES0\",\"label\":\"SettingsPage_label__2afMZ\",\"input\":\"SettingsPage_input__TfsRh\"};","import React, { FunctionComponent, useCallback, useMemo } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Button, Modal, Select, Switch } from 'antd';\nimport { useAppSettingsState } from '../../hooks/useAppSettings';\nimport ExternalLink from '../../components/ExternalLink';\nimport AppTheme, { SpecialAppTheme } from '../../types/AppTheme';\nimport styles from './SettingsPage.module.scss';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport PageCol from '../../components/pageCol/PageCol';\n\nconst SettingsPage: FunctionComponent = () => {\n    const { appSettings, setAppSettings, resetAppSettings } = useAppSettingsState();\n\n    const handleAppSettingChange = useChangeStateHandler(setAppSettings);\n\n    const handleResetClick = useCallback(() => {\n        Modal.confirm({\n            title: 'Are you sure you want to reset the settings?',\n            icon: <ExclamationCircleOutlined />,\n            onOk() {\n                resetAppSettings();\n            }\n        });\n    }, [resetAppSettings]);\n\n    const titleExtra = useMemo(() => <Button onClick={handleResetClick}>Reset</Button>, [handleResetClick]);\n\n    return (\n        <PageContainer title=\"Settings\" titleExtra={titleExtra}>\n            <PageCol className={styles.formContainer}>\n                <label className={styles.formItem}>\n                    <span className={styles.label}>App theme</span>\n                    <Select\n                        className={styles.input}\n                        value={appSettings.theme}\n                        onChange={handleAppSettingChange('theme')}\n                    >\n                        <Select.Option key={SpecialAppTheme.AUTO}>Auto</Select.Option>\n                        <Select.Option key={AppTheme.LIGHT}>Light</Select.Option>\n                        <Select.Option key={AppTheme.DARK}>Dark</Select.Option>\n                    </Select>\n                </label>\n                <label>\n                    <Switch checked={appSettings.isErudaEnabled} onChange={handleAppSettingChange('isErudaEnabled')} />\n                    <span className=\"ms-3\">\n                        Enable <ExternalLink href=\"https://github.com/liriliri/eruda\">Eruda</ExternalLink>\n                    </span>\n                </label>\n                <label>\n                    <Switch\n                        checked={appSettings.doShowHiddenMenuItems}\n                        onChange={handleAppSettingChange('doShowHiddenMenuItems')}\n                    />\n                    <span className=\"ms-3\">Show hidden menu items</span>\n                </label>\n                <label>\n                    <Switch checked={appSettings.isFooterHidden} onChange={handleAppSettingChange('isFooterHidden')} />\n                    <span className=\"ms-3\">Hide the footer</span>\n                </label>\n            </PageCol>\n        </PageContainer>\n    );\n};\n\nexport default SettingsPage;\n"],"names":["sizePropNames","sizePropsDefaults","xs","md","lg","xl","xxl","className","children","props","restProps","useMemo","overriddenSizeProps","pick","defaults","classNames","styles","setState","useCallback","key","value","state","isChangeEvent","isObject","property","changeState","useChangeState","actualValue","call","target","useAppSettingsState","appSettings","setAppSettings","resetAppSettings","handleAppSettingChange","useChangeStateHandler","handleResetClick","Modal","title","icon","ExclamationCircleOutlined","onOk","titleExtra","onClick","PageContainer","PageCol","theme","onChange","SpecialAppTheme","AppTheme","checked","isErudaEnabled","ExternalLink","href","doShowHiddenMenuItems","isFooterHidden"],"sourceRoot":""}