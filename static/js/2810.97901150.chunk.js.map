{"version":3,"file":"static/js/2810.97901150.chunk.js","mappings":"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","sources":["hooks/useChangeAnyStateHandler.ts","hooks/useChangeState.ts","hooks/useChangeStateHandler.ts","hooks/useInputState.ts","hooks/useStateChangeByEventHandler.ts","layouts/pages/pageContainer/PageContainer.tsx","webpack://mrgrd56.github.io/./src/layouts/pages/pageContainer/PageContainer.module.scss?0d25","components/disqusThread/DisqusThread.tsx","../node_modules/qrcode.react/lib/esm/index.js","../node_modules/rooks/dist/esm/hooks/useMutationObserver.js","components/contentTransformer/ContentTransformer.tsx","pages/qrGeneratorPage/QrGeneratorPage.tsx","utils/serializeXmlNode.ts","components/svgImage/SvgImage.tsx","webpack://mrgrd56.github.io/./src/pages/qrGeneratorPage/QrGeneratorPage.module.scss?7b84","components/canvasImage/CanvasImage.tsx","utils/getLocalStorageKey.ts","utils/getNpmPackageLink.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { isObject } from 'lodash';\nimport call from '../utils/call';\nimport ObjectKey from '../types/common/ObjectKey';\n\nexport interface TypedChangeEvent<T, P extends ObjectKey> {\n    target: {\n        [key in P]: T;\n    };\n}\n\nexport const isChangeEvent = (value: unknown): value is TypedChangeEvent<unknown, ObjectKey> => {\n    return isObject(value) && 'target' in value;\n};\n\nconst useChangeAnyStateHandler = <S, P extends ObjectKey>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    return (value: TypedChangeEvent<S, P> | S) => {\n        const actualValue = call(() => {\n            if (isChangeEvent(value)) {\n                const event = value as TypedChangeEvent<S, P>;\n                return event.target[property];\n            }\n\n            return value;\n        });\n\n        setState(actualValue);\n    };\n};\n\nexport default useChangeAnyStateHandler;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\n\nconst useChangeState = <S extends object>(setState: Dispatch<SetStateAction<S>>) => {\n    return useCallback(<K extends keyof S>(key: K, value: S[K]) => {\n        setState((state) => ({\n            ...state,\n            [key]: value\n        }));\n    }, []);\n};\n\nexport default useChangeState;\n","import { Dispatch, SetStateAction, useCallback } from 'react';\nimport call from '../utils/call';\nimport useChangeState from './useChangeState';\nimport { isChangeEvent, TypedChangeEvent } from './useChangeAnyStateHandler';\nimport ObjectKey from '../types/common/ObjectKey';\n\nconst useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n    setState: Dispatch<SetStateAction<S>>,\n    property: P = 'value' as P\n) => {\n    const changeState = useChangeState(setState);\n\n    return useCallback(\n        <K extends keyof S, T extends S[K]>(key: K) => {\n            return (value: TypedChangeEvent<T, P> | T) => {\n                const actualValue = call(() => {\n                    if (isChangeEvent(value)) {\n                        const event = value as TypedChangeEvent<T, P>;\n                        return event.target[property];\n                    }\n\n                    return value;\n                });\n\n                changeState(key, actualValue);\n            };\n        },\n        [changeState]\n    );\n};\n\nexport default useChangeStateHandler;\n\n// const useChangeStateHandler = <S extends object, P extends ObjectKey = 'value'>(\n//     setState: Dispatch<SetStateAction<S>>,\n//     defaultEventProperty: P = 'value' as P\n// ) => {\n//     const changeState = useChangeState(setState);\n//\n//     return useCallback(\n//         <K extends keyof S, T extends S[K], EP extends ObjectKey = P>(key: K, eventProperty: EP = defaultEventProperty as unknown as EP) => {\n//             return (value: TypedChangeEvent<T, EP> | T) => {\n//                 const actualValue = call(() => {\n//                     if (isChangeEvent(value)) {\n//                         const event = value as TypedChangeEvent<T, EP>;\n//                         return event.target[eventProperty];\n//                     }\n//\n//                     return value;\n//                 });\n//\n//                 changeState(key, actualValue);\n//             };\n//         },\n//         [changeState]\n//     );\n// };\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport useStateChangeByEventHandler from './useStateChangeByEventHandler';\n\ntype PossiblyUndefined<S, V> = V extends undefined ? S | undefined : S;\nexport type SetStateByEventAction<S> = (event: React.ChangeEvent<{ value: S }>) => void;\n\nfunction useInputState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>, SetStateByEventAction<S>];\nfunction useInputState<S = undefined>(): [\n    S | undefined,\n    Dispatch<SetStateAction<S | undefined>>,\n    SetStateByEventAction<S | undefined>\n];\nfunction useInputState<S>(initialState?: S | (() => S)) {\n    const [value, setValue] = useState<PossiblyUndefined<S, typeof initialState>>(initialState);\n    const setValueByEvent = useStateChangeByEventHandler(setValue);\n\n    return [value, setValue, setValueByEvent];\n}\n\nexport default useInputState;\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport useAutoRef from './useAutoRef';\n\nexport const handleEventTargetValueChange =\n    <S>(callback: (value: S) => void, onChange?: React.ChangeEventHandler<{ value: S }>) =>\n    (event: React.ChangeEvent<{ value: S }>) => {\n        callback(event.target.value);\n        onChange?.(event);\n    };\n\nconst useStateChangeByEventHandler = <S>(\n    setState: Dispatch<SetStateAction<S>>,\n    onChange?: React.ChangeEventHandler<{ value: S }>\n) => {\n    const onChangeRef = useAutoRef(onChange);\n\n    return useCallback(handleEventTargetValueChange(setState, onChangeRef.current), [setState]);\n};\n\nexport default useStateChangeByEventHandler;\n","import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__KmrZF\",\"noPadding\":\"PageContainer_noPadding__74Oon\",\"noContentPadding\":\"PageContainer_noContentPadding__rSQgs\",\"headingContainer\":\"PageContainer_headingContainer__ScW-F\",\"contentContainer\":\"PageContainer_contentContainer__l-gCb\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw \"Version value out of range\";\n      if (msk < -1 || msk > 7)\n        throw \"Mask value out of range\";\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw \"Invalid value\";\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw \"Data too long\";\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw \"Invalid argument\";\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw \"Invalid argument\";\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw \"Mask value out of range\";\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw \"Unreachable\";\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw \"Version number out of range\";\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw \"Degree out of range\";\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw \"Byte out of range\";\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw \"Value out of range\";\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw \"Assertion error\";\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw \"Invalid argument\";\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw \"String contains non-numeric characters\";\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw \"String contains unencodable characters in alphanumeric mode\";\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw \"ECI assignment value out of range\";\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw \"ECI assignment value out of range\";\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_PROPS = {\n  size: 128,\n  level: \"L\",\n  bgColor: \"#FFFFFF\",\n  fgColor: \"#000000\",\n  includeMargin: false\n};\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(props, cells) {\n  const { imageSettings, size, includeMargin } = props;\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  function update() {\n    const { value: value2, size: size2, level: level2, bgColor: bgColor2, fgColor: fgColor2, includeMargin: includeMargin2 } = props;\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value2, ERROR_LEVEL_MAP[level2]).getModules();\n      const margin = includeMargin2 ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(props, cells);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size2 * pixelRatio;\n      const scale = size2 / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor2;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor2;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  }\n  useEffect(() => {\n    update();\n  });\n  const _a = props, {\n    value,\n    size,\n    level,\n    bgColor,\n    fgColor,\n    style,\n    includeMargin,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"style\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  let imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        update();\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nQRCodeCanvas.defaultProps = DEFAULT_PROPS;\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size,\n    level,\n    bgColor,\n    fgColor,\n    includeMargin,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(props, cells);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    shapeRendering: \"crispEdges\",\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath\n  }), image);\n}\nQRCodeSVG.defaultProps = DEFAULT_PROPS;\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  const Component = renderAs === \"svg\" ? QRCodeSVG : QRCodeCanvas;\n  return /* @__PURE__ */ React.createElement(Component, __spreadValues({}, otherProps));\n};\nQRCode.defaultProps = __spreadValues({ renderAs: \"canvas\" }, DEFAULT_PROPS);\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import { useEffect } from \"react\";\nvar config = {\n    attributes: true,\n    characterData: true,\n    childList: true,\n    subtree: true,\n};\n/**\n *\n * useMutationObserver hook\n *\n * Returns a mutation observer for a React Ref and fires a callback\n *\n * @param {MutableRefObject<HTMLElement | null>} ref React ref on which mutations are to be observed\n * @param {MutationCallback} callback Function that needs to be fired on mutation\n * @param {MutationObserverInit} options\n */\nfunction useMutationObserver(ref, callback, options) {\n    if (options === void 0) { options = config; }\n    useEffect(function () {\n        // Create an observer instance linked to the callback function\n        if (ref.current) {\n            var observer_1 = new MutationObserver(callback);\n            // Start observing the target node for configured mutations\n            observer_1.observe(ref.current, options);\n            return function () {\n                observer_1.disconnect();\n            };\n        }\n    }, [callback, options]);\n}\nexport { useMutationObserver };\n","import React, { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useMutationObserver } from 'rooks';\n\ninterface Props {\n    transform: (element: Element) => ReactNode;\n    children?: ReactNode;\n}\n\nfunction ContentTransformer({ transform, children }: Props) {\n    const childrenWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [transformedElement, setTransformedElement] = useState<ReactNode>();\n\n    const handleChildrenMutation = useCallback(() => {\n        const { current } = childrenWrapperRef;\n\n        if (!current) {\n            return;\n        }\n\n        const transformingElement = current.children?.[0];\n\n        if (!transformingElement) {\n            return;\n        }\n\n        setTransformedElement(transform(transformingElement));\n    }, [transform]);\n\n    useEffect(handleChildrenMutation, [handleChildrenMutation]);\n    useMutationObserver(childrenWrapperRef, handleChildrenMutation);\n\n    return (\n        <>\n            {transformedElement}\n            <div ref={childrenWrapperRef} className=\"d-none\">\n                {children}\n            </div>\n        </>\n    );\n}\n\nexport default ContentTransformer;\n","import React, { FunctionComponent, useCallback, useMemo, useRef } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport { Col, Input, InputNumber, Switch, Tabs } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport useInputState from '../../hooks/useInputState';\nimport { QRCodeCanvas, QRCodeSVG } from 'qrcode.react';\nimport SvgImage from '../../components/svgImage/SvgImage';\nimport styles from './QrGeneratorPage.module.scss';\nimport classNames from 'classnames';\nimport Text from 'antd/lib/typography/Text';\nimport ExternalLink from '../../components/ExternalLink';\nimport getNpmPackageLink from '../../utils/getNpmPackageLink';\nimport { useLocalstorageState } from 'rooks';\nimport useChangeStateHandler from '../../hooks/useChangeStateHandler';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\nimport CanvasImage from '../../components/canvasImage/CanvasImage';\n\nconst titleExtra = (\n    <Text type=\"secondary\">\n        uses <ExternalLink href={getNpmPackageLink('qrcode.react')}>qrcode.react</ExternalLink>\n    </Text>\n);\n\ninterface QrOptions {\n    size: number;\n    fgColor: string;\n    bgColor: string;\n    doIncludeMargin: boolean;\n}\n\nconst qrOptionsDefault: QrOptions = {\n    size: 220,\n    fgColor: '#000000',\n    bgColor: '#ffffff',\n    doIncludeMargin: true\n};\n\nenum QrOutputFormat {\n    SVG_IMAGE = 'SVG_IMAGE',\n    PNG_IMAGE = 'PNG_IMAGE'\n}\n\nconst QrGeneratorPage: FunctionComponent = () => {\n    const qrCodeWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [text, , setTextByEvent] = useInputState<string>('');\n    const [qrOptions, setQrOptions] = useLocalstorageState<QrOptions>(\n        getLocalStorageKey('qr-generator', 'qrOptions'),\n        qrOptionsDefault\n    );\n    const [outputFormat, setOutputFormat] = useLocalstorageState<QrOutputFormat>(\n        getLocalStorageKey('qr-generator', 'outputFormat'),\n        QrOutputFormat.SVG_IMAGE\n    );\n\n    const handleQrOptionChange = useChangeStateHandler(setQrOptions);\n\n    const handleOutputFormatChange = useCallback((key: string) => {\n        setOutputFormat(key as QrOutputFormat);\n    }, []);\n\n    const qrProps = useMemo(\n        () => ({\n            value: text,\n            size: qrOptions.size,\n            fgColor: qrOptions.fgColor,\n            bgColor: qrOptions.bgColor,\n            includeMargin: qrOptions.doIncludeMargin,\n            level: undefined\n        }),\n        [text, qrOptions]\n    );\n\n    return (\n        <PageContainer title=\"QR Generator\" titleExtra={titleExtra}>\n            <Col xs={24} lg={12}>\n                <TextArea value={text} onChange={setTextByEvent} placeholder=\"Input text\" rows={3} allowClear />\n                <label className={classNames(styles.formItem, 'mt-2')}>\n                    <div>Size</div>\n                    <InputNumber\n                        value={qrOptions.size}\n                        onChange={handleQrOptionChange('size')}\n                        className={styles.numericInput}\n                    />\n                </label>\n                <label className={styles.formItem}>\n                    <div>Foreground</div>\n                    <Input\n                        value={qrOptions.fgColor}\n                        onChange={handleQrOptionChange('fgColor')}\n                        className=\"font-monospace\"\n                    />\n                </label>\n                <label className={styles.formItem}>\n                    <div>Background</div>\n                    <Input\n                        value={qrOptions.bgColor}\n                        onChange={handleQrOptionChange('bgColor')}\n                        className=\"font-monospace\"\n                    />\n                </label>\n                <label className={classNames(styles.formItem, styles.switchFormItem)}>\n                    <Switch checked={qrOptions.doIncludeMargin} onChange={handleQrOptionChange('doIncludeMargin')} />\n                    <div>Margin</div>\n                </label>\n                <div ref={qrCodeWrapperRef} className={styles.qrCodeWrapper}>\n                    <Tabs activeKey={outputFormat} onChange={handleOutputFormatChange}>\n                        <Tabs.TabPane tab=\"SVG\" key={QrOutputFormat.SVG_IMAGE}>\n                            <SvgImage>\n                                <QRCodeSVG {...qrProps} />\n                            </SvgImage>\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"PNG\" key={QrOutputFormat.PNG_IMAGE}>\n                            <CanvasImage>\n                                <QRCodeCanvas {...qrProps} />\n                            </CanvasImage>\n                        </Tabs.TabPane>\n                    </Tabs>\n                </div>\n            </Col>\n        </PageContainer>\n    );\n};\n\nexport default QrGeneratorPage;\n","const xmlSerializer = new XMLSerializer();\n\nconst serializeXmlNode = (node: Node): string => {\n    return xmlSerializer.serializeToString(node);\n};\n\nexport default serializeXmlNode;\n","import React, { FunctionComponent } from 'react';\nimport ContentTransformer from '../contentTransformer/ContentTransformer';\nimport serializeXmlNode from '../../utils/serializeXmlNode';\n\nconst transform = (element: Element) => {\n    const svgString = serializeXmlNode(element);\n    const svgBase64 = window.btoa(svgString);\n    const src = 'data:image/svg+xml;base64,' + svgBase64;\n\n    return <img src={src} />;\n};\n\nconst SvgImage: FunctionComponent = ({ children }) => {\n    return <ContentTransformer transform={transform}>{children}</ContentTransformer>;\n};\n\nexport default SvgImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"formItem\":\"QrGeneratorPage_formItem__dvSqT\",\"switchFormItem\":\"QrGeneratorPage_switchFormItem__gVH69\",\"numericInput\":\"QrGeneratorPage_numericInput__SKJth\",\"qrCodeWrapper\":\"QrGeneratorPage_qrCodeWrapper__mHtGM\"};","import React, { FunctionComponent, ReactNode } from 'react';\nimport ContentTransformer from '../contentTransformer/ContentTransformer';\n\nconst transform = (element: Element): ReactNode => {\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('element is not a canvas');\n    }\n\n    const { width, height } = window.getComputedStyle(element);\n\n    return <img src={element.toDataURL()} width={Number.parseInt(width)} height={Number.parseInt(height)} />;\n};\n\nconst CanvasImage: FunctionComponent = ({ children }) => {\n    return <ContentTransformer transform={transform}>{children}</ContentTransformer>;\n};\n\nexport default CanvasImage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n","const getNpmPackageLink = (packageName: string): string => `https://www.npmjs.com/package/${packageName}`;\n\nexport default getNpmPackageLink;\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["isChangeEvent","value","isObject","setState","property","actualValue","call","target","useCallback","key","state","changeState","useChangeState","initialState","useState","setValue","useStateChangeByEventHandler","onChange","onChangeRef","useAutoRef","callback","event","handleEventTargetValueChange","current","PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","useRef","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","getTagNodes","WIP","color","icon","ClockCircleOutlined","NOT_WORKING","WarningOutlined","renderTag","tag","index","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","Paragraph","qrcodegen","qrcodegen2","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","a","b","prop","__objRest","source","exclude","indexOf","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","this","modules","isFunction","MIN_VERSION","MAX_VERSION","row","i","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","data","formatBits","rem","bits","getBit","Math","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","ecl","getNumDataCodewords","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","concat","result","forEach","block","right","vert","invert","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","splice","n","core","currentRunColor","currentRunLength","pop","unshift","text","segs","QrSegment","makeSegments","encodeSegments","seg","makeBytes","dataUsedBits","minVersion","maxVersion","boostEcl","dataCapacityBits2","usedBits","getTotalBits","Ecc","MEDIUM","QUARTILE","HIGH","newEcl","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","degree","root","reedSolomonMultiply","divisor","_","factor","shift","coef","z","QrCode","val","len","cond","bitData","_QrSegment","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_PROPS","level","bgColor","fgColor","includeMargin","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","e","QRCodeCanvas","_canvas","_image","update","value2","size2","level2","bgColor2","fgColor2","includeMargin2","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","useEffect","_a","style","otherProps","canvasStyle","img","imgSrc","src","display","onLoad","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","shapeRendering","viewBox","d","defaultProps","renderAs","attributes","characterData","childList","subtree","QrOutputFormat","options","transform","childrenWrapperRef","transformedElement","setTransformedElement","handleChildrenMutation","transformingElement","observer_1","MutationObserver","observe","disconnect","xmlSerializer","XMLSerializer","node","serializeToString","element","svgString","serializeXmlNode","btoa","HTMLCanvasElement","Error","getComputedStyle","toDataURL","Number","Text","type","ExternalLink","href","getNpmPackageLink","qrOptionsDefault","doIncludeMargin","qrCodeWrapperRef","useInputState","setTextByEvent","useLocalstorageState","getLocalStorageKey","qrOptions","setQrOptions","SVG_IMAGE","outputFormat","setOutputFormat","handleQrOptionChange","useChangeStateHandler","handleOutputFormatChange","qrProps","undefined","PageContainer","xs","lg","TextArea","placeholder","rows","allowClear","checked","activeKey","tab","PNG_IMAGE","scope","name","NULL_LOCALSTORAGE_KEY","packageName","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","done","_e","f","TypeError","err","normalCompletion","didErr","next","_e2"],"sourceRoot":""}