{"version":3,"file":"static/js/2892.83fc7b9d.chunk.js","mappings":"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","sources":["layouts/pages/pageContainer/PageContainer.tsx","layouts/pages/pageContainer/PageContainer.module.scss","components/disqusThread/DisqusThread.tsx","utils/joinObjects.ts","pages/jsEventTesterPage/JsEventTesterPage.tsx","utils/getLocalStorageKey.ts"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__0XdUl\",\"noPadding\":\"PageContainer_noPadding__8qKdC\",\"noContentPadding\":\"PageContainer_noContentPadding__e8KpM\",\"headingContainer\":\"PageContainer_headingContainer__oss+6\",\"contentContainer\":\"PageContainer_contentContainer__1pGdM\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","const joinObjects = <T, S>(items: T[], separator: S): Array<T | S> => {\n    return items.reduce<Array<T | S>>((result, value, index) => {\n        if (index !== 0) {\n            result.push(separator);\n        }\n\n        result.push(value);\n        return result;\n    }, []);\n};\n\nexport default joinObjects;\n","import React, { FunctionComponent, ReactNode, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport Flex from '../../components/flex/Flex';\nimport { Switch, Tabs } from 'antd';\nimport Text from 'antd/lib/typography/Text';\nimport joinObjects from '../../utils/joinObjects';\nimport { useLocalstorageState } from 'rooks';\nimport getLocalStorageKey from '../../utils/getLocalStorageKey';\n\nconst JsEventTesterPage: FunctionComponent = () => {\n    const [lastKeyDownEvent, setLastKeyDownEvent] = useState<KeyboardEvent>();\n    const [doPreventDefault, setDoPreventDefault] = useLocalstorageState<boolean>(\n        getLocalStorageKey('js-event-tester/keydown', 'doPreventDefault'),\n        false\n    );\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const pressedModifiers = useMemo<ReactNode[]>(() => {\n        if (!lastKeyDownEvent) {\n            return [];\n        }\n\n        return [\n            lastKeyDownEvent.ctrlKey && (\n                <Text keyboard key=\"modifier-ctrl\">\n                    Ctrl\n                </Text>\n            ),\n            lastKeyDownEvent.altKey && (\n                <Text keyboard key=\"modifier-alt\">\n                    Alt\n                </Text>\n            ),\n            lastKeyDownEvent.shiftKey && (\n                <Text keyboard key=\"modifier-shift\">\n                    Shift\n                </Text>\n            ),\n            lastKeyDownEvent.metaKey && (\n                <Text keyboard key=\"modifier-meta\">\n                    Win\n                </Text>\n            )\n        ].filter(Boolean);\n    }, [lastKeyDownEvent]);\n\n    const pressedShortcut = useMemo<ReactNode[]>(() => {\n        if (!lastKeyDownEvent) {\n            return [];\n        }\n\n        return [\n            ...pressedModifiers,\n            lastKeyDownEvent.location !== 1 && lastKeyDownEvent.location !== 2 && (\n                <Text keyboard key=\"pressed-key\">\n                    {lastKeyDownEvent.key.toUpperCase()}\n                </Text>\n            )\n        ].filter(Boolean);\n    }, [pressedModifiers, lastKeyDownEvent]);\n\n    const handleKeyDown = useCallback(\n        (event: KeyboardEvent) => {\n            if (doPreventDefault) {\n                event.preventDefault();\n            }\n            event.stopImmediatePropagation();\n\n            console.log('keydown', event);\n            setLastKeyDownEvent(event);\n        },\n        [doPreventDefault]\n    );\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [handleKeyDown]);\n\n    return (\n        <PageContainer ref={containerRef} title=\"JavaScript Event Tester\" tabIndex={-1}>\n            <Flex col maxWidth=\"800px\">\n                <Tabs>\n                    <Tabs.TabPane tab=\"keydown\">\n                        <Flex col gap={16}>\n                            {lastKeyDownEvent ? (\n                                <Text className=\"fs-6\">\n                                    <Flex col gap={5}>\n                                        <Text strong className=\"fs-5\">\n                                            {joinObjects(pressedShortcut, <>+</>)}\n                                        </Text>\n                                        <div>\n                                            <Text code>event.key</Text>: <Text keyboard>{lastKeyDownEvent.key}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>event.code</Text>: <Text keyboard>{lastKeyDownEvent.code}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>event.which</Text>:{' '}\n                                            <Text keyboard>{lastKeyDownEvent.which}</Text>\n                                        </div>\n                                        <div>\n                                            <Text code>modifiers</Text>: {pressedModifiers}\n                                        </div>\n                                    </Flex>\n                                </Text>\n                            ) : (\n                                <Flex col gap={8}>\n                                    <Text strong>Press any key</Text>\n                                </Flex>\n                            )}\n                            <label className=\"d-flex flex-row align-items-center gap-2\">\n                                <Switch checked={doPreventDefault} onChange={setDoPreventDefault} />\n                                preventDefault\n                            </label>\n                        </Flex>\n                    </Tabs.TabPane>\n                </Tabs>\n            </Flex>\n        </PageContainer>\n    );\n};\n\nexport default JsEventTesterPage;\n","const getLocalStorageKey = (scope: string, name: string): string => {\n    return `mrgrd56:${scope}/${name}`;\n};\n\nexport const NULL_LOCALSTORAGE_KEY = getLocalStorageKey('global', 'null');\n\nexport default getLocalStorageKey;\n"],"names":["PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","useRef","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","renderTag","tag","index","key","WIP","color","icon","NOT_WORKING","getTagNodes","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","items","separator","reduce","result","value","push","useState","lastKeyDownEvent","setLastKeyDownEvent","useLocalstorageState","getLocalStorageKey","doPreventDefault","setDoPreventDefault","containerRef","pressedModifiers","ctrlKey","keyboard","altKey","shiftKey","metaKey","filter","Boolean","pressedShortcut","toUpperCase","handleKeyDown","useCallback","event","preventDefault","stopImmediatePropagation","console","log","useEffect","addEventListener","removeEventListener","tabIndex","col","maxWidth","tab","gap","strong","joinObjects","code","which","checked","onChange","scope","name","NULL_LOCALSTORAGE_KEY"],"sourceRoot":""}