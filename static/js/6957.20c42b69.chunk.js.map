{"version":3,"file":"static/js/6957.20c42b69.chunk.js","mappings":"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","sources":["layouts/pages/pageContainer/PageContainer.tsx","layouts/pages/pageContainer/PageContainer.module.scss","components/disqusThread/DisqusThread.tsx","pages/jetBrainsUiPage/components/jbLayout/JbLayout.module.scss","pages/jetBrainsUiPage/components/jbLayout/JbLayout.tsx","pages/jetBrainsUiPage/components/jbButton/JbButton.module.scss","pages/jetBrainsUiPage/components/jbButton/JbButton.tsx","pages/jetBrainsUiPage/JetBrainsUiPage.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport styles from './PageContainer.module.scss';\nimport { Space, SpaceProps, Tag } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport { ClockCircleOutlined, WarningOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport DisqusThread from '../../../components/disqusThread/DisqusThread';\n\nexport enum PageTag {\n    WIP = 'WIP',\n    NOT_WORKING = 'NOT_WORKING'\n}\n\nexport interface PageContainerProps extends Omit<SpaceProps, 'title'> {\n    contentRef?: React.Ref<HTMLDivElement>;\n    contentClassName?: string;\n    title?: ReactNode;\n    description?: ReactNode;\n    titleExtra?: ReactNode;\n    tags?: PageTag[];\n    noPadding?: boolean;\n    noContentPadding?: boolean;\n    withComments?: boolean;\n}\n\nconst getTagNodes = (key: number | string): Readonly<Record<PageTag, ReactNode>> => ({\n    [PageTag.WIP]: (\n        <Tag color=\"blue\" icon={<ClockCircleOutlined />} key={key}>\n            Work In Progress\n        </Tag>\n    ),\n    [PageTag.NOT_WORKING]: (\n        <Tag color=\"red\" icon={<WarningOutlined />} key={key}>\n            Not Working\n        </Tag>\n    )\n});\n\nconst renderTag = (tag: PageTag, index: number) => getTagNodes(index)[tag];\n\nconst PageContainer = React.forwardRef<HTMLDivElement, PageContainerProps>((props, ref) => {\n    const {\n        title,\n        description,\n        titleExtra,\n        tags,\n        noPadding,\n        noContentPadding,\n        children,\n        className,\n        contentClassName,\n        contentRef,\n        withComments,\n        ...restProps\n    } = props;\n\n    const renderedTags = useMemo(() => tags?.map(renderTag), [tags]);\n\n    return (\n        <div\n            ref={ref}\n            className={classNames(\n                styles.container,\n                {\n                    [styles.noPadding]: noPadding,\n                    [styles.noContentPadding]: noContentPadding\n                },\n                className\n            )}\n            {...restProps}\n        >\n            {tags?.length && <div>{renderedTags}</div>}\n            {title && (\n                <Space direction=\"horizontal\" size=\"middle\" className={styles.headingContainer}>\n                    <h1 className=\"mb-0\">{title}</h1>\n                    {titleExtra}\n                </Space>\n            )}\n            {description && <Paragraph className=\"mb-2\">{description}</Paragraph>}\n\n            <div className={classNames(styles.contentContainer, contentClassName)} ref={contentRef}>\n                {children}\n                {withComments && <DisqusThread className=\"mt-4\" />}\n            </div>\n        </div>\n    );\n});\n\nexport default PageContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PageContainer_container__0XdUl\",\"noPadding\":\"PageContainer_noPadding__8qKdC\",\"noContentPadding\":\"PageContainer_noContentPadding__e8KpM\",\"headingContainer\":\"PageContainer_headingContainer__oss+6\",\"contentContainer\":\"PageContainer_contentContainer__1pGdM\"};","import React, { FC, HTMLProps, useMemo, useRef } from 'react';\nimport { DiscussionEmbed } from 'disqus-react';\nimport useAppLocation from '../../hooks/useAppLocation';\nimport useAppSettings from '../../hooks/useAppSettings';\n\ntype Props = HTMLProps<HTMLDivElement>;\n\ntype DiscussionEmbedConfig = DiscussionEmbed['props']['config'];\n\n// const handleReactionClick = (event: MouseEvent) => {\n//     const item = event.target;\n//\n//     console.log('CLICK', {item});\n// };\n\nconst DisqusThread: FC<Props> = ({ children, ...props }) => {\n    const appRoute = useAppLocation();\n    const { isCommentsBlockHidden } = useAppSettings();\n\n    const discussionContainerRef = useRef<HTMLDivElement>(null);\n    const getDiscussion: () => HTMLDivElement | undefined = () => {\n        return (discussionContainerRef.current?.firstElementChild ?? undefined) as HTMLDivElement | undefined;\n    };\n\n    const config = useMemo<DiscussionEmbedConfig>(\n        () => ({\n            url: new URL(appRoute?.path ?? '', window.location.origin).toString(),\n            identifier: appRoute?.path,\n            language: navigator.language\n        }),\n        [appRoute]\n    );\n\n    // useEffect(() => {\n    //     debugger;\n    //     const discussion = getDiscussion();\n    //     if (!discussion) {\n    //         return;\n    //     }\n    //\n    //     const reactionItemsContainer = discussion.querySelector('.reaction-items');\n    //     if (!reactionItemsContainer) {\n    //         return;\n    //     }\n    //\n    //     const reactionItems: NodeListOf<HTMLElement> = reactionItemsContainer.querySelectorAll('.reaction-item.reaction-item__enabled:not(.reaction-item__selected)');\n    //\n    //     reactionItems.forEach(item => {\n    //         item.addEventListener('click', handleReactionClick);\n    //     });\n    //\n    //     return () => {\n    //         reactionItems.forEach(item => {\n    //             item.removeEventListener('click', handleReactionClick);\n    //         });\n    //     };\n    // }, []);\n\n    if (isCommentsBlockHidden) {\n        return null;\n    }\n\n    return (\n        <div {...props} ref={discussionContainerRef}>\n            <DiscussionEmbed shortname=\"mrgrd56\" config={config} />\n            {children}\n        </div>\n    );\n};\n\nexport default DisqusThread;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"JbLayout_antd-text-primary__uqT1a\",\"ant-tabs-first-tab-indent\":\"JbLayout_ant-tabs-first-tab-indent__54P37\",\"ant-tabs-tab\":\"JbLayout_ant-tabs-tab__ob+Pj\",\"ant-tabs-no-w100-but-max\":\"JbLayout_ant-tabs-no-w100-but-max__bgzai\",\"ant-tabs-tabpane\":\"JbLayout_ant-tabs-tabpane__763Gi\",\"container\":\"JbLayout_container__5Htc5\"};","import React, { FunctionComponent, HTMLProps } from 'react';\nimport styles from './JbLayout.module.scss';\nimport classNames from 'classnames';\n\nexport interface JbLayoutProps extends HTMLProps<HTMLDivElement> {}\n\nconst JbLayout: FunctionComponent<JbLayoutProps> = ({ className, ...props }) => {\n    return <div className={classNames(styles.container, className)} {...props} />;\n};\n\nexport default JbLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"antd-text-primary\":\"JbButton_antd-text-primary__sFreG\",\"ant-tabs-first-tab-indent\":\"JbButton_ant-tabs-first-tab-indent__bUicg\",\"ant-tabs-tab\":\"JbButton_ant-tabs-tab__3hzGM\",\"ant-tabs-no-w100-but-max\":\"JbButton_ant-tabs-no-w100-but-max__8d9ME\",\"ant-tabs-tabpane\":\"JbButton_ant-tabs-tabpane__jhvj+\",\"button\":\"JbButton_button__3Jx3y\",\"primary\":\"JbButton_primary__PZmHS\"};","import React, { FunctionComponent, HTMLProps } from 'react';\nimport classNames from 'classnames';\nimport styles from './JbButton.module.scss';\n\nexport type JbButtonType = 'default' | 'primary';\n\nexport interface JbButtonProps extends HTMLProps<HTMLButtonElement> {\n    type?: JbButtonType;\n}\n\nconst JbButton: FunctionComponent<JbButtonProps> = ({ type, className, ...props }) => {\n    return <button className={classNames(styles.button, type === 'primary' && styles.primary, className)} {...props} />;\n};\n\nexport default JbButton;\n","import React, { FunctionComponent } from 'react';\nimport PageContainer from '../../layouts/pages/pageContainer/PageContainer';\nimport styles from './JetBrainsUiPage.module.scss';\nimport JbLayout from './components/jbLayout/JbLayout';\nimport JbButton from './components/jbButton/JbButton';\nimport Flex from '../../components/flex/Flex';\n\nconst JetBrainsUiPage: FunctionComponent = () => {\n    return (\n        <PageContainer title=\"JetBrains UI\">\n            <JbLayout>\n                <Flex gap={15}>\n                    <JbButton type=\"primary\">Create</JbButton>\n                    <JbButton>Cancel</JbButton>\n                </Flex>\n            </JbLayout>\n        </PageContainer>\n    );\n};\n\nexport default JetBrainsUiPage;\n"],"names":["PageTag","children","props","appRoute","useAppLocation","isCommentsBlockHidden","useAppSettings","discussionContainerRef","useRef","config","useMemo","url","URL","path","window","location","origin","toString","identifier","language","navigator","ref","shortname","renderTag","tag","index","key","WIP","color","icon","NOT_WORKING","getTagNodes","React","title","description","titleExtra","tags","noPadding","noContentPadding","className","contentClassName","contentRef","withComments","restProps","renderedTags","map","classNames","styles","length","direction","size","type","gap"],"sourceRoot":""}